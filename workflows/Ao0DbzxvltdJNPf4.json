{
  "active": false,
  "connections": {
    "Webhook - URL": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Extract Property Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Property Info": {
      "main": [
        [
          {
            "node": "Process Property Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Property Data": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Prepare Redis Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Redis Data": {
      "main": [
        [
          {
            "node": "Redis Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Set": {
      "main": [
        [
          {
            "node": "Generate Initial Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Initial Response": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook - Question": {
      "main": [
        [
          {
            "node": "Redis Get",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Get": {
      "main": [
        [
          {
            "node": "Process Question",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Question": {
      "main": [
        [
          {
            "node": "Is First Message?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is First Message?": {
      "main": [
        [
          {
            "node": "Name Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Asking About Garage?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Asking About Garage?": {
      "main": [
        [
          {
            "node": "Garage Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Is Asking For Manager?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Asking For Manager?": {
      "main": [
        [
          {
            "node": "Manager Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "General Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Name Response": {
      "main": [
        [
          {
            "node": "Update Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Garage Response": {
      "main": [
        [
          {
            "node": "Update Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manager Response": {
      "main": [
        [
          {
            "node": "Update Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "General Response": {
      "main": [
        [
          {
            "node": "Update Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Session": {
      "main": [
        [
          {
            "node": "Redis Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Update": {
      "main": [
        [
          {
            "node": "Question Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-03-19T12:05:05.101Z",
  "id": "Ao0DbzxvltdJNPf4",
  "isArchived": false,
  "meta": null,
  "name": "Scraping",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "tester",
        "options": {}
      },
      "id": "8f9dfb4a-3c37-4ab8-b042-1566c3a1ea7e",
      "name": "Webhook - URL",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1080,
        -380
      ],
      "webhookId": "859dac38-3473-453a-904a-e7b803a4566e"
    },
    {
      "parameters": {
        "url": "=https://r.jina.ai/{{ $json.body.data.message.conversation }}",
        "options": {}
      },
      "id": "b9d4a520-a8d9-46ca-a7ae-56dcc340d671",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -880,
        -380
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $json.data }}"
            },
            {
              "content": "=extrae el código de la propiedad, tanto de zonaprop, argenprop o cualquier código referido a la propiedad. También extrae toda la información relevante de esta propiedad inmobiliaria, incluyendo:\n- Tipo de propiedad\n- Ubicación\n- Precio\n- Superficie\n- Cantidad de ambientes\n- Cantidad de dormitorios\n- Cantidad de baños\n- Cocheras (si tiene)\n\nEstructura la respuesta en formato JSON como este ejemplo:\n{\n  \"codigo\": \"53196970\",\n  \"tipo\": \"Casa\",\n  \"ubicacion\": \"Palermo, Capital Federal\",\n  \"precio\": \"USD 450,000\",\n  \"superficie\": \"310 m²\",\n  \"ambientes\": 10,\n  \"dormitorios\": 4,\n  \"baños\": 3,\n  \"cocheras\": 2,\n  \"descripcion\": \"Casa en venta de 3 plantas apta para múltiples destinos...\"\n}",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "id": "128db0a9-97a0-494d-8a4c-cecdc2283c1b",
      "name": "Extract Property Info",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -600,
        -380
      ],
      "credentials": {
        "openAiApi": {
          "id": "UfA35dBDzEebw8zR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Procesar la respuesta de OpenAI\nlet propertyData;\ntry {\n  // Intentar parsear como JSON\n  propertyData = JSON.parse($input.first().json.message.content);\n} catch (e) {\n  // Si no viene como JSON, crear un objeto con el texto completo\n  propertyData = {\n    rawInfo: $input.first().json.message.content,\n    title: \"Información de la propiedad\"\n  };\n}\n\n// Obtener el código si no lo extrajo el modelo\nif (!propertyData.codigo) {\n  const url = $('Webhook - URL').item.json.body.link;\n  const codeMatch = url.match(/-(\\d+)(?:\\.html)?$/);\n  if (codeMatch && codeMatch[1]) {\n    propertyData.codigo = codeMatch[1];\n  }\n}\n\n// Devolver los datos procesados\nreturn {\n  propertyInfo: propertyData,\n  code: propertyData.codigo || \"\",\n  sourceUrl: $('Webhook - URL').item.json.body.link\n};"
      },
      "id": "707552b5-7914-4b70-842c-a9b1c34699fa",
      "name": "Process Property Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        -380
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1cJKKaB8YIGe73hE5EE8KaWX1gFulpzmGrAYeesCGJpE",
          "mode": "list",
          "cachedResultName": "AGENTE : Francisco",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1cJKKaB8YIGe73hE5EE8KaWX1gFulpzmGrAYeesCGJpE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Codigos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1cJKKaB8YIGe73hE5EE8KaWX1gFulpzmGrAYeesCGJpE/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "CODIGO",
              "lookupValue": "={{ $json.code }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ea7d904a-f9e8-4d95-baa8-6ceb555d1f35",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        60,
        -380
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "lRj57XPEqOXW9kOd",
          "name": "Qeva Solutions Sheet"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Crear un objeto con toda la información relevante\nconst propertyData = {\n  url: $('Webhook - URL').item.json.body.link,\n  code: $('Process Property Data').item.json.code,\n  isOurProperty: $('Google Sheets').item.json.CODIGO ? true : false,\n  propertyInfo: $('Process Property Data').item.json.propertyInfo,\n  propertyDetails: $('Google Sheets').item.json || {},\n  sessionId: `property_${Date.now()}`,\n  timestamp: new Date().toISOString(),\n  conversationState: \"initial\" // Estado inicial de la conversación\n};\n\n// Retornar el objeto para guardarlo en Redis\nreturn {\n  sessionId: propertyData.sessionId,\n  data: JSON.stringify(propertyData)\n};"
      },
      "id": "4e1379bf-dbcb-4f85-9581-54485e226207",
      "name": "Prepare Redis Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        340,
        -380
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{$json.sessionId}}",
        "value": "={{$json.data}}"
      },
      "id": "02f2b777-f3e8-454d-b498-a9345410d208",
      "name": "Redis Set",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        620,
        -380
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=La siguiente propiedad ha sido compartida:\n{{ $('Process Property Data').item.json.propertyInfo | json }}"
            },
            {
              "content": "=Eres un agente inmobiliario profesional llamado Genaro. Estás respondiendo al primer contacto de un cliente que ha compartido un enlace a una propiedad. \n\nSaluda cordialmente, preséntate como Genaro de la inmobiliaria, y pregunta el nombre del cliente. Menciona que estás para ayudar con la propiedad mencionada y pregunta si tiene alguna consulta específica.\n\nSé amable y profesional. NO menciones características específicas de la propiedad todavía, solo haz una introducción breve y pregunta por el nombre del cliente.",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "id": "1ff576e2-63d4-46a0-b069-f848b843230c",
      "name": "Generate Initial Response",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        880,
        -380
      ],
      "credentials": {
        "openAiApi": {
          "id": "UfA35dBDzEebw8zR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "5b55e498-ccee-4d95-b924-e83d7223d303",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1300,
        -380
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "process-question",
        "options": {}
      },
      "id": "dc7e994b-4d4c-41a5-bb90-274bff873c3e",
      "name": "Webhook - Question",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1080,
        40
      ],
      "webhookId": "e5c46fb3-ed70-49c4-ad6d-73a4f6eab42e"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{$json.body.sessionId}}",
        "options": {}
      },
      "id": "1387b7ea-8e81-48f9-ba75-2f5d3b042016",
      "name": "Redis Get",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -880,
        40
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parsear los datos de Redis\nconst sessionData = JSON.parse($input.first().json.value);\n\n// Obtener la pregunta del usuario y el estado de la conversación\nconst userMessage = $('Webhook - Question').item.json.body.message;\nconst conversationState = sessionData.conversationState || 'initial';\n\n// Actualizar los datos de sesión según el estado\nlet updatedSessionData = {...sessionData};\n\nif (conversationState === 'initial') {\n  // Si estamos esperando el nombre, guardarlo\n  updatedSessionData.clientName = userMessage;\n  updatedSessionData.conversationState = 'name_provided';\n}\n\n// Determinar el tipo de pregunta\nconst lowerCaseMessage = userMessage.toLowerCase();\nconst isAskingAboutGarage = lowerCaseMessage.includes('cochera') || lowerCaseMessage.includes('garage') || lowerCaseMessage.includes('estacionamiento');\nconst isAskingForManager = lowerCaseMessage.includes('responsable') || lowerCaseMessage.includes('encargado') || lowerCaseMessage.includes('supervisor') || lowerCaseMessage.includes('gerente');\n\n// Devolver tanto los datos de la propiedad como la pregunta\nreturn {\n  sessionData: updatedSessionData,\n  userMessage,\n  conversationState,\n  isAskingAboutGarage,\n  isAskingForManager,\n  sessionId: $('Webhook - Question').item.json.body.sessionId\n};"
      },
      "id": "ced5cead-a3a2-4e53-818d-ab780f9697c1",
      "name": "Process Question",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -600,
        40
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c93e135-1306-4f9f-b1b9-8d1a325d9b83",
              "leftValue": "={{ $json.conversationState }}",
              "rightValue": "initial",
              "operator": {
                "type": "string",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "22377fff-c93f-42ee-9471-9da6b2854af4",
      "name": "Is First Message?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -320,
        40
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Nombre del cliente: {{ $json.userMessage }}\n\nPropiedad: {{ $json.sessionData.propertyInfo | json }}"
            },
            {
              "content": "=Eres Genaro, un agente inmobiliario profesional. El cliente acaba de proporcionar su nombre. Salúdalo por su nombre y dile que estás aquí para ayudarle con la propiedad mencionada. Pregúntale si tiene alguna consulta específica sobre la propiedad o si está interesado en verla.",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "id": "fdf3c2fe-6cd6-49ec-b754-13679b994301",
      "name": "Name Response",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -40,
        -60
      ],
      "credentials": {
        "openAiApi": {
          "id": "UfA35dBDzEebw8zR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c93e135-1306-4f9f-b1b9-8d1a325d9b83",
              "leftValue": "={{ $json.isAskingAboutGarage }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e17c941f-e0c2-4dd4-8933-3ded37bba673",
      "name": "Is Asking About Garage?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -40,
        140
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Cliente: {{ $json.sessionData.clientName || 'Cliente' }}\nPregunta: {{ $json.userMessage }}\n\nInformación de la propiedad: {{ $json.sessionData.propertyInfo | json }}\n\nLa propiedad {{ $json.sessionData.propertyInfo.cocheras ? 'tiene ' + $json.sessionData.propertyInfo.cocheras + ' cochera(s)' : 'no menciona cocheras en la información disponible' }}."
            },
            {
              "content": "=Eres Genaro, un agente inmobiliario profesional. El cliente está preguntando específicamente sobre las cocheras o estacionamiento de la propiedad. \n\nSi los datos indican que la propiedad tiene cocheras, explica cuántas tiene y si son cubiertas.\n\nSi los datos no contienen información sobre cocheras, indícale educadamente que según la información disponible no se menciona si la propiedad tiene cocheras, pero te comprometes a verificar este detalle. Ofrece contactarlo nuevamente cuando tengas la información.\n\nSiempre mantén un tono profesional y servicial.",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "id": "71987c76-5bae-4a6d-84a6-fc032a89d4f7",
      "name": "Garage Response",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        240,
        80
      ],
      "credentials": {
        "openAiApi": {
          "id": "UfA35dBDzEebw8zR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c93e135-1306-4f9f-b1b9-8d1a325d9b83",
              "leftValue": "={{ $json.isAskingForManager }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ed9fe774-8c69-48c1-9c3a-58696957f6af",
      "name": "Is Asking For Manager?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        240,
        220
      ]
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Cliente: {{ $json.sessionData.clientName || 'Cliente' }}\nPregunta sobre responsable/gerente: {{ $json.userMessage }}"
            },
            {
              "content": "=Eres Genaro, un agente inmobiliario profesional. El cliente está solicitando hablar con un responsable o preguntando por tu nombre.\n\nResponde amablemente que eres Genaro, el agente inmobiliario asignado a su consulta y que puedes ayudarle con todas sus dudas sobre la propiedad. Agradece su paciencia y pregúntale si tiene alguna otra consulta mientras sigues atendiendo sus dudas actuales.\n\nMantén un tono profesional, empático y servicial.",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "id": "69b3520c-2bdc-4dcb-8902-d048964fa4aa",
      "name": "Manager Response",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        520,
        180
      ],
      "credentials": {
        "openAiApi": {
          "id": "UfA35dBDzEebw8zR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Cliente: {{ $json.sessionData.clientName || 'Cliente' }}\nPregunta: {{ $json.userMessage }}\n\nInformación de la propiedad: {{ $json.sessionData.propertyInfo | json }}"
            },
            {
              "content": "=Eres Genaro, un agente inmobiliario profesional. Responde a la pregunta del cliente sobre la propiedad utilizando los datos disponibles. Sé claro, conciso y profesional en tu respuesta.\n\nSi la información solicitada no está disponible en los datos, indícalo amablemente y ofrece verificar ese detalle y contactarlo nuevamente cuando lo tengas.\n\nAl final de tu respuesta, pregunta si el cliente tiene alguna otra consulta o si desearía programar una visita para conocer la propiedad.",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "id": "9dbd1a1c-d336-4f19-922d-25e6c36254af",
      "name": "General Response",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        520,
        360
      ],
      "credentials": {
        "openAiApi": {
          "id": "UfA35dBDzEebw8zR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Actualizar los datos de la sesión en Redis\nconst sessionData = $json.sessionData;\n\n// Dependiendo de qué nodo se ejecutó, toma la respuesta adecuada\nlet responseMessage = \"Lo siento, no pude procesar tu consulta.\";\n\nif ($('Name Response').item) {\n  responseMessage = $('Name Response').item.json.message.content;\n} else if ($('Garage Response').item) {\n  responseMessage = $('Garage Response').item.json.message.content;\n} else if ($('Manager Response').item) {\n  responseMessage = $('Manager Response').item.json.message.content;\n} else if ($('General Response').item) {\n  responseMessage = $('General Response').item.json.message.content;\n}\n\n// Actualizar el estado de la conversación\nsessionData.conversationState = 'conversation_active';\n\n// Guardar la respuesta actual y la pregunta del usuario en el historial\nif (!sessionData.conversationHistory) {\n  sessionData.conversationHistory = [];\n}\n\nsessionData.conversationHistory.push({\n  role: 'user',\n  message: $json.userMessage,\n  timestamp: new Date().toISOString()\n});\n\nsessionData.conversationHistory.push({\n  role: 'agent',\n  message: responseMessage,\n  timestamp: new Date().toISOString()\n});\n\nreturn {\n  sessionId: $json.sessionId,\n  data: JSON.stringify(sessionData),\n  response: responseMessage\n};"
      },
      "id": "8e540112-513e-4a13-a37d-ba366e5030e6",
      "name": "Update Session",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        100
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{$json.sessionId}}",
        "value": "={{$json.data}}"
      },
      "id": "f34e4951-0fbc-4830-83b9-e47af6db3104",
      "name": "Redis Update",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1260,
        100
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "options": {}
      },
      "id": "fe9c5cdb-3cd9-42bd-a212-8067c9d5e919",
      "name": "Question Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1520,
        100
      ]
    }
  ],
  "pinData": {
    "Webhook - URL": [
      {
        "json": {
          "headers": {
            "host": "n8n.innovasoftpro.dev",
            "user-agent": "axios/1.7.9",
            "content-length": "922",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "172.18.0.1",
            "x-forwarded-host": "n8n.innovasoftpro.dev",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "575dad520f0e",
            "x-real-ip": "172.18.0.1"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "tester",
            "data": {
              "key": {
                "remoteJid": "5492254423359@s.whatsapp.net",
                "fromMe": false,
                "id": "3EB007CD5FB9898CC40566"
              },
              "pushName": "Fer { }",
              "status": "DELIVERY_ACK",
              "message": {
                "conversation": "https://www.argenprop.com/departamento-en-venta-en-palermo-chico-4-ambientes--16123338",
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "PuhrW5e1VnIjXQ==",
                    "senderTimestamp": "1742385421",
                    "senderAccountType": "E2EE",
                    "receiverAccountType": "E2EE",
                    "recipientKeyHash": "dR2wQM1xzsQYzA==",
                    "recipientTimestamp": "1741617170"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "HLZZ6jq5saTDDaQ6DQDIuBTjp6wY6taDku6koDqMTe0="
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1742385913,
              "instanceId": "a07fd153-f566-4a75-ab04-a09db3698731",
              "source": "web"
            },
            "destination": "https://n8n.innovasoftpro.dev/webhook/tester",
            "date_time": "2025-03-19T09:05:13.291Z",
            "sender": "5492254606018@s.whatsapp.net",
            "server_url": "https://evo.innovasoftpro.dev",
            "apikey": "48FBE0CD19D8-4B3C-88DF-2C7BB119C3C8"
          },
          "webhookUrl": "https://n8n.innovasoftpro.dev/webhook/tester",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2025-04-16T13:12:00.025Z",
  "versionId": "8541caaf-3ae0-44d6-89a8-6d64c6c4f4aa"
}