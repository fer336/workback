{
  "active": true,
  "connections": {
    "Segmentos": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1,2s": {
      "main": [
        [
          {
            "node": "Texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "1,2s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insertar pedido": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "replace": {
      "main": [
        [
          {
            "node": "Segmentos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Promociones": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "QR": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Crypto": {
      "main": [
        [
          {
            "node": "InsertarCliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format JSON": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          },
          {
            "node": "If123",
            "type": "main",
            "index": 0
          },
          {
            "node": "vars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar productos": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "camposiniciales",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Crypto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From Me2": {
      "main": [
        [
          {
            "node": "From Me3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From Me3": {
      "main": [
        [],
        [
          {
            "node": "getClientes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields4",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory": {
      "main": [
        [
          {
            "node": "Return Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 10s": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "Audio Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields4": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tiempo1": {
      "main": [
        [
          {
            "node": "Escribiendo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return Redis1": {
      "main": [
        [
          {
            "node": "Tiempo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "InsertCliente": {
      "main": [
        []
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Compara Get Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara igualdad de memorias": {
      "main": [
        [
          {
            "node": "Delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory": {
      "main": [
        [
          {
            "node": "Compara igualdad de memorias",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Delete": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        []
      ]
    },
    "ubicacion": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta a ChatWoot2": {
      "main": [
        []
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "From Me2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "camposiniciales": {
      "main": [
        [
          {
            "node": "Message Type1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis3": {
      "main": [
        []
      ]
    },
    "Chatwoot msg": {
      "main": [
        []
      ]
    },
    "InsertarCliente": {
      "main": [
        [
          {
            "node": "camposiniciales",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getClientes": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "calcular_total": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Nombre": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Escribiendo": {
      "main": [
        [
          {
            "node": "Wait 10s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar promocion": {
      "ai_tool": [
        []
      ]
    },
    "Buscar comida": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Pocho",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Pocho": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "apilaTexto": {
      "main": [
        [
          {
            "node": "Return Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [],
        []
      ]
    },
    "Texto": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "promociones": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "apilaTexto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [],
        [],
        [
          {
            "node": "replace",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nombre1": {
      "ai_tool": [
        [
          {
            "node": "Pocho",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Delete1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Pocho",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Pocho",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-21T21:23:44.880Z",
  "id": "F1n2h96SynW3aHim",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "DESPENSA - MASTER",
  "nodes": [
    {
      "parameters": {
        "fieldToSplitOut": "text",
        "options": {
          "destinationFieldName": "msg"
        }
      },
      "id": "4b57d0e1-d761-413d-b6eb-b74fd6adfce4",
      "name": "Segmentos",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        6320,
        340
      ]
    },
    {
      "parameters": {
        "amount": "=1"
      },
      "id": "4f3df646-1ec7-4ab6-8d6f-3e950f9e1769",
      "name": "1,2s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        6760,
        265
      ],
      "webhookId": "8a810ad6-4ecf-4781-aed8-7f2b295770dc"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "1b7ca230-f1a6-42ae-9856-2a35b85136e7",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        6540,
        340
      ]
    },
    {
      "parameters": {
        "name": "insertar_pedido",
        "description": "llamaras a esta herramienta cuando el pedido este confirmado",
        "workflowId": {
          "__rl": true,
          "value": "MA1amyL5ScIQzNJb",
          "mode": "id"
        },
        "fields": {
          "values": [
            {
              "name": "push_name",
              "stringValue": "={{ $('camposiniciales').first().json.telefonoCliente }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "\n  {\n    \"Nombre\": \"Juan Pérez\",\n    \"Productos\": [\n      {\n            \"Detalle\": \"Productos: Coca cola pack\",\n       \"Cantidad\": \"2\" ,\n      \"precio\": \"$300\"       \n    }],   \n    \"Total\":\"$1700\",\n    \"Telefono\": \"555-1234\",\n    \"Direccion\": \"Av. Principal #123 \",\n    \"Metodo de pago\": \"QR, TRANSCFERENCIA, OTRO\",\n    \"Retiro\": \"Local o domicilio\",\n    \"correo\":\"fercassera@gmail.com\",\n    \"Estado\": \"Pagado \",\n    \"Codigo pedido\":\"codigo generado\"\n  }\n"
      },
      "id": "8a3dcd21-ab81-4498-926c-3c282e9ef281",
      "name": "Insertar pedido",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        4840,
        560
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5d04d69d-cb9c-41be-a44a-95fac3c059f3",
              "name": "text",
              "value": "={{ [$json.output.replace(/\\*\\*(.*?)\\*\\*/g, '*$1*').replace(/###\\s*/g, '').replace(/[¡¿!]/g, '')] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "0f259155-9566-43d3-bded-1b5fa69c8f30",
      "name": "replace",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6100,
        340
      ]
    },
    {
      "parameters": {
        "name": "promo_bancaria",
        "description": "Llama a esta herramienta siempre que el usuario quiera saber las promociones bancarias",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "yOh5hvWd7551O1Ez",
          "cachedResultName": "DESPENSA - Promociones"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        4960,
        560
      ],
      "id": "4f436f46-1af4-4e06-b71a-3955fb6afda7",
      "name": "Promociones"
    },
    {
      "parameters": {
        "name": "qr_pagos",
        "description": "Llamaras a esta herramienta cuando el usuario qiuera pagar por QR",
        "workflowId": {
          "__rl": true,
          "value": "tdm8dLqaR7idL6Hm",
          "mode": "list",
          "cachedResultName": "DESPENSA - QR"
        },
        "fields": {
          "values": [
            {
              "name": "telefono",
              "stringValue": "={{ $('camposiniciales').first().json.telefonoCliente }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n  \"banco\":\"Modo\"\n}"
      },
      "id": "f291dc28-d8f2-42c4-8993-2b26135c114e",
      "name": "QR",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5080,
        560
      ]
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        640,
        490
      ],
      "id": "2278b5e6-b903-4a81-8123-1d6bf9ba002f",
      "name": "Crypto"
    },
    {
      "parameters": {
        "name": "buscar_productos",
        "description": "Llama a esta herramienta para saber sobre un producto o comidas",
        "workflowId": {
          "__rl": true,
          "value": "4bACFIaEnJooL6W4",
          "mode": "list",
          "cachedResultName": "DESPENSA - Buscar productos"
        },
        "fields": {
          "values": [
            {
              "name": "Telefono",
              "stringValue": "={{ $('camposiniciales').first().json.telefonoCliente }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"Descripcion\": \"azucar\"\n}"
      },
      "id": "21f36ca6-3f09-435c-9589-ecac91b8bf97",
      "name": "Buscar productos",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        5200,
        560
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e02fa309-efdc-4424-a35e-232970a746cf",
              "leftValue": "={{ $json.Telefono }}",
              "rightValue": "=",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        420,
        340
      ],
      "id": "25072683-00b4-4e9c-bc4c-30fdee5999a4",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "94746291-c0f3-44f3-b635-1fe696d7d74e",
              "leftValue": "={{ $('Webhook').item.json.body.messages[0].from_me }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3d486f6e-0858-42ac-9723-148f75b57c7e",
      "name": "From Me2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -680,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5af9eed6-93bd-4b03-879e-4b4404da1737",
              "leftValue": "={{ $json.ETIQUETA }}",
              "rightValue": "bot_off",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "8ef2017a-ed74-46cd-88b5-e73a563604b7",
      "name": "From Me3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -20,
        340
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0cb14635-2673-408e-86db-ce9e0373674b",
                    "leftValue": "={{ $json.tipoMensaje }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.tipoMensaje }}",
                    "rightValue": "voice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "9d6039bf-d7d0-489c-8f18-691901f06a47"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "60065893-74f7-4b64-bc1a-d891202efa78",
                    "leftValue": "={{ $json.tipoMensaje }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3f726e15-8674-47a2-a924-8a181db57e0a",
                    "leftValue": "={{ $json.tipoMensaje }}",
                    "rightValue": "action",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reaccion"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "69ad25f9-c335-489b-9301-b3f4075020d8",
                    "leftValue": "={{ $json.tipoMensaje }}",
                    "rightValue": "location",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "locaciton"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dda5054b-9566-4520-90df-d0bbe8c20460",
                    "leftValue": "={{ $('Webhook').item.json.body.messages[0].reply.type }}",
                    "rightValue": "=list_reply",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "70263635-2977-4d7b-ad37-f39182a4d96b",
      "name": "Message Type1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1300,
        300
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposiniciales').item.json.telefonoCliente }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "id": "8466c656-0b5e-4299-af85-8e9b88eb4996",
      "name": "Audio Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2460,
        360
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Messages",
        "key": "={{ $('camposiniciales').first().json.telefonoCliente }}",
        "options": {}
      },
      "id": "e940a660-fbc8-4312-a111-37880b7dc9f5",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3500,
        340
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "amount": "={{ $('Tiempo1').item.json.responseDelay /1000 }}"
      },
      "id": "58545546-131a-453e-ac98-ca4140fc0b4d",
      "name": "Wait 10s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3280,
        340
      ],
      "webhookId": "241554e1-7fe9-4c6d-9c49-69ec498c8481"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.7,
      "position": [
        2180,
        440
      ],
      "id": "6c280d4c-edb9-42a1-af37-5fab90f8bc89",
      "name": "OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "UfA35dBDzEebw8zR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d2fb2361-9a41-4099-8f53-cfb8be77d95a",
              "name": "content",
              "value": "={{ $('camposiniciales').item.json.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "573aa795-1a68-4b65-b968-3bde0ec81f65",
      "name": "Edit Fields4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1740,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtener historial de mensajes desde Redis\nconst redisMessages = $input.first().json.Redis1 || [];\n// Extraer el último mensaje recibido, asegurando que sea un string válido\nconst userMessage = Array.isArray(redisMessages) && redisMessages.length > 0\n  ? String(redisMessages[redisMessages.length - 1]).trim().toLowerCase()\n  : \"\";\n// Obtener la cantidad de mensajes en cola desde Redis en los últimos 6 segundos\nconst queueLength = parseInt($json.queueLength || \"0\", 10);\n\n// Lista específica de palabras que tendrán un delay de 1 segundo\nconst fastResponseWords = [\"hola\", \"ok\", \"dale\", \"sí\", \"no\", \"confirmo\", \"modificar\", \"cancelar\"];\n\n// 🚀 **Lógica del delay**\nlet responseDelay = 5000; // ⏳ Por defecto, 9 segundos\n\n// Verificar si el mensaje completo es exactamente una de las palabras especificadas\nif (fastResponseWords.includes(userMessage)) {\n  responseDelay = 1000; // 1 segundo para las palabras específicas\n}\n\nreturn { json: { responseDelay } };"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2840,
        340
      ],
      "id": "ff83a77e-d861-4568-9c5a-afc928feab9e",
      "name": "Tiempo1"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Redis1",
        "key": "={{ $('camposiniciales').item.json.telefonoCliente }}",
        "options": {}
      },
      "id": "fc6daaf9-df5c-4480-b466-434405b1c20c",
      "name": "Return Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2680,
        360
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1WxPxhtY9u7M7aRDM9QOsADIrEKXFgpYNboGXHLv_W2E",
          "mode": "list",
          "cachedResultName": "Clientes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WxPxhtY9u7M7aRDM9QOsADIrEKXFgpYNboGXHLv_W2E/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1552665435,
          "mode": "list",
          "cachedResultName": "Clientes",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1WxPxhtY9u7M7aRDM9QOsADIrEKXFgpYNboGXHLv_W2E/edit#gid=1552665435"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Nombre": "={{ $('camposiniciales').item.json.meta.nombreCliente }}",
            "Telefono": "={{ $('camposiniciales').item.json.meta.telefonoCliente }}",
            "idMensaje": "={{ $json.data }}",
            "TimeStamp": "={{ $('Unificados').item.json.meta.tiempo }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Nombre",
              "displayName": "Nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Telefono",
              "displayName": "Telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "idMensaje",
              "displayName": "idMensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "nombre_real",
              "displayName": "nombre_real",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Correo",
              "displayName": "Correo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "TimeStamp",
              "displayName": "TimeStamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -900,
        1680
      ],
      "id": "61be8f50-d310-4673-b68e-5467ef07f6dd",
      "name": "InsertCliente",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yxBoR5sUs8UyR9Sc",
          "name": "Despensa"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86ff282a-3ede-4417-98c1-0d10858bc5dc",
              "name": "Redis1",
              "value": "={{ $('Return Redis1').first().json.Redis1 }}",
              "type": "string"
            },
            {
              "id": "3cd6e8a1-98ef-4abb-9490-fb7946365cfb",
              "name": "Redis2",
              "value": "={{ $json.Messages }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "fe0ea543-e3eb-4bc1-82c3-f6bd3fc8c680",
      "name": "Redis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3720,
        340
      ],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory\"].json[\"Redis2\"];\n\n// Verifica si data es un array directamente\nlet array;\n\nif (Array.isArray(data)) {\n    array = data;\n} else {\n    try {\n        // Intenta parsear si es una cadena JSON válida\n        array = JSON.parse(data);\n    } catch (error) {\n        // Si no es JSON, considera que es un texto plano\n        array = [data];\n    }\n}\n\n// Une los elementos del array en un string\nconst message_completo = array.join(\" , \");\n\nreturn [{ json: { message_completo } }];\n"
      },
      "id": "3bea3d5f-2ca6-4bbe-84f1-6650b8aef212",
      "name": "Compara igualdad de memorias",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4160,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis1 }}",
              "rightValue": "={{ $json.Redis2 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "cd5e6704-3386-4c3f-ba26-040965ebbd56",
      "name": "Compara Get Memory",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3940,
        340
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('camposiniciales').first().json.telefonoCliente }}"
      },
      "id": "e5fd32ef-52be-4556-8174-d6b34b62d58f",
      "name": "Delete",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4480,
        280
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.content }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        440
      ],
      "id": "4aa68eaa-0e83-4210-b702-0ff970201375",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gate.whapi.cloud/messages/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "Bearer Qo7qoYEVIKvRppohj25MEaHl1dPwskEv"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": 0
            },
            {
              "name": "body",
              "value": "={{ $('Loop Over Items1').item.json.msg }}"
            },
            {
              "name": "to",
              "value": "={{ $('camposiniciales').item.json.meta.telefonoCliente }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -900,
        2440
      ],
      "id": "2c9c27de-7b86-4e3d-a2cd-4695c9b2896e",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "name": "ubicacion",
        "description": "llamaras a esta herramienta cuando el usuario quiera saber la ubicacion ",
        "workflowId": {
          "__rl": true,
          "value": "XoB1Q17cG94Zf3s0",
          "mode": "list",
          "cachedResultName": "DESPENSA - Ubicacion"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Telefono": "={{ $('camposiniciales').first().json.telefonoCliente }}"
          },
          "matchingColumns": [
            "Telefono"
          ],
          "schema": [
            {
              "id": "Telefono",
              "displayName": "Telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        5320,
        560
      ],
      "id": "1d933774-cc4e-47c9-9bca-8a6ff86e7b9b",
      "name": "ubicacion"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://chat.rshtech.com.py/api/v1/accounts/3/conversations/{{ $('camposiniciales').first().json.conversation_id }}/messages",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "={{ $('Loop Over Items1').item.json.msg }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Api-Access-Token",
              "value": "PWT8Rjk9ZGEqVzGoWYmaofFj"
            }
          ]
        },
        "options": {}
      },
      "id": "0a196576-e9e5-437e-b98e-5b82e2bb3170",
      "name": "Respuesta a ChatWoot2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7200,
        340
      ],
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "lodepocho",
        "options": {}
      },
      "id": "3116d3c7-3cc7-44e0-ad17-888667eac5a0",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -900,
        340
      ],
      "webhookId": "3ba6ce2e-1b02-4b06-8edd-9c60afb2db89"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9ecf2fc-da2c-4f44-897a-5dc0a2f2f379",
              "name": "telefonoCliente",
              "value": "={{ $('Webhook').item.json.body.messages[0].from }}",
              "type": "string"
            },
            {
              "id": "a019046c-3b5a-4fd0-a497-de55cb2178ea",
              "name": "telefonoChat",
              "value": "={{ $('Webhook').item.json.body.messages[0].chat_id }}",
              "type": "string"
            },
            {
              "id": "dab7ca54-c3d2-4a36-a9ca-a0ebbd375ef5",
              "name": "nombreCliente",
              "value": "={{ $('Webhook').item.json.body.messages[0].from_name }}",
              "type": "string"
            },
            {
              "id": "cc7dcfe1-8ad7-4fe8-93ec-8f643c7d08c7",
              "name": "tipoMensaje",
              "value": "={{ $('Webhook').item.json.body.messages[0].type }}",
              "type": "string"
            },
            {
              "id": "2dfc64f4-b222-4ea7-b095-fdd96d9fcb95",
              "name": "idMensaje",
              "value": "={{ $('Webhook').item?.json?.body?.messages[0]?.device_id || $('Webhook').item.json.body.messages[0].id }}",
              "type": "string"
            },
            {
              "id": "07c65c0d-9662-41b0-b872-056a5d643f8c",
              "name": "content.label",
              "value": "={{ $('Webhook').item?.json?.body?.labels || [''] }}",
              "type": "string"
            },
            {
              "id": "80c6b537-8c37-4a54-b928-913c4bc0e13f",
              "name": "accountId",
              "value": "={{ $json?.body?.conversation?.messages[0]?.account_id || null }}",
              "type": "string"
            },
            {
              "id": "30069704-a1aa-4539-afcd-67eb7c405869",
              "name": "inboxId",
              "value": "={{ $('Webhook').item?.json?.body?.inbox?.id || null  }}",
              "type": "string"
            },
            {
              "id": "a2148d2c-c4ac-4826-be6f-fa686b90fae4",
              "name": "inboxIdentifier",
              "value": "SUqwz3QWbq6UgbEF7zhifEv5",
              "type": "string"
            },
            {
              "id": "7d850d26-967b-4ba4-aaa2-3f3625032984",
              "name": "chatwootUrl",
              "value": "https://chat.rshtech.com.py",
              "type": "string"
            },
            {
              "id": "e0f88461-1bd8-4fd9-a76d-4b431e08dae1",
              "name": "chatwootToken",
              "value": "PWT8Rjk9ZGEqVzGoWYmaofFj",
              "type": "string"
            },
            {
              "id": "ecb06d4f-a572-4944-b855-85950e49b995",
              "name": "source_id",
              "value": "={{ $('Webhook').item?.json?.body?.conversation?.messages[0]?.conversation?.contact_inbox?.source_id || null  }}",
              "type": "string"
            },
            {
              "id": "2c5e299b-1d0f-4407-9e38-30dfa8e1a22a",
              "name": "phone_number",
              "value": "={{ $('Webhook').item?.json?.body?.conversation?.meta?.sender?.phone_number || null  }}",
              "type": "string"
            },
            {
              "id": "ffd7c75f-4166-41b3-baf9-2e05533e2646",
              "name": "content",
              "value": "={{ $('Webhook').item?.json?.body?.conversation?.messages[0]?.content || $('Webhook').item?.json?.body?.messages[0]?.text?.body || $('Webhook').item?.json?.body?.messages[0]?.action?.emoji || $('Webhook').item.json.body.messages[0].voice.link }}",
              "type": "string"
            },
            {
              "id": "b7613885-c5d8-4b6a-81ec-8de7e6740faf",
              "name": "location",
              "value": "={\n  \"location\": {\n    \"latitud\":{{ $('From Me2').item.json.body.messages[0].location.latitude }},\n    \"longitud\":{{ $('From Me2').item.json.body.messages[0].location.longitude }}\n  }\n}",
              "type": "object"
            },
            {
              "id": "55b12a0f-3689-4f1b-9fdd-a817e5878938",
              "name": "body.messages[0].reply.list_reply.id",
              "value": "={{ $('From Me2').item.json.body.messages[0].reply.list_reply.id }}",
              "type": "array"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {
          "ignoreConversionErrors": true
        }
      },
      "id": "11ebac25-3982-452b-a4e2-ec8dd616d6cf",
      "name": "camposiniciales",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1080,
        340
      ],
      "notesInFlow": true
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "ETIQUETA",
        "key": "=+{{ $('Webhook').item.json.body.messages[0].from }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -220,
        100
      ],
      "id": "a3410502-8bbf-4378-97d7-f0bd08d8d154",
      "name": "Redis3",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "BHLBMgDUtwxVaS39",
          "mode": "list",
          "cachedResultName": "DESPENSA Chatwoot msg"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "content": "={{ $json?.body?.messages[0]?.text?.body || $('Webhook').item?.json?.body?.messages[0]?.voice?.link || $json.body.messages[0].location }}",
            "nombreCliente": "={{ $json?.body?.messages[0]?.from_name || $json?.body?.messages[0]?.chat_name || null }}",
            "telefonoCliente": "={{ $('Webhook').item.json.body.messages[0].from }}",
            "inboxIdentifier": "=SUqwz3QWbq6UgbEF7zhifEv5",
            "chatwootToken": "=PWT8Rjk9ZGEqVzGoWYmaofFj",
            "chatwootUrl": "=https://chat.rshtech.com.py",
            "typeFile": "={{ $json.body.messages[0].type }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "nombreCliente",
              "displayName": "nombreCliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "telefonoCliente",
              "displayName": "telefonoCliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "inboxIdentifier",
              "displayName": "inboxIdentifier",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatwootUrl",
              "displayName": "chatwootUrl",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatwootToken",
              "displayName": "chatwootToken",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "typeFile",
              "displayName": "typeFile",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -440,
        200
      ],
      "id": "c79e973c-a7a4-4883-b339-50bcc4aa441b",
      "name": "Chatwoot msg",
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "create",
        "projectId": "pc1g3m0ih934pz9",
        "table": "mtxmanzpy3a6oz8",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Nombre",
              "fieldValue": "={{ $('Webhook').item.json.body.messages[0].from_name }}"
            },
            {
              "fieldName": "Telefono",
              "fieldValue": "={{ $('Webhook').item.json.body.messages[0].chat_id.replace(/\\D/g, '') }}"
            },
            {
              "fieldName": "IdMensaje",
              "fieldValue": "={{ $json.data }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        860,
        490
      ],
      "id": "8f41355b-128e-48f9-b3e7-de0fb5117336",
      "name": "InsertarCliente",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pc1g3m0ih934pz9",
        "table": "mtxmanzpy3a6oz8",
        "returnAll": true,
        "options": {
          "where": "=(Telefono,eq,{{ $('Webhook').item.json.body.messages[0].chat_id.replace(/\\D/g, '') }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        200,
        340
      ],
      "id": "a2f8516c-9fa2-4ca8-b89c-17c8b91d1fec",
      "name": "getClientes",
      "alwaysOutputData": true,
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "lo_de_pocho",
          "mode": "list",
          "cachedResultName": "lo_de_pocho"
        },
        "deleteCommand": "delete",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -900,
        900
      ],
      "id": "1c16f80d-a6c7-4d74-a995-1ee8f1955371",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "E1mi81N6Tmr5cHS5",
          "name": "GENERICO"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gate.whapi.cloud/messages/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "Bearer Qo7qoYEVIKvRppohj25MEaHl1dPwskEv"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": 3
            },
            {
              "name": "to",
              "value": "5492234245220"
            },
            {
              "name": "body",
              "value": "={{ $json.msg }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -900,
        1160
      ],
      "id": "c084c414-b4ab-434d-b95c-f053dd500001",
      "name": "HTTP Request1"
    },
    {
      "parameters": {},
      "id": "68c4924d-8864-4951-9737-e7478fc50f8e",
      "name": "calcular_total",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        5440,
        560
      ]
    },
    {
      "parameters": {
        "name": "insert_name_mail",
        "description": "Llamaras a esta herramienta cuando tengas sus datos ",
        "workflowId": {
          "__rl": true,
          "value": "MuBTjZBk3QgLNPG5",
          "mode": "list",
          "cachedResultName": "DESPENSA - Nombre real"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "nombre": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nombre', `Guardaras el nombre real del usuario`, 'string') }}",
            "telefono": "={{ $('camposiniciales').first().json.telefonoCliente }}",
            "correo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('correo', `envia el correo`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "correo",
              "displayName": "correo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        5560,
        560
      ],
      "id": "b769de56-c438-4c10-8d1b-7e03f0e24e72",
      "name": "Nombre"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://gate.whapi.cloud/presences/{{ $('camposiniciales').first().json.Telefono }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "=Bearer Qo7qoYEVIKvRppohj25MEaHl1dPwskEv"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "presence",
              "value": "typing"
            },
            {
              "name": "delay",
              "value": "={{1200}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3060,
        340
      ],
      "id": "949cbf10-b430-4c20-a3ef-0fb306a491ed",
      "name": "Escribiendo"
    },
    {
      "parameters": {
        "name": "buscar_promo"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        -900,
        1940
      ],
      "id": "d96b0227-3f64-4fb2-8f53-17b70b1fbc33",
      "name": "Buscar promocion",
      "disabled": true
    },
    {
      "parameters": {
        "name": "buscar_comida",
        "description": "Utilizaras esta herramienta siempre que un usuario quiera sobre las comidas que vendemos, empandas, sandwiches, tartas, ensaldas etc si son productos de despensa no ingresar",
        "workflowId": {
          "__rl": true,
          "value": "95iu7FwWHLs11Vkc",
          "mode": "list",
          "cachedResultName": "DESPENSA - Comidas"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Telefono": "={{ $('camposiniciales').first().json.telefonoCliente }}",
            "descripcion": "={{ $('Delete').item.json.message_completo }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "descripcion",
              "displayName": "descripcion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Telefono",
              "displayName": "Telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        5680,
        560
      ],
      "id": "17dbb49e-55ef-4f12-be89-46f818c0a2ea",
      "name": "Buscar comida"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        4580,
        560
      ],
      "id": "7a2f3ab1-2fe2-4e2b-826e-18e1f279f7f2",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "9O8uUWkp7h4KwsVD",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"contents\": [\n    {\n      \"parts\": [\n        {\n          \"text\": \"How does AI work?\"\n        }\n      ]\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -900,
        1420
      ],
      "id": "31bb78ef-ea30-4859-93ed-6ce4236a8775",
      "name": "HTTP Request5"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message_completo }}",
        "options": {
          "systemMessage": "=# Pocho – Asistente Virtual (Optimizado para Gemini 2.5 Flash en n8n)\n\nHOY ES: {{ $now.format('yyyy-MM-dd') }}\n\n## Identidad\n- Nombre: **Pocho**, asistente de Lo de Pocho (Neuquén 2098, Mar del Plata)\n- Estilo: Respuestas cortas, argentinas, prácticas\n- Mínimo para delivery: $30.000\n- Objetivo: Ayudar a completar pedidos y generar ventas\n\n## REGLAS CRÍTICAS\n1. SIEMPRE usar herramientas para cada acción\n2. SIEMPRE usar `buscar_productos` para TODA consulta de productos\n3. NUNCA responder de memoria sobre productos, precios o stock\n4. NUNCA asumir que usuario quiere comprar solo porque pregunta - debe seleccionar específicamente\n5. SIEMPRE tratar al cliente por su nombre real: `{{ $('getClientes').item.json.nombre_real }}`\n6. NUNCA pedir datos ya almacenados en la base de datos\n7. OBLIGATORIO usar `insert_name_mail` para actualizar datos del cliente\n8. NUNCA mencionar códigos técnicos (promo_XXXX o cod_XXXX) - solo nombres y precios\n9. NUNCA procesar comprobantes - dirigir a Anto (+5492234245220)\n10. Cuando se ejecute `promo_productos` o `buscar_productos` → \"LISTA_ENVIADA\"\n11. SIEMPRE pedir confirmación antes de mostrar promociones durante la conversación\n\n## Herramientas\n- `buscar_productos`: Para toda consulta de productos → \"LISTA_ENVIADA\"\n- `calcular_total`: Para sumar carrito\n- `verificar_elegibilidad_envio`: Confirma si pedido supera $30.000\n- `buscar_comida`: Para milanesas, sandwiches, buñuelos, tartas\n- `qr_pagos`: Genera QR según billetera → \"qr_enviado\"\n- `insertar_pedido`: Guarda pedido y genera código\n- `promo_productos`: Muestra promociones → \"LISTA_ENVIADA\"\n- `verificar_pedido_existente`: Verifica pedidos activos\n- `getClientes`: Obtiene datos del cliente\n- `insert_name_mail`: Actualiza datos del cliente\n\n## Bienvenida\n```\n¡Hola {{ $('getClientes').item.json.nombre_real }}! Bienvenido a lo de Pocho 👋\n\n📍 Estamos en Bolívar y Neuquén\n⏰ Abiertos hoy de 7am a 21.30hs\n\n¿Querés ver nuestras comidas del día? (Sí/No)\n```\n\nSi responde \"Sí\" → [EJECUTAR herramienta buscar_comida] → \"LISTA_ENVIADA\"\n\n## Tono y estilo\n- Amigable, educado y cordial\n- Preguntas sutiles sobre cantidades\n- Sin \"che\", \"viste\", etc.\n- Frases como:\n  • \"¿Cuantas queres llevar?\"\n  • \"Si me decís cuántos necesitás, te lo preparo\"\n  • \"Perfecto, lo agregué a tu pedido\"\n  • \"¿Queres algo más o preferis que pasemos a confirmar?\"\n- Emojis con moderación\n\n## Promociones (Activación con confirmación)\n- Si menciona: \"promos\", \"promociones\", \"ofertas\", \"descuentos\", etc → Confirmar:\n  ```\n  ¿Querés que te muestre las promociones que tenemos hoy? (Sí/No)\n  ```\n- SOLO si responde \"Sí\" o alguna confirmacion  → Ejecutar herramienta `promo_productos` → \"LISTA_ENVIADA\"\n\n## Flujo de Selección y Pedido (CORREGIDO)\n\n1. **Mostrar productos**:\n  - Ejecutar `buscar_productos` o `buscar_comida` → \"LISTA_ENVIADA\"\n  - NO enviar mensajes adicionales, ESPERAR selección del usuario\n\n2. **Identificación de selección**:\n  - Si recibe mensaje con: \"Código: promo_XXXX\" → Ha elegido promoción\n  - Si recibe código \"cod_XXXX\" → Ha elegido producto regular\n  - NUNCA mencionar los códigos técnicos al cliente\n\n3. **Verificar pedido existente**:\n  - Ejecutar `verificar_pedido_existente`\n  - Si tiene pedido activo:\n    ```\n    Veo que ya tenés un pedido en curso. ¿Querés armar un pedido nuevo?\n    \n    Para cancelar el anterior, enviá mensaje a Anto al +5492234245220.\n    ```\n  - Si responde \"sí\" → continuar; si \"no\" → finalizar\n\n4. **OBLIGATORIO: Preguntar cantidad para CADA producto seleccionado**:\n  - \"¿Dale, cuántas necesitás?\"\n  - \"¿Cuántos te anoto?\"\n  - \"¿Qué cantidad querés llevar?\"\n  - ESPERAR respuesta con cantidad\n  - NUNCA asumir cantidad = 1\n\n5. **Añadir al carrito**:\n  - Confirmar: \"Perfecto, agregué [cantidad] [producto] a tu pedido\"\n  - Ejecutar herramienta para calcular subtotal si es necesario\n\n6. **SOLO DESPUÉS ofrecer más productos**:\n  - \"¿Querés algo más o preferís que pasemos a confirmar?\"\n  - Si dice \"sí\" → \"¿Qué producto te gustaría ver?\" \n    - Si menciona producto específico → `buscar_productos` → \"LISTA_ENVIADA\"\n  - Si dice \"no\" → pasar a confirmación del pedido completo\n---\n## REGLA CRÍTICA ADICIONAL:\n- NUNCA enviar mensaje sobre \"más productos\" inmediatamente después de \"LISTA_ENVIADA\"\n- SIEMPRE esperar que usuario seleccione Y defina cantidad antes de ofrecer más\n- Completar TODO el proceso de UN producto antes de continuar\n\n\n\n2. **Verificar pedido existente**:\n   - Ejecutar `verificar_pedido_existente`\n   - Si tiene pedido activo:\n     ```\n     Veo que ya tenés un pedido en curso. ¿Querés armar un pedido nuevo?\n     \n     Para cancelar el anterior, enviá mensaje a Anto al +5492234245220.\n     ```\n   - Si responde \"sí\" → continuar; si \"no\" → finalizar\n\n3. **Preguntar cantidad**:\n   - \"¿Dale, cuantas necesitas?\" o \"¿Barbaro, decime cuantas te anoto?\"\n\n4. **Ofrecer más productos**:\n   - \"¿Queres algo más o preferis que pasemos a confirmar?\"\n   - Si dice \"sí\" → Que producto te gustaria ver?\n      tenes cerveza? -> [EJECUTAR herramienta buscar_productos] → \"LISTA_ENVIADA\"\n   - Si dice \"no\" → pasar a confirmación\n\n5. **Confirmación inicial**:\n   ```\n   📋 A ver, repasemos tu pedido:\n     - [producto1] x [cantidad1] – $[subtotal1]\n     - [producto2] x [cantidad2] – $[subtotal2]\n   \n   💰 Total: $[total]\n   \n   ¿Todo bien así o querés cambiar algo?\n   ```\n\n6. **Validación de datos**:\n   - Mostrar datos del cliente:\n   ```\n   Tengo estos datos tuyos:\n   👤 Nombre: {{ $('getClientes').item.json.nombre_real }}\n   📞 Teléfono: {{ $('getClientes').item.json.Telefono }}\n   🏠 Dirección: {{ $('getClientes').item.json.Direccion }}\n   📧 Correo: {{ $('getClientes').item.json.Correo }}\n   \n   ¿Está todo bien así o querés cambiar algo?\n   ```\n   - Si falta dato: \"Me falta [dato]. ¿Me lo pasás?\"\n   - Si modifica dato: Actualizar con `insert_name_mail`\n\n7. **Verificación de ubicación**:\n   - Usar `verificar_rango_delivery` con dirección\n   - Si en rango: \"¡Buenísimo! Estás dentro de nuestra zona de delivery\"\n   - Si fuera de rango: \"Disculpá, estás fuera de zona. ¿Te sirve retirar en Neuquén 2098?\"\n\n8. **Total y envío**:\n   - Usar `calcular_total` y `verificar_elegibilidad_envio`\n   - <$30.000 → solo retiro\n   - ≥$30.000 Y en rango → envío disponible\n   - ≥$30.000 PERO fuera de rango → solo retiro\n\n9. **Pago**:\n   - \"¿Cómo te queda mejor pagar? 💵 Efectivo / 🏦 Transferencia / 📲 QR?\"\n   - QR → Preguntar app, usar `qr_pagos` → \"qr_enviado\"\n   - Transferencia → \"Alias: **Antofiginillull**\"\n   - Efectivo → \"Pagás al recibir o retirar\"\n\n10. **Resumen y confirmación final**:\n    ```\n    📝 RESUMEN DEL PEDIDO:\n    \n    👤 {Nombre}\n    📞 {Teléfono}\n    🏠 {Dirección}\n    📧 {Correo}\n    🚚 {Envío/Retiro}\n    \n    🛒 PRODUCTOS:\n    • {producto1} x{cantidad1} = ${precio1}\n    • {producto2} x{cantidad2} = ${precio2}\n    \n    💵 TOTAL: ${total}\n    💳 PAGO: {método_pago}\n    \n    ¿Todo correcto para confirmar?\n    ```\n\n11. **Finalización**:\n    - Si \"sí\" → `insertar_pedido` → \"¡Genial! Pedido confirmado ✅ Código: *{codigo}*\"\n    - Para transferencia, agregar: \"Recordá enviar comprobante con código a Anto: +5492234245220\"\n\n## Manejo de pagos\n- Si usuario dice \"ya pagué\":\n  ```\n  Gracias por avisarme. Para validar el pago, enviale el comprobante junto con tu código de pedido (*{codigo}*) a Anto al número +5492234245220.\n  \n  Como sistema de pedidos, no puedo procesar comprobantes. Los pagos son validados únicamente por Anto.\n  ```\n\n- Si intenta enviar comprobante a este chat:\n  ```\n  Por este chat no podemos recibir comprobantes. Por favor enviá el comprobante junto con tu código de pedido (*{codigo}*) directamente a Anto al número +5492234245220.\n  ```\n\n## Consultas de productos\nConsulta → `buscar_productos` → \"LISTA_ENVIADA\"\n\nEjemplos:\n- \"¿Tenés leche?\" → `buscar_productos` con \"leche\" → \"LISTA_ENVIADA\"\n- \"¿A cuánto está el queso?\" → `buscar_productos` con \"queso\" → \"LISTA_ENVIADA\"\n- \"¿Qué tienen?\" → `buscar_productos` con \"categorias\" → \"LISTA_ENVIADA\"\n\n## Respuestas a otros temas\n- Temas no relacionados:\n  > \"Disculpame 🙏, solo puedo ayudarte con productos, precios, envíos y pagos. ¿Te doy una mano con la despensa? 🛒\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        5060,
        280
      ],
      "id": "dbf21b06-d762-412b-b6ad-7d9966bcd5d7",
      "name": "Pocho"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('camposiniciales').item.json.telefonoCliente }}",
        "messageData": "={{ $json?.content || $json.response }}",
        "tail": true
      },
      "id": "6073ceaa-ea69-4aa7-bf3d-1049aa7de22b",
      "name": "apilaTexto",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3040,
        40
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f06e3084-8cb9-4f87-ad09-c55455696615",
              "leftValue": "={{ $json?.output ||  JSON.stringify($json.output[0].text)   }}",
              "rightValue": "qr_enviado",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5200,
        120
      ],
      "id": "fb8a394b-f78b-44c1-95ef-f00b33a200c6",
      "name": "If1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gate.whapi.cloud/messages/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "Bearer Qo7qoYEVIKvRppohj25MEaHl1dPwskEv"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": "={{1}}"
            },
            {
              "name": "body",
              "value": "={{ $json.msg.replace(/\\n/g,'\\n').replace(/\\\"/g,'\\'') }}"
            },
            {
              "name": "to",
              "value": "={{ $('camposiniciales').first().json.telefonoCliente }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6980,
        265
      ],
      "id": "1347c2b6-663a-45d7-b21b-eff486ff5c50",
      "name": "Texto"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=follow_up:{{ $('camposiniciales').item.json.telefonoCliente }}",
        "value": "={{$now}}",
        "expire": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -900,
        2180
      ],
      "id": "403cc44f-9fbd-4f4d-9b8c-519a3473e6c1",
      "name": "Follow",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "fPuzUHak5Qv9RB8I",
          "mode": "list",
          "cachedResultName": "DESPENSA - verificar_elegibilidad_envio"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "location": "={{ $json.location.location }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "direccion",
              "displayName": "direccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "location",
              "displayName": "location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1760,
        760
      ],
      "id": "a3af08d7-a703-40a2-80a0-388a8aea6771",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "name": "promo_productos",
        "description": "Llama a esta herramienta siempre que un usuario quiera ver las promociones de productos",
        "workflowId": {
          "__rl": true,
          "value": "HAtUjKa7vn5tm7K1",
          "mode": "list",
          "cachedResultName": "DESPENSA - Promociones_productos"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Telefono": "={{ $('camposiniciales').first().json.telefonoCliente }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "descripcion",
              "displayName": "descripcion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "Telefono",
              "displayName": "Telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "server",
              "displayName": "server",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "apikey",
              "displayName": "apikey",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "instance",
              "displayName": "instance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        5820,
        560
      ],
      "id": "989a1c4e-d65c-42fc-8b44-b04358238590",
      "name": "promociones"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        2720,
        60
      ],
      "id": "fef8c5df-7343-44e1-895e-5bc34aaa0beb",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('camposiniciales').first().json.telefonoCliente }}"
      },
      "id": "e093715d-b824-419c-80ac-e471d4fcbf76",
      "name": "Delete1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4480,
        480
      ],
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output.trim().includes(\"qr_enviado\") }}",
                    "rightValue": "qr_enviado",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "159113e0-5106-46b9-a8b6-470e8b1b6c01"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Qr enviado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "21f1d592-4504-443b-b25d-661708cd86bc",
                    "leftValue": "={{ $json.output.trim().includes(\"LISTA_ENVIADA\") }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Lista enviada"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5640,
        300
      ],
      "id": "8d9d6f6e-98ec-4e87-98b0-f297fc101e72",
      "name": "Switch"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pc1g3m0ih934pz9",
        "table": "mtxmanzpy3a6oz8",
        "returnAll": true,
        "options": {
          "where": "=(Telefono,eq,{{ $('camposiniciales').item.json.Telefono }})"
        }
      },
      "type": "n8n-nodes-base.nocoDbTool",
      "typeVersion": 3,
      "position": [
        6000,
        560
      ],
      "id": "0ab3ccfa-accd-4f42-84cc-81fafe9896e6",
      "name": "Nombre1",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Este código SIEMPRE devuelve un array de objetos como requiere el sistema\nfunction formatearProducto() {\n  try {\n    // Obtener los valores de las variables\n    const title = $('Webhook').first().json.body.messages[0].reply.list_reply.title;\n    const description = $('Webhook').first().json.body.messages[0].reply.list_reply.description;\n    \n    // DETECTAR SI ES COMIDA (por emoji o palabras clave)\n    const esComida = title.includes('🥟') || title.includes('🍖') || title.includes('🥬') || \n                     title.includes('🍝') || title.includes('🍕') || title.includes('🍗') || \n                     title.includes('🥩') || title.includes('🥧') || title.includes('🍲') ||\n                     title.includes('🥪') || title.includes('🍔') || title.includes('🥤') ||\n                     title.includes('☕') || title.includes('🍮') || title.includes('🍽️');\n    \n    if (esComida) {\n      // FORMATO PARA COMIDAS\n      // Extraer precio del título (formato: \"🥟 Empanada de carne - $1200\")\n      let precio = \"\";\n      const precioTitleMatch = title.match(/\\$\\s*([\\d,\\.]+)/);\n      if (precioTitleMatch && precioTitleMatch[1]) {\n        precio = precioTitleMatch[1];\n      }\n      \n      // Extraer nombre de la comida (quitar emoji y precio)\n      let nombreComida = title.replace(/[\\u{1F300}-\\u{1F9FF}]/gu, '').replace(/\\s*-\\s*\\$[\\d,\\.]+.*/, '').trim();\n      \n      const mensajeFormateado = `\n🍽️ *${nombreComida}*\n💰 Precio: *$${precio}*\n📝 ${description}\n\n¿Cuántas porciones querés?`;\n      \n      return mensajeFormateado;\n      \n    } else {\n      // FORMATO ORIGINAL PARA PRODUCTOS (sin modificar)\n      // Extraer los componentes individuales de la descripción\n      // Precio\n      let precio = \"\";\n      const precioMatch = description.match(/Precio:\\s*\\*\\$?([\\d,\\.]+)/);\n      if (precioMatch && precioMatch[1]) {\n        precio = precioMatch[1];\n      }\n      \n      // Código\n      let codigo = \"\";\n      const codigoMatch = description.match(/Código:\\s*(\\w+)/);\n      if (codigoMatch && codigoMatch[1]) {\n        codigo = codigoMatch[1];\n      }\n      \n      // Disponibilidad\n      let disponibilidad = \"🔴 Sin stock\";\n      if (description.includes(\"Disponible\")) {\n        disponibilidad = \"🟢 Disponible\";\n      }\n      \n      // Construir el mensaje en el formato deseado\n      const mensajeFormateado = `\n. ${title}\n.🔥 Precio: *$${precio}*\n.🆔 Código: ${codigo}\n.📦 Stock: ${disponibilidad}\n`;\n      \n      return mensajeFormateado;\n    }\n    \n  } catch (error) {\n    console.error(\"Error al formatear producto:\", error);\n    return \"Error al procesar producto\";\n  }\n}\n\n// IMPORTANTE: Este es el retorno que necesitas - SIEMPRE usar array de objetos\nreturn [\n  { \n    message_completo: formatearProducto() \n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1520,
        640
      ],
      "id": "9a71c6fd-e777-4577-8c6d-09bfa70ec4d1",
      "name": "Code"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        4720,
        260
      ],
      "id": "ee24559a-f263-431e-9eb4-262e40fcb691",
      "name": "Merge1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=agente_pocho:{{ $('camposiniciales').item.json.Telefono }}",
        "sessionTTL": 12000,
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        4720,
        560
      ],
      "id": "7601de59-539e-4da3-b470-5ce32e32fdbd",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "agente_pocho:5492254596618"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5360,
        900
      ],
      "id": "efc3a947-907f-45f9-b283-3d214310c169",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.innovasoftpro.dev",
            "content-length": "321",
            "accept": "application/json",
            "content-type": "application/json",
            "x-forwarded-for": "65.21.161.42",
            "x-forwarded-host": "n8n.innovasoftpro.dev",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "575dad520f0e",
            "x-real-ip": "65.21.161.42",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "messages": [
              {
                "id": "VJZ.QUrD1SapMVG4TXENaQ-gEwE_sPfuT8",
                "from_me": false,
                "type": "text",
                "chat_id": "5492254423359@s.whatsapp.net",
                "timestamp": 1747939767,
                "source": "mobile",
                "text": {
                  "body": "Tenés mayonesa?"
                },
                "from": "5492254423359",
                "from_name": "Fer { }"
              }
            ],
            "event": {
              "type": "messages",
              "event": "post"
            },
            "channel_id": "GROOTT-ZSFJB"
          },
          "webhookUrl": "https://n8n.innovasoftpro.dev/webhook/lodepocho",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "2kOn0Oz7c2uvczPK",
    "callerPolicy": "workflowsFromSameOwner",
    "timezone": "America/Argentina/Buenos_Aires"
  },
  "staticData": {
    "node:File Created": {
      "lastTimeChecked": "2025-01-24T00:40:06Z"
    },
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2025-01-19T21:20:51.336Z",
      "updatedAt": "2025-01-19T21:20:51.336Z",
      "id": "dgrS6et84MZNe4W0",
      "name": "POCHO"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-05-22T19:02:02.863Z",
  "versionId": "e3fce61a-9534-454d-bddb-93dd2167b62f"
}