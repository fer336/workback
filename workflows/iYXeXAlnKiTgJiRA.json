{
  "active": true,
  "connections": {
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Obtener cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "actualiza estado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Texto": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger2": {
      "main": [
        [
          {
            "node": "Configuración3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configuración3": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener cliente": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "actualiza estado": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        []
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-30T20:18:05.336Z",
  "id": "iYXeXAlnKiTgJiRA",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "QEVA - Mensajes",
  "nodes": [
    {
      "parameters": {
        "options": {
          "reset": "={{ $('Loop Over Items1').context.done}}"
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        260,
        -200
      ],
      "id": "9cd6b396-29e1-4d70-bbb0-781d42c3af00",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "// Obtener el timestamp actual como string (formato: \"2025-04-30T15:11\")\nconst timestampStr = $input.first().json.timestamp;\n\n// Separar la fecha y la hora\nconst [fecha, hora] = timestampStr.split('T');\nconst [horas, minutos] = hora.split(':').map(num => parseInt(num, 10));\n\n// Calcular horas y minutos para +5 minutos\nlet horasPlus = horas;\nlet minutosPlus = minutos + 5;\nif (minutosPlus >= 60) {\n  minutosPlus = minutosPlus - 60;\n  horasPlus = (horasPlus + 1) % 24;\n}\n\n// Calcular horas y minutos para -5 minutos\nlet horasMinus = horas;\nlet minutosMinus = minutos - 5;\nif (minutosMinus < 0) {\n  minutosMinus = minutosMinus + 60;\n  horasMinus = (horasMinus - 1 + 24) % 24;\n}\n\n// Formatear de vuelta a strings\nconst horasPlus_str = String(horasPlus).padStart(2, '0');\nconst minutosPlus_str = String(minutosPlus).padStart(2, '0');\nconst timestamp_plus5 = `${fecha}T${horasPlus_str}:${minutosPlus_str}`;\n\nconst horasMinus_str = String(horasMinus).padStart(2, '0');\nconst minutosMinus_str = String(minutosMinus).padStart(2, '0');\nconst timestamp_minus5 = `${fecha}T${horasMinus_str}:${minutosMinus_str}`;\n\n// Devolver los resultados\nreturn {\n  json: {\n    ...($input.first().json),\n    timestamp_original: timestampStr,\n    timestamp_minus5: timestamp_minus5,\n    timestamp_plus5: timestamp_plus5\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1280,
        -180
      ],
      "id": "b2246ee9-2d09-42e2-aec5-2c48f441391b",
      "name": "Code1"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        480,
        -280
      ],
      "id": "f3a7bd42-4e44-4059-b406-8807bc5ae62f",
      "name": "Wait",
      "webhookId": "e98ce2ba-e38d-4f23-9068-b7144ae56006"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "09891ed6-0d0b-41c5-b3b2-187d854f3dde",
              "leftValue": "={{ $json.estado }}",
              "rightValue": "pagado",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -180,
        -280
      ],
      "id": "91c62620-68a8-4b31-bdcb-2139ca4c868b",
      "name": "If1"
    },
    {
      "parameters": {
        "batchSize": "=1",
        "options": {}
      },
      "id": "167a3567-83ac-4909-8f21-8ed4bd97154c",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -400,
        -200
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtener la información del evento anterior\nconst evento =$input.first().json ;\n\n// Formatear las fechas\nconst fechaPago = new Date(evento.fecha_pago).toLocaleDateString('es-AR', {\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric'\n});\n\nconst fechaUltimoPago = new Date(evento.fecha_ultimo_pago).toLocaleDateString('es-AR', {\n  day: '2-digit',\n  month: '2-digit',\n  year: 'numeric'\n});\n\n// Crear el mensaje interactivo con diseño atractivo\nconst mensajePago = {\n  \"to\": evento.Clientes.Telefono,\n  \"type\": \"button\",\n  \"header\": {\n    \"text\": \"💳 AVISO DE PAGO PENDIENTE\"\n  },\n  \"body\": {\n    \"text\": `Estimado cliente,\\n\\n📅 *Fecha de vencimiento:* ${fechaPago}\\n💰 *Monto pendiente:* $${evento.monto_pendiente} USD\\n✅ *Último pago:* ${fechaUltimoPago}\\n\\n⚠️ Por favor, regularice su situación para continuar disfrutando del servicio.\\n\\n*${evento.bot_nombre}* - Sistema de cobranzas`\n  },\n  \"footer\": {\n    \"text\": \"💡 Toque el botón para abonar\"\n  },\n  \"action\": {\n    \"buttons\": [\n      {\n        \"type\": \"quick_reply\",\n        \"title\": \"💳 Pagar ahora\",\n        \"id\": \"pagar_servicio\"\n      }\n    ]\n  }\n};\n\n// Devolver el objeto\nreturn {\n  json: mensajePago\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        40,
        -280
      ],
      "id": "a2572889-9a06-43eb-ba80-d233dc7b6ec0",
      "name": "Code",
      "retryOnFail": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        920,
        -280
      ],
      "id": "f030fd04-533f-4e1b-8f48-9197236cb6f1",
      "name": "Wait2",
      "webhookId": "597bb0a1-341b-41fa-bf9d-17fd75a03ee6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://gate.whapi.cloud/messages/interactive",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "=Bearer B2v6DZyi27qmgYXOnvrYLEJ4l8KgN410"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "header",
              "value": "={{ $json.header }}"
            },
            {
              "name": "body",
              "value": "={{ $json.body }}"
            },
            {
              "name": "footer",
              "value": "={{ $json.footer }}"
            },
            {
              "name": "action",
              "value": "={{ $json.action }}"
            },
            {
              "name": "type",
              "value": "button"
            },
            {
              "name": "to",
              "value": "=5492254423359"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        700,
        -280
      ],
      "id": "42efe82c-7ecd-4542-b3c7-44be24e88bbb",
      "name": "Texto"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": "1"
            }
          ]
        }
      },
      "name": "Schedule Trigger2",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1640,
        -180
      ],
      "id": "1070e85a-aa81-468d-a41e-75a64581730c"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "server_evolution",
              "name": "server",
              "value": "https://db.innovasoftpro.dev",
              "type": "string"
            },
            {
              "id": "table",
              "name": "table",
              "value": "m65c7l442blgwqt",
              "type": "string"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{ DateTime.fromISO($json.timestamp).toFormat(\"yyyy-MM-dd'T'HH:mm\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1440,
        -180
      ],
      "id": "ac37b9c3-149e-40e7-a0e6-c65a78bb4a8a",
      "name": "Configuración3"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pgzahexmtqessds",
        "table": "m65c7l442blgwqt",
        "returnAll": true,
        "options": {
          "where": "={{ $json.whereCondition }}"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -1040,
        -180
      ],
      "id": "cfb83aed-fcb8-46ae-b1ad-7f06753e50d3",
      "name": "Obtener cliente",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "update",
        "projectId": "pgzahexmtqessds",
        "table": "m65c7l442blgwqt",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Id",
              "fieldValue": "={{ $('Obtener cliente').item.json.Id }}"
            },
            {
              "fieldName": "=estado",
              "fieldValue": "pagado"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        1180,
        -200
      ],
      "id": "a7508877-9b14-4627-ba3a-365b383a6c68",
      "name": "actualiza estado",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7df4593d-80b5-4eae-8274-9e85511b558b",
              "name": "msg.id",
              "value": "={{ $json.body.messages[0].reply.buttons_reply.id }}",
              "type": "string"
            },
            {
              "id": "fc14eb4a-d3f2-4582-9d07-179ee52e7c2d",
              "name": "msg.telefono",
              "value": "={{ $json.body.messages[0].chat_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -380,
        240
      ],
      "id": "a8bb73f0-d7e1-4722-929c-f2254c9acbee",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "806111d1-cedc-4ffa-a3aa-e84ccf84a405",
              "leftValue": "={{ $('Configuración3').item.json.timestamp }}",
              "rightValue": "={{ $json.fecha_pago }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -760,
        -240
      ],
      "id": "52859c0a-5172-42a5-bf97-3d098fc84073",
      "name": "If"
    }
  ],
  "pinData": {
    "Code1": [
      {
        "json": {
          "server": "https://db.innovasoftpro.dev",
          "table": "m65c7l442blgwqt",
          "timestamp": "2025-06-19T22:11",
          "timestamp_original": "2025-06-19T22:11",
          "timestamp_minus5": "2025-06-19T22:06",
          "timestamp_plus5": "2025-06-19T22:16"
        }
      }
    ],
    "Schedule Trigger2": [
      {
        "json": {
          "timestamp": "2025-06-19T22:11:49.011-03:00",
          "Readable date": "June 19th 2025, 10:11:49 pm",
          "Readable time": "10:11:49 pm",
          "Day of week": "Thursday",
          "Year": "2025",
          "Month": "June",
          "Day of month": "19",
          "Hour": "22",
          "Minute": "11",
          "Second": "49",
          "Timezone": "America/Argentina/Buenos_Aires (UTC-03:00)"
        }
      }
    ],
    "Configuración3": [
      {
        "json": {
          "server": "https://db.innovasoftpro.dev",
          "table": "m65c7l442blgwqt",
          "timestamp": "2025-06-19T22:11"
        }
      }
    ],
    "Obtener cliente": [
      {
        "json": {
          "Id": 2,
          "CreatedAt": "2025-05-12 22:22:53+00:00",
          "UpdatedAt": "2025-06-19 21:25:22+00:00",
          "fecha_pago": "2025-05-15T23:41",
          "fecha_ultimo_pago": "2025-04-15T21:33",
          "monto_pendiente": "200 usd",
          "bot_nombre": "Pocho Bot",
          "fecha_limite": "2025-05-16T21:33",
          "Clientes_id": 6,
          "estado": "pagado",
          "Clientes": {
            "Id": 6,
            "Telefono": "5492234245220"
          }
        }
      },
      {
        "json": {
          "Id": 3,
          "CreatedAt": "2025-05-12 22:24:22+00:00",
          "UpdatedAt": "2025-06-20 01:10:16+00:00",
          "fecha_pago": "2025-06-19T22:11",
          "fecha_ultimo_pago": "2025-05-20T10:00",
          "monto_pendiente": "200 usd",
          "bot_nombre": "Pocho Bot",
          "fecha_limite": "2025-06-21T9:33",
          "Clientes_id": 1,
          "estado": "debe",
          "Clientes": {
            "Id": 1,
            "Telefono": "5492254423359"
          }
        }
      }
    ],
    "If": [
      {
        "json": {
          "Id": 3,
          "CreatedAt": "2025-05-12 22:24:22+00:00",
          "UpdatedAt": "2025-06-20 01:10:16+00:00",
          "fecha_pago": "2025-06-19T22:11",
          "fecha_ultimo_pago": "2025-05-20T10:00",
          "monto_pendiente": "200 usd",
          "bot_nombre": "Pocho Bot",
          "fecha_limite": "2025-06-21T9:33",
          "Clientes_id": 1,
          "estado": "debe",
          "Clientes": {
            "Id": 1,
            "Telefono": "5492254423359"
          }
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Argentina/Buenos_Aires",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "2kOn0Oz7c2uvczPK"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger2": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-06-20T02:23:34.943Z",
  "versionId": "ace7a271-b364-4a3e-bc0b-d4f42063789a"
}