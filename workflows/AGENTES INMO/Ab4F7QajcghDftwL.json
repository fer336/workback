{
  "active": false,
  "connections": {
    "URL datos": {
      "main": [
        [
          {
            "node": "Determinar Tipo de Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Determinar Tipo de Mensaje": {
      "main": [
        [
          {
            "node": "¿Es URL de Propiedad?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "¿Hay Datos en Redis?": {
      "main": [
        [
          {
            "node": "Respuesta Final",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta No Hay Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta No Hay Datos": {
      "main": [
        [
          {
            "node": "Respuesta Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Respuesta Código No en DB",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta Código No Encontrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Contador": {
      "main": [
        [
          {
            "node": "Obtener Contador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Datos": {
      "main": [
        [
          {
            "node": "Guardar URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guardar URL": {
      "main": [
        [
          {
            "node": "Guardar URL activa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guardar URL activa": {
      "main": [
        [
          {
            "node": "Añadir a Lista URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Añadir a Lista URLs": {
      "main": [
        [
          {
            "node": "Preparar Consulta URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Consulta URL": {
      "main": [
        [
          {
            "node": "Obtener URL Activa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener URL Activa": {
      "main": [
        [
          {
            "node": "Preparar Clave URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Clave URL": {
      "main": [
        [
          {
            "node": "Obtener URL para Analizar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener URL para Analizar": {
      "main": [
        [
          {
            "node": "Preparar Datos para HTTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Datos para HTTP": {
      "main": [
        [
          {
            "node": "Hora actual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Añadir a Historial": {
      "main": [
        [
          {
            "node": "Respuesta Éxito",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta Código No en DB": {
      "main": [
        [
          {
            "node": "Preparar Datos para Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Obtengo ultima propiedad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Codigo propiedad": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtengo ultima propiedad": {
      "main": [
        [
          {
            "node": "¿Hay Datos en Redis?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Contador": {
      "main": [
        [
          {
            "node": "Preparar Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Ya se verifico esta url?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scraping Bee": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtiene las URL en memoria": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Datos para Redis": {
      "main": [
        [
          {
            "node": "Guarda URL",
            "type": "main",
            "index": 0
          },
          {
            "node": "Añadir a Historial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Historial de analisis": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete contador": {
      "main": [
        [
          {
            "node": "Historial de analisis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Delete contador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convierto todo el json": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hora actual": {
      "main": [
        [
          {
            "node": "Scraping Bee",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "¿Es URL de Propiedad?": {
      "main": [
        [
          {
            "node": "Obtiene las URL en memoria",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Codigo propiedad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ya se verifico esta url?": {
      "main": [
        [
          {
            "node": "Contador",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Codigo propiedad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guarda URL": {
      "main": [
        [
          {
            "node": "Lista de url Scrapeadas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Convierto todo el json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reaction4": {
      "main": [
        []
      ]
    }
  },
  "createdAt": "2025-03-15T12:30:05.931Z",
  "id": "Ab4F7QajcghDftwL",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AGENTE INMO - VALIDAR PROPIEDAD",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "session_id"
            },
            {
              "name": "consulta_usuario"
            },
            {
              "name": "numero_telefono"
            },
            {
              "name": "url"
            },
            {
              "name": "instance"
            },
            {
              "name": "apikey"
            },
            {
              "name": "idMensaje"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -3480,
        520
      ],
      "id": "f2f1fc00-3136-4724-9ff6-4b79ad6420d0",
      "name": "URL datos"
    },
    {
      "parameters": {
        "jsCode": "// Obtener mensaje y sessionId\nconst mensaje = $input.first().json.consulta_usuario;\nconst sessionId = $input.first().json.session_id;\n\n// Expresión regular para encontrar URLs en el texto\nconst urlRegex = /(https?:\\/\\/[^\\s,]+)/g;\nconst matches = mensaje.match(urlRegex);\n\n// Inicializar variables\nlet urlLimpia = '';\nlet esUrlPropiedad = false;\n\n// Si hay URL, extraerla y marcar como URL de propiedad\nif (matches && matches.length > 0) {\n  urlLimpia = matches[0]; // Tomar la primera URL encontrada\n  esUrlPropiedad = true;  // Cualquier URL se considera como propiedad\n}\n\n// Retornar resultado\nreturn {\n  session_id: sessionId,\n  mensaje_usuario: esUrlPropiedad ? urlLimpia : mensaje, // Si es URL, usar la URL, sino el mensaje original\n  es_url_propiedad: esUrlPropiedad\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2960,
        520
      ],
      "name": "Determinar Tipo de Mensaje",
      "id": "a500a2b3-57de-4712-8d79-08670e917c37"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9d2c3a47-1b3c-5a6e-b47c-c5a6e7d8e9f0",
              "leftValue": "={{ $json.Propiedad }}",
              "rightValue": 1,
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1260,
        520
      ],
      "name": "¿Hay Datos en Redis?",
      "id": "4e2c6ca5-2d98-4bba-81d9-99b223096f16"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "i2j3k4l5-m6n7-0g4f-f81h-m6n7o8p9q0r1",
              "name": "response",
              "value": "No tengo información sobre propiedades en tu sesión actual. Por favor, primero envíame el enlace de una propiedad para analizarla.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1020,
        620
      ],
      "id": "e40cf5cf-0ee0-48aa-8e2c-01a4c32f5ec2",
      "name": "Respuesta No Hay Datos"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "j3k4l5m6-n7o8-1h5g-g92i-n7o8p9q0r1s2",
              "name": "response",
              "value": "={{ $json.Propiedad }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -800,
        500
      ],
      "id": "715f5bde-8adf-402c-ab87-b5d86d85af6e",
      "name": "Respuesta Final"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1vxULMw6IdEF03hfs2a-svqJUTEuSWbW5wVUQkk88eU4",
          "mode": "list",
          "cachedResultName": "Cliente:00_urls_francisco",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vxULMw6IdEF03hfs2a-svqJUTEuSWbW5wVUQkk88eU4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Codigos",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1cJKKaB8YIGe73hE5EE8KaWX1gFulpzmGrAYeesCGJpE/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "CODIGO",
              "lookupValue": "={{ $json.codigo }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        1440,
        -40
      ],
      "id": "b025a903-9f09-4110-9444-ef6af7284db2",
      "name": "Google Sheets",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "lRj57XPEqOXW9kOd",
          "name": "Qeva Solutions Sheet"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c93e135-1306-4f9f-b1b9-8d1a325d9b83",
              "leftValue": "={{ $json.CODIGO }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -200,
        620
      ],
      "id": "21d66fea-7f7d-49a6-bc53-5d391a86638f",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "incr",
        "key": "=propiedades:{{ $('URL datos').item.json.numero_telefono }}:contador",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1600,
        -100
      ],
      "name": "Contador",
      "id": "941ac84d-30ed-4b23-bc96-358b76d88368",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtener los datos relevantes\nconst sessionId = $('URL datos').first().json.numero_telefono;\nconst urlMsg =$('Determinar Tipo de Mensaje').first().json.mensaje_usuario ;\nconst contadorKey = 'propiedades:' + sessionId + ':contador';\nconst contador = $input.first().json.getContador;\n\n// Crear y retornar un objeto con toda la información necesaria\nreturn {\n  session_id: sessionId,\n  contador: contador,\n  url_mensaje: urlMsg,\n  contador_key: contadorKey,\n  url_key: 'propiedades:' + sessionId + ':url:' + contador,\n  url_activa_key: 'propiedades:' + sessionId + ':url_activa'\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1160,
        -100
      ],
      "name": "Preparar Datos",
      "id": "f2950b0b-ee73-4a8e-a57e-5c929c5a0716"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.url_key }}",
        "value": "={{ $json.url_mensaje }}",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -940,
        -100
      ],
      "name": "Guardar URL",
      "id": "168b35b9-763d-45c5-b469-fa0dc9ef42c7",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.url_activa_key }}",
        "value": "={{ $json.contador }}",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -740,
        -100
      ],
      "name": "Guardar URL activa",
      "id": "c052db4e-58fe-4d60-90e1-cfb44c09a3af",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=propiedades:{{ $('URL datos').item.json.numero_telefono }}:url_lista",
        "messageData": "={{$json.contador}}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -520,
        -100
      ],
      "name": "Añadir a Lista URLs",
      "id": "78de2dd6-a550-447a-b112-ebd9bdc773d5",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtener datos de la sesión\nconst telefono =$('URL datos').first().json.numero_telefono ;\n\n// Este nodo prepara los datos necesarios para obtener la URL activa\nreturn {\n  celular: telefono,\n  url_activa_key: 'propiedades:' + telefono + ':url_activa'\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1740,
        140
      ],
      "name": "Preparar Consulta URL",
      "id": "bf8da8df-31a4-4c71-b2c5-bf694a3749f8"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "contador_activo",
        "key": "={{ $json.url_activa_key }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1520,
        140
      ],
      "name": "Obtener URL Activa",
      "id": "8c9c001b-56cf-4d53-978e-f74364d6f33f",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtener datos de entrada\nconst sessionId = $('Preparar Consulta URL').first().json.celular;\nconst contadorActivo = $('Añadir a Lista URLs').first().json.contador;\n\n// Crear la clave para obtener la URL\nreturn {\n  telefono: sessionId,\n  contador_activo: contadorActivo,\n  url_key: 'propiedades:' + sessionId + ':url:' + contadorActivo\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1300,
        140
      ],
      "name": "Preparar Clave URL",
      "id": "18d0155b-4f2e-41a8-8623-497a25ef859e"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "ID",
        "key": "={{ $json.url_key }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1080,
        140
      ],
      "name": "Obtener URL para Analizar",
      "id": "623a8ac2-0558-4309-8622-1716ea2553fe",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Este nodo hace de puente entre la gestión de URLs y el análisis\nconst sessionId = $('URL datos').first().json.numero_telefono;\nconst urlPropiedad =$input.first().json.ID ; // La URL obtenida del nodo anterior\n\n// Validar que tengamos una URL para procesar\nif (!urlPropiedad || urlPropiedad === null) {\n  console.log('Error: No se pudo obtener una URL válida para analizar');\n  return {\n    error: true,\n    message: 'No se pudo obtener una URL válida para analizar',\n    session_id: sessionId\n  };\n}\n\nreturn {\n  ID: urlPropiedad, // Esta será la URL que se enviará a HTTP Request\n  session_id: sessionId,\n  error: false\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -880,
        140
      ],
      "name": "Preparar Datos para HTTP",
      "id": "fc94db30-5e9f-42a0-bd0e-5916511c572b"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=propiedades_historial_analisis",
        "messageData": "={{ $('Respuesta Código No en DB').first().json.codigo_propiedad }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1300,
        660
      ],
      "name": "Añadir a Historial",
      "id": "0e0a63cb-deb0-42b8-97b2-4aa0aa27750e",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a76c80f3-979f-42a1-bfca-024022494163",
              "name": "response",
              "value": "=Pertenece al portafolio",
              "type": "string"
            },
            {
              "id": "q1w2e3r4-t5y6-u7i8-o9p0",
              "name": "codigo_propiedad",
              "value": "={{ $('Añadir a Historial').item.json.codigo_propiedad }}",
              "type": "string"
            },
            {
              "id": "a1s2d3f4-g5h6-j7k8-l9z0",
              "name": "session_id",
              "value": "={{ $('Añadir a Historial').item.json.session_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1540,
        660
      ],
      "id": "257ef0e6-9a35-4c59-a57d-4811bed3ad40",
      "name": "Respuesta Éxito"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a76c80f3-979f-42a1-bfca-024022494163",
              "name": "response",
              "value": "={{ $('Convierto todo el json').item.json.data }}",
              "type": "string"
            },
            {
              "id": "r1s2t3u4-v5w6-x7y8-z9a0",
              "name": "codigo_propiedad",
              "value": "={{ $json.CODIGO }}",
              "type": "string"
            },
            {
              "id": "ff2d2c27-5e84-4d02-af54-a18c6ab9b0eb",
              "name": "ID",
              "value": "={{ $('URL datos').item.json.numero_telefono }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        460
      ],
      "id": "8efa323f-63ef-4865-8566-8a10776dd3ec",
      "name": "Respuesta Código No en DB"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a76c80f3-979f-42a1-bfca-024022494163",
              "name": "response",
              "value": "=No se pudo encontrar un código de propiedad válido en la URL proporcionada. Por favor, intenta con otra URL de propiedad inmobiliaria.",
              "type": "string"
            },
            {
              "id": "c1v2b3n4-m5a6-s7d8-f9g0",
              "name": "session_id",
              "value": "={{ $json.session_id }}",
              "type": "string"
            },
            {
              "id": "h1j2k3l4-z5x6-c7v8-b9n0",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        520,
        680
      ],
      "id": "2a73699a-c38f-4c71-a45c-502e1ea4a133",
      "name": "Respuesta Código No Encontrado"
    },
    {
      "parameters": {
        "jsCode": "// Get the Propiedad array from the input\nconst propiedadArray = $input.first().json.Propiedad;\n\n// Check if it's an array and has elements\nif (Array.isArray(propiedadArray) && propiedadArray.length > 0) {\n  // Get the last element using array indexing\n  const lastElement = propiedadArray[propiedadArray.length - 1];\n  \n  // Return an object with both the original array and the last element\n  return {\n    Propiedades: propiedadArray,\n    Ultima_propiedad: lastElement\n  };\n} else {\n  // Handle the case where Propiedad is not an array or is empty\n  return {\n    Propiedades: propiedadArray,\n    Ultima_propiedad: \"No array elements found\"\n  };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1740,
        520
      ],
      "id": "31d076fa-523d-4e4c-ae05-b0b09a221043",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Propiedad",
        "key": "=propiedades_historial_analisis",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1920,
        520
      ],
      "name": "Codigo propiedad",
      "id": "1e19aaf4-b026-4035-b390-d632a6533dd8",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Propiedad",
        "key": "=codigo:{{ $json.Ultima_propiedad }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1520,
        520
      ],
      "id": "856bf474-cc40-4c9a-a376-87664084a0d6",
      "name": "Obtengo ultima propiedad",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27653da2-316c-4f93-ad99-2a5b3a9a805c",
              "name": "startTime",
              "value": "={{$now}}",
              "type": "string"
            },
            {
              "id": "a631eda1-1e3f-45fa-be8c-91d3f63007d0",
              "name": "",
              "value": "={{ $('Preparar Datos para HTTP').item.json.ID }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -240,
        -20
      ],
      "id": "a5db4bb7-aaac-4bf5-b324-ea852f117845",
      "name": "Hora actual"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "getContador",
        "key": "=propiedades:{{$('URL datos').first().json.numero_telefono}}:contador",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1380,
        -100
      ],
      "name": "Obtener Contador",
      "id": "ea6c9b06-aa95-4032-abbe-98f9216070e7",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 1. Obtener el mensaje de usuario que contiene la URL\nconst mensaje = $('Determinar Tipo de Mensaje').first().json.mensaje_usuario || \"\";\n\n// 2. Obtener la lista de URLs almacenadas\nconst urlsLista = $input.first().json.urls_lista || [];\n\n// Asegurarse de que urlsLista sea un array\nlet listaFinal = urlsLista;\nif (!Array.isArray(urlsLista)) {\n  if (typeof urlsLista === \"string\") {\n    try {\n      listaFinal = JSON.parse(urlsLista);\n    } catch (e) {\n      listaFinal = [urlsLista];\n    }\n  } else {\n    listaFinal = [];\n  }\n}\n\n// 3. Verificar si el mensaje coincide con alguna URL en la lista (COMPARACIÓN EXACTA)\nlet hayCoincidencia = false;\nlet urlComparacion = null;\n\n// Recorrer toda la lista de URLs y comparar directamente\nfor (const url of listaFinal) {\n  // Comparación directa, sin normalización\n  if (mensaje === url) {\n    hayCoincidencia = true;\n    urlComparacion = url;\n    console.log(\"¡URL duplicada encontrada!\");\n    break;\n  }\n}\n\n// 4. Preparar arrays de URLs nuevas y existentes\nconst nuevasUrls = [];\nconst urlsExistentes = [];\n\nif (hayCoincidencia) {\n  // Si la URL ya existe, agregarla a existentes\n  urlsExistentes.push(mensaje);\n} else if (mensaje) {\n  // Si la URL no existe y no está vacía, agregarla a nuevas\n  nuevasUrls.push(mensaje);\n  // Y también agregarla a la lista de URLs\n  listaFinal.push(mensaje);\n}\n\n// 5. Identificar la URL activa\n// Si hay coincidencia, usar la URL que coincidió\n// Si no, usar el mensaje o la última URL de la lista\nconst urlActiva = urlComparacion || mensaje || \n  (listaFinal.length > 0 ? listaFinal[listaFinal.length - 1] : null);\n\n// 6. Si tenemos más de 20 URLs, mantener solo las 20 más recientes\nif (listaFinal.length > 20) {\n  listaFinal = listaFinal.slice(-20);\n}\n\n// 7. Asegurarse de que la URL activa siga estando en la lista\nif (urlActiva && !listaFinal.includes(urlActiva)) {\n  listaFinal.unshift(urlActiva);\n  if (listaFinal.length > 20) {\n    listaFinal.pop();\n  }\n}\n\n// 8. Preparar el resultado\nreturn {\n  json: {\n    urls_lista: listaFinal,\n    nuevas_urls: nuevasUrls,\n    urls_existentes: urlsExistentes,\n    hay_urls_duplicadas: hayCoincidencia,\n    url_activa: urlActiva,\n    url_comparacion: urlComparacion\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2180,
        -80
      ],
      "id": "d41ca516-9b82-4714-9d87-c3d954d0e563",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "https://app.scrapingbee.com/api/v1",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "api_key",
              "value": "LOUWLMAGM9M9UQ4Y08XGH8LV5GF2WZXM8QMS35ZQRJWCJYPEBZFLQ5BNOVYAUMQO1W34JAZ21AJPWVA2"
            },
            {
              "name": "url",
              "value": "={{ $('Preparar Datos para HTTP').item.json.ID }}"
            },
            {
              "name": "stealth_proxy",
              "value": "true"
            },
            {
              "name": "country_code",
              "value": "ar"
            },
            {
              "name": "premium_proxy",
              "value": "true"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        180,
        0
      ],
      "id": "8e35183e-98d1-4635-8dea-6399bb8f741c",
      "name": "Scraping Bee"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "urls_lista",
        "key": "=urls",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2380,
        -80
      ],
      "id": "023ed0e5-ae9b-43dd-9cd5-862f0b974a3b",
      "name": "Obtiene las URL en memoria",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Procesar el resultado del análisis\nconst sessionId =$('Respuesta Código No en DB').first().json.ID ;\nconst codigo = $('Respuesta Código No en DB').first().json.codigo_propiedad;\nconst analisisTexto = $('Respuesta Código No en DB').first().json.response ;\nconst url= $('Preparar Datos para HTTP').first().json.ID\n\n// Preparar datos para guardar en Redis\nreturn {\n  url_activa: url,\n  telefono: sessionId,\n  codigo_propiedad: codigo,\n  analisis: analisisTexto,\n  timestamp: Date.now(),\n  redis_key: `propiedades:analisis:${codigo}`\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        460
      ],
      "id": "bbfe57a0-7f67-4eec-b5ae-fa5c2e877ad3",
      "name": "Preparar Datos para Redis"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=propiedades_historial_analisis"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -480,
        1060
      ],
      "id": "9b7026de-5f40-411a-ba18-b9d11752774e",
      "name": "Historial de analisis",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=propiedades:5492254423359:contador"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -740,
        1060
      ],
      "id": "e74e997a-4065-4c2e-8334-326a24c4920d",
      "name": "Delete contador",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -960,
        1060
      ],
      "id": "b75eb018-445b-44c2-9672-09cac27fb572",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=urls"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -240,
        1060
      ],
      "id": "2fb7275f-c783-4222-9b1f-61cf8b644343",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "urls"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        0,
        1060
      ],
      "id": "b0d63f9a-1c0d-4d0e-8c6c-b842e47e9ff8",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_chat_histories_inmobiliaria",
          "mode": "list",
          "cachedResultName": "n8n_chat_histories_inmobiliaria"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        480,
        1060
      ],
      "id": "665e1205-dea6-4faf-ab7f-69cb1932d00a",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "E1mi81N6Tmr5cHS5",
          "name": "GENERICO"
        }
      }
    },
    {
      "parameters": {
        "content": "# Flujo de recoleccion de datos",
        "height": 540,
        "width": 2060,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2420,
        -160
      ],
      "typeVersion": 1,
      "id": "ae05febb-d37c-40d9-9edb-ca3f402f1c0e",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Scraping web",
        "height": 560,
        "width": 840,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -340,
        -180
      ],
      "typeVersion": 1,
      "id": "404d3ac1-59e4-4d97-b74b-72bd81135d0b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cf82780d-b74c-4c33-b8f4-17a18b55b73a",
              "name": "data",
              "value": "={{ $json.datos }}",
              "type": "object"
            },
            {
              "id": "01456660-e4de-470a-8e28-9f880fa6f946",
              "name": "codigo",
              "value": "={{ $json.codigo }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1240,
        -40
      ],
      "id": "c16a407e-f6b7-4b69-a701-67d34adb7fd4",
      "name": "Convierto todo el json"
    },
    {
      "parameters": {
        "content": "## Preparamos la data para guardar en Redis",
        "height": 440,
        "width": 2220,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -320,
        420
      ],
      "typeVersion": 1,
      "id": "af45cdcc-bb80-454e-bd11-add30de2d12f",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c1b2936-0c24-4a3f-ae68-c4172b4d7b4d",
              "leftValue": "={{ $json.es_url_propiedad }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2680,
        520
      ],
      "name": "¿Es URL de Propiedad?",
      "id": "9fb574b5-dc3c-440c-82a5-43cde2b5312e"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ffc6cd32-703b-46db-8f3d-0e64c9e66d4d",
              "leftValue": "={{ $json.hay_urls_duplicadas }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1980,
        -80
      ],
      "id": "f7942cf2-e230-4e3b-b724-c8fde49b9c3c",
      "name": "Ya se verifico esta url?"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=codigo:{{ $json.codigo_propiedad }}",
        "value": "={{ $json.analisis }}",
        "expire": true,
        "ttl": 12600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1300,
        460
      ],
      "name": "Guarda URL",
      "id": "c6b100ae-36d3-462a-988e-22ebf1267d86",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "urls",
        "value": "={{ $json.url_activa }}",
        "expire": true,
        "ttl": 12600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1520,
        460
      ],
      "id": "983dddf8-13cc-48a5-91cc-12824596346a",
      "name": "Lista de url Scrapeadas",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "contador:5492254423359"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        200,
        1060
      ],
      "id": "7ce31b87-5113-4a72-9016-7838742a7ac2",
      "name": "Redis2",
      "credentials": {
        "redis": {
          "id": "JMklVOvkU7koL2UG",
          "name": "Redis"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.data }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Extrae la información de la propiedad y devuelve ÚNICAMENTE un JSON válido con esta estructura exacta:\n\n{\n \"Cod:\": \"código_de_la_propiedad\",\n \"detalle_propiedad\": {\n   \"tipo_propiedad\": \"Departamento/Casa/etc\",\n   \"operacion\": \"Venta/Alquiler\",\n   \"precio_valor\": ,\n   \"precio_moneda\": \"USD/ARS\",\n   \"expensas\": 12345\n },\n \"ubicacion\": {\n   \"direccion\": \"dirección_completa\",\n   \"barrio\": \"nombre_del_barrio\",\n   \"ciudad\": \"nombre_de_la_ciudad\",\n   \"provincia\": \"nombre_de_la_provincia\"\n },\n \"caracteristicas\": {\n   \"superficie_total\": 123,\n   \"superficie_cubierta\": 123,\n   \"ambientes\": 2,\n   \"dormitorios\": 1,\n   \"banos\": 1,\n   \"cocheras\": 0,\n   \"antiguedad\": \"años_o_descripción\",\n   \"estado\": \"Excelente/Bueno/etc\"\n },\n \"descripcion\": \"descripción_completa_de_la_propiedad\",\n \"amenities\": \"lista_de_amenities_separados_por_comas\",\n \"fotos\": [\"url1\", \"url2\", \"url3\"]\n}\n\nREGLAS IMPORTANTES:\n- Para \"Cod:\", busca ÚNICAMENTE códigos que aparezcan en la descripción del texto, NO usar:\n * Cód. del anunciante\n * Cód. Zonaprop  \n * Número de matrícula\n- Si no hay código en la descripción, usar \"N/A\"\n- Números deben ser números (sin comillas)\n- Strings deben tener comillas\n- Si algún dato no existe, usar null para números o \"N/A\" para strings\n- Solo devolver el JSON, sin explicaciones ni texto adicional"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        640,
        0
      ],
      "id": "fc88287d-1be5-4cc1-ac9a-f0d6e2af5411",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17-thinking",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        860,
        160
      ],
      "id": "7a3e7a5c-41a1-4a93-97cf-78548ec900c9",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "9O8uUWkp7h4KwsVD",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Resteo de variables",
        "height": 420,
        "width": 1480,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1080,
        920
      ],
      "id": "a636bd6c-ed82-41e1-ba44-d82112b87670",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# Cuando los datos ya existen en memoria ingresa por este flujo",
        "height": 440,
        "width": 2060
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2420,
        400
      ],
      "typeVersion": 1,
      "id": "b0fb6c62-9ef2-4ded-b395-9601822f2893",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Separo la informacion",
        "height": 560,
        "width": 1360,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        520,
        -180
      ],
      "typeVersion": 1,
      "id": "e99714d6-aff9-455c-928d-ab323f5c8f3c",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('URL datos').item.json.url }}/message/sendReaction/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('URL datos').item.json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={   \n    \"key\": {\n        \"remoteJid\": \"{{ $('URL datos').item.json.numero_telefono }}@s.whatsapp.net\",\n        \"fromMe\":false,\n        \"id\": \"{{ $('URL datos').item.json.idMensaje }}\"\n    },\n    \"reaction\": \"🕦\"\n} ",
        "options": {}
      },
      "id": "e4236264-9c7a-41be-99e1-0159300270f4",
      "name": "Reaction2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1940,
        -800
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtener los datos de entrada desde text\nconst datosTexto = $input.first().json.text;\n\n// Validar que existe el texto\nif (!datosTexto) {\n  return {\n    json: {\n      error: \"No se encontró texto en la entrada\"\n    }\n  };\n}\n\n// Parsear el JSON desde el texto\nlet datos;\ntry {\n  // Si el texto contiene markdown o texto adicional, extraer solo el JSON\n  const jsonMatch = datosTexto.match(/\\{[\\s\\S]*\\}/);\n  const jsonString = jsonMatch ? jsonMatch[0] : datosTexto;\n  \n  datos = JSON.parse(jsonString);\n} catch (error) {\n  return {\n    json: {\n      error: \"No se pudo parsear el JSON\",\n      textoOriginal: datosTexto,\n      errorDetalle: error.message\n    }\n  };\n}\n\n// Extraer el código\nconst codigo = datos[\"Cod:\"];\n\n// Crear un nuevo objeto sin el campo \"Cod:\"\nconst datosRestantes = { ...datos };\ndelete datosRestantes[\"Cod:\"];\n\n// Retornar el resultado separado\nreturn {\n  json: {\n    codigo: codigo,\n    datos: datosRestantes,\n    procesamientoExitoso: true\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        -40
      ],
      "id": "2b3fec37-1dbe-4c6b-b779-fa7a7aaf231d",
      "name": "Code3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('URL datos').item.json.url }}/message/sendReaction/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('URL datos').item.json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={   \n    \"key\": {\n        \"remoteJid\": \"{{ $('URL datos').item.json.numero_telefono }}@s.whatsapp.net\",\n        \"fromMe\":false,\n        \"id\": \"{{ $('URL datos').item.json.idMensaje }}\"\n    },\n    \"reaction\": \"⏳\"\n} ",
        "options": {}
      },
      "id": "8abd64d5-dd09-42b0-94f2-53099f533bf5",
      "name": "Reaction4",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1760,
        -800
      ]
    }
  ],
  "pinData": {
    "URL datos": [
      {
        "json": {
          "session_id": null,
          "consulta_usuario": "https://s3.eu-central-1.wasabisys.com/in-files/5492254596618/oga-e8f2063ebff164734844bb5f8be49eeb-806104fec3dfb93f.oga",
          "numero_telefono": "5492254423359",
          "idMensaje": "6PIGPr_xZHNIRLtfi.Se6w-gGEE_sPfuT8"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-03-23T17:49:20.946Z",
      "updatedAt": "2025-03-23T17:49:20.946Z",
      "id": "UdWAGpsQzroykED6",
      "name": "AGENTES INMO"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-06-03T02:20:11.115Z",
  "versionId": "397dbc0b-fef0-481d-b8b8-92b1110e1810"
}