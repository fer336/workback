{
  "active": false,
  "connections": {
    "URL datos": {
      "main": [
        [
          {
            "node": "Determinar Tipo de Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Determinar Tipo de Mensaje": {
      "main": [
        [
          {
            "node": "¿Es URL de Propiedad?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "¿Hay Datos en Redis?": {
      "main": [
        [
          {
            "node": "Respuesta Final",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta No Hay Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta No Hay Datos": {
      "main": [
        [
          {
            "node": "Respuesta Final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Update a row",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Respuesta Código No Encontrado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Contador": {
      "main": [
        [
          {
            "node": "Obtener Contador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Datos": {
      "main": [
        [
          {
            "node": "Guardar URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guardar URL": {
      "main": [
        [
          {
            "node": "Guardar URL activa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guardar URL activa": {
      "main": [
        [
          {
            "node": "Añadir a Lista URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Añadir a Lista URLs": {
      "main": [
        [
          {
            "node": "Preparar Consulta URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Consulta URL": {
      "main": [
        [
          {
            "node": "Obtener URL Activa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener URL Activa": {
      "main": [
        [
          {
            "node": "Preparar Clave URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Clave URL": {
      "main": [
        [
          {
            "node": "Obtener URL para Analizar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener URL para Analizar": {
      "main": [
        [
          {
            "node": "Preparar Datos para HTTP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Datos para HTTP": {
      "main": [
        [
          {
            "node": "Hora actual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Añadir a Historial": {
      "main": [
        [
          {
            "node": "Respuesta Éxito",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Obtengo ultima propiedad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Codigo propiedad": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtengo ultima propiedad": {
      "main": [
        [
          {
            "node": "¿Hay Datos en Redis?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Hora actual": {
      "main": [
        [
          {
            "node": "Scraping Bee",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Contador": {
      "main": [
        [
          {
            "node": "Preparar Datos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Ya se verifico esta url?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scraping Bee": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtiene las URL en memoria": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Datos para Redis": {
      "main": [
        [
          {
            "node": "Guarda Info de propiedad",
            "type": "main",
            "index": 0
          },
          {
            "node": "Añadir a Historial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convierto todo el json": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "¿Es URL de Propiedad?": {
      "main": [
        [
          {
            "node": "Obtiene las URL en memoria",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Codigo propiedad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ya se verifico esta url?": {
      "main": [
        [
          {
            "node": "Contador",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Codigo propiedad",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lista de url Scrapeadas": {
      "main": [
        [
          {
            "node": "Respuesta Éxito1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Convierto todo el json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respuesta": {
      "main": [
        [
          {
            "node": "Preparar Datos para Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Guarda Info de propiedad": {
      "main": [
        [
          {
            "node": "Lista de url Scrapeadas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update a row": {
      "main": [
        [
          {
            "node": "Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-07-15T01:20:15.719Z",
  "id": "dYtOhM5ldqc0xj78",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AGENTE INMO - VALIDAR PROPIEDAD",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "session_id"
            },
            {
              "name": "consulta_usuario"
            },
            {
              "name": "numero_telefono"
            },
            {
              "name": "url"
            },
            {
              "name": "Id"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2048,
        624
      ],
      "id": "8d65dccf-6df7-4aec-9187-2e66ff940fec",
      "name": "URL datos"
    },
    {
      "parameters": {
        "jsCode": "// Obtener mensaje y sessionId\nconst mensaje = $input.first().json.consulta_usuario;\nconst sessionId = $input.first().json.session_id;\n\n// Expresión regular para encontrar URLs en el texto\nconst urlRegex = /(https?:\\/\\/[^\\s,]+)/g;\nconst matches = mensaje.match(urlRegex);\n\n// Inicializar variables\nlet urlLimpia = '';\nlet esUrlPropiedad = false;\n\n// Si hay URL, extraerla y marcar como URL de propiedad\nif (matches && matches.length > 0) {\n  urlLimpia = matches[0]; // Tomar la primera URL encontrada\n  esUrlPropiedad = true;  // Cualquier URL se considera como propiedad\n}\n\n// Retornar resultado\nreturn {\n  session_id: sessionId,\n  mensaje_usuario: esUrlPropiedad ? urlLimpia : mensaje, // Si es URL, usar la URL, sino el mensaje original\n  es_url_propiedad: esUrlPropiedad\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1424,
        624
      ],
      "name": "Determinar Tipo de Mensaje",
      "id": "377822d4-cfbe-461f-a342-cab87f14bb19"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9d2c3a47-1b3c-5a6e-b47c-c5a6e7d8e9f0",
              "leftValue": "={{ $json.Propiedad }}",
              "rightValue": 1,
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        704,
        624
      ],
      "name": "¿Hay Datos en Redis?",
      "id": "ef3bf8f3-9549-498c-b8ce-b52800a02041"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "i2j3k4l5-m6n7-0g4f-f81h-m6n7o8p9q0r1",
              "name": "response",
              "value": "No tengo información sobre propiedades en tu sesión actual. Por favor, primero envíame el enlace de una propiedad para analizarla.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1072,
        768
      ],
      "id": "c1921b45-2970-4b72-85b3-f6de557bf833",
      "name": "Respuesta No Hay Datos"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "j3k4l5m6-n7o8-1h5g-g92i-n7o8p9q0r1s2",
              "name": "response",
              "value": "={{ $json.Propiedad }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1376,
        608
      ],
      "id": "3ee596fe-f06e-49a8-bfb5-82c0bec3bbb6",
      "name": "Respuesta Final"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c93e135-1306-4f9f-b1b9-8d1a325d9b83",
              "leftValue": "={{ $json.CODIGO }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1728,
        736
      ],
      "id": "8fa3636f-c069-4df3-a908-79688beabf1e",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "incr",
        "key": "=propiedades:{{ $('URL datos').item.json.numero_telefono }}:contador",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        288,
        48
      ],
      "name": "Contador",
      "id": "b805bd15-4c43-4dd8-8548-fb7daabe306b",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtener los datos relevantes\nconst sessionId = $('URL datos').first().json.numero_telefono;\nconst urlMsg =$('Determinar Tipo de Mensaje').first().json.mensaje_usuario ;\nconst contadorKey = 'propiedades:' + sessionId + ':contador';\nconst contador = $input.first().json.getContador;\n\n// Crear y retornar un objeto con toda la información necesaria\nreturn {\n  session_id: sessionId,\n  contador: contador,\n  url_mensaje: urlMsg,\n  contador_key: contadorKey,\n  url_key: 'propiedades:' + sessionId + ':url:' + contador,\n  url_activa_key: 'propiedades:' + sessionId + ':url_activa'\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        736,
        48
      ],
      "name": "Preparar Datos",
      "id": "20c5525a-ad07-430b-81c4-f826cfff7a07"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.url_key }}",
        "value": "={{ $json.url_mensaje }}",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        944,
        48
      ],
      "name": "Guardar URL",
      "id": "ef25913a-437a-4d0d-97fa-032a63a46dc7",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.url_activa_key }}",
        "value": "={{ $json.contador }}",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1152,
        48
      ],
      "name": "Guardar URL activa",
      "id": "cf459564-7a5f-4c08-b5e7-490fc820bed6",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=propiedades:{{ $('URL datos').item.json.numero_telefono }}:url_lista",
        "messageData": "={{$json.contador}}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        1376,
        48
      ],
      "name": "Añadir a Lista URLs",
      "id": "0a7ecb89-8ad4-4d98-8944-76ed62f24838",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtener datos de la sesión\nconst telefono =$('URL datos').first().json.numero_telefono ;\n\n// Este nodo prepara los datos necesarios para obtener la URL activa\nreturn {\n  celular: telefono,\n  url_activa_key: 'propiedades:' + telefono + ':url_activa'\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        144,
        288
      ],
      "name": "Preparar Consulta URL",
      "id": "6ab96395-168b-4ec5-b793-bb1d48a9af70"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "contador_activo",
        "key": "={{ $json.url_activa_key }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        368,
        288
      ],
      "name": "Obtener URL Activa",
      "id": "0a758654-d47c-4111-9453-a924ffa4c8aa",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtener datos de entrada\nconst sessionId = $('Preparar Consulta URL').first().json.celular;\nconst contadorActivo = $('Añadir a Lista URLs').first().json.contador;\n\n// Crear la clave para obtener la URL\nreturn {\n  telefono: sessionId,\n  contador_activo: contadorActivo,\n  url_key: 'propiedades:' + sessionId + ':url:' + contadorActivo\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        288
      ],
      "name": "Preparar Clave URL",
      "id": "6c77a99f-b53f-4de1-b075-6879e65e4efd"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "ID",
        "key": "={{ $json.url_key }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        816,
        288
      ],
      "name": "Obtener URL para Analizar",
      "id": "02c77ba3-29af-46e3-9c68-94c1ce32e60a",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Este nodo hace de puente entre la gestión de URLs y el análisis\nconst sessionId = $('URL datos').first().json.numero_telefono;\nconst urlPropiedad =$input.first().json.ID ; // La URL obtenida del nodo anterior\n\n// Validar que tengamos una URL para procesar\nif (!urlPropiedad || urlPropiedad === null) {\n  console.log('Error: No se pudo obtener una URL válida para analizar');\n  return {\n    error: true,\n    message: 'No se pudo obtener una URL válida para analizar',\n    session_id: sessionId\n  };\n}\n\nreturn {\n  ID: urlPropiedad, // Esta será la URL que se enviará a HTTP Request\n  session_id: sessionId,\n  error: false\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1008,
        288
      ],
      "name": "Preparar Datos para HTTP",
      "id": "cb4a8e58-92a9-40ff-811b-9f82cf1a6525"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=propiedades_historial_analisis:{{ $('URL datos').first().json.numero_telefono }}",
        "messageData": "={{ $('Respuesta').first().json.codigo_propiedad }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2992,
        784
      ],
      "name": "Añadir a Historial",
      "id": "8196ebda-1ede-4df5-aeba-e297b6478cd7",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a76c80f3-979f-42a1-bfca-024022494163",
              "name": "response",
              "value": "=No se pudo encontrar un código de propiedad válido en la URL proporcionada. Por favor, intenta con otra URL de propiedad inmobiliaria.",
              "type": "string"
            },
            {
              "id": "c1v2b3n4-m5a6-s7d8-f9g0",
              "name": "session_id",
              "value": "={{ $json.session_id }}",
              "type": "string"
            },
            {
              "id": "h1j2k3l4-z5x6-c7v8-b9n0",
              "name": "url",
              "value": "={{ $json.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1968,
        768
      ],
      "id": "0261e906-b528-481f-a196-a41680a4008e",
      "name": "Respuesta Código No Encontrado"
    },
    {
      "parameters": {
        "jsCode": "// Get the Propiedad array from the input\nconst propiedadArray = $input.first().json.Propiedad;\n\n// Check if it's an array and has elements\nif (Array.isArray(propiedadArray) && propiedadArray.length > 0) {\n  // Get the last element using array indexing\n  const lastElement = propiedadArray[propiedadArray.length - 1];\n  \n  // Return an object with both the original array and the last element\n  return {\n    Propiedades: propiedadArray,\n    Ultima_propiedad: lastElement\n  };\n} else {\n  // Handle the case where Propiedad is not an array or is empty\n  return {\n    Propiedades: propiedadArray,\n    Ultima_propiedad: \"No array elements found\"\n  };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        224,
        624
      ],
      "id": "8efa8dff-82bc-4e56-a735-8ac51f4dcff2",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Propiedad",
        "key": "=propiedades_historial_analisis:{{ $('URL datos').first().json.numero_telefono }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        48,
        624
      ],
      "name": "Codigo propiedad",
      "id": "a7eed116-a163-4948-b1c2-95fa151dca81",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Propiedad",
        "key": "=codigo:{{ $json.Ultima_propiedad }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        448,
        624
      ],
      "id": "9ff9dc05-4f0f-4c30-8285-21b18fc48c0e",
      "name": "Obtengo ultima propiedad",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "27653da2-316c-4f93-ad99-2a5b3a9a805c",
              "name": "startTime",
              "value": "={{$now}}",
              "type": "string"
            },
            {
              "id": "a631eda1-1e3f-45fa-be8c-91d3f63007d0",
              "name": "",
              "value": "={{ $('Preparar Datos para HTTP').item.json.ID }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1936,
        32
      ],
      "id": "349951bf-b507-4eed-bdf9-0c7d1a9553ce",
      "name": "Hora actual"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "getContador",
        "key": "=propiedades:{{$('URL datos').first().json.numero_telefono}}:contador",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        512,
        48
      ],
      "name": "Obtener Contador",
      "id": "04e4f3dd-01ce-4a68-b71a-be15d76d8c66",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 1. Obtener el mensaje de usuario que contiene la URL\nconst mensaje = $('Determinar Tipo de Mensaje').first().json.mensaje_usuario || \"\";\n\n// 2. Obtener la lista de URLs almacenadas\nconst urlsLista = $input.first().json.urls_lista || [];\n\n// Asegurarse de que urlsLista sea un array\nlet listaFinal = urlsLista;\nif (!Array.isArray(urlsLista)) {\n  if (typeof urlsLista === \"string\") {\n    try {\n      listaFinal = JSON.parse(urlsLista);\n    } catch (e) {\n      listaFinal = [urlsLista];\n    }\n  } else {\n    listaFinal = [];\n  }\n}\n\n// 3. Verificar si el mensaje coincide con alguna URL en la lista (COMPARACIÓN EXACTA)\nlet hayCoincidencia = false;\nlet urlComparacion = null;\n\n// Recorrer toda la lista de URLs y comparar directamente\nfor (const url of listaFinal) {\n  // Comparación directa, sin normalización\n  if (mensaje === url) {\n    hayCoincidencia = true;\n    urlComparacion = url;\n    console.log(\"¡URL duplicada encontrada!\");\n    break;\n  }\n}\n\n// 4. Preparar arrays de URLs nuevas y existentes\nconst nuevasUrls = [];\nconst urlsExistentes = [];\n\nif (hayCoincidencia) {\n  // Si la URL ya existe, agregarla a existentes\n  urlsExistentes.push(mensaje);\n} else if (mensaje) {\n  // Si la URL no existe y no está vacía, agregarla a nuevas\n  nuevasUrls.push(mensaje);\n  // Y también agregarla a la lista de URLs\n  listaFinal.push(mensaje);\n}\n\n// 5. Identificar la URL activa\n// Si hay coincidencia, usar la URL que coincidió\n// Si no, usar el mensaje o la última URL de la lista\nconst urlActiva = urlComparacion || mensaje || \n  (listaFinal.length > 0 ? listaFinal[listaFinal.length - 1] : null);\n\n// 6. Si tenemos más de 20 URLs, mantener solo las 20 más recientes\nif (listaFinal.length > 20) {\n  listaFinal = listaFinal.slice(-20);\n}\n\n// 7. Asegurarse de que la URL activa siga estando en la lista\nif (urlActiva && !listaFinal.includes(urlActiva)) {\n  listaFinal.unshift(urlActiva);\n  if (listaFinal.length > 20) {\n    listaFinal.pop();\n  }\n}\n\n// 8. Preparar el resultado\nreturn {\n  json: {\n    urls_lista: listaFinal,\n    nuevas_urls: nuevasUrls,\n    urls_existentes: urlsExistentes,\n    hay_urls_duplicadas: hayCoincidencia,\n    url_activa: urlActiva,\n    url_comparacion: urlComparacion\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -496,
        352
      ],
      "id": "bfbe8682-bc86-47b8-af4f-bb3874a9837d",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "https://app.scrapingbee.com/api/v1",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $('Preparar Datos para HTTP').item.json.ID }}"
            },
            {
              "name": "stealth_proxy",
              "value": "true"
            },
            {
              "name": "country_code",
              "value": "ar"
            },
            {
              "name": "premium_proxy",
              "value": "true"
            },
            {
              "name": "api_key",
              "value": "LOUWLMAGM9M9UQ4Y08XGH8LV5GF2WZXM8QMS35ZQRJWCJYPEBZFLQ5BNOVYAUMQO1W34JAZ21AJPWVA2"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2240,
        32
      ],
      "id": "b5be1409-fcd9-4e2a-af72-19345329a284",
      "name": "Scraping Bee"
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "urls_lista",
        "key": "=urls:{{ $('URL datos').first().json.numero_telefono }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -704,
        352
      ],
      "id": "c2fa7e3f-fa66-4385-bb09-eaf89a0ff23b",
      "name": "Obtiene las URL en memoria",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Procesar el resultado del análisis\nconst sessionId =$('Respuesta').first().json.ID ;\nconst codigo = $('Respuesta').first().json.codigo_propiedad;\nconst analisisTexto = $('Respuesta').first().json.response ;\nconst url= $('Preparar Datos para HTTP').first().json.ID\n\n// Preparar datos para guardar en Redis\nreturn {\n  url_activa: url,\n  telefono: sessionId,\n  codigo_propiedad: codigo,\n  analisis: analisisTexto,\n  timestamp: Date.now(),\n  redis_key: `propiedades:analisis:${codigo}`\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2704,
        576
      ],
      "id": "90683bae-50eb-46e4-b9ea-29cd2714c749",
      "name": "Preparar Datos para Redis"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cf82780d-b74c-4c33-b8f4-17a18b55b73a",
              "name": "data",
              "value": "={{ $json.datos }}",
              "type": "object"
            },
            {
              "id": "01456660-e4de-470a-8e28-9f880fa6f946",
              "name": "codigo",
              "value": "={{ $json.datos.Cod }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3216,
        32
      ],
      "id": "6909c4a3-3ba0-4ab6-994c-84eba1ca97cf",
      "name": "Convierto todo el json"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8c1b2936-0c24-4a3f-ae68-c4172b4d7b4d",
              "leftValue": "={{ $json.es_url_propiedad }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1136,
        624
      ],
      "name": "¿Es URL de Propiedad?",
      "id": "a3d93a2b-e7cd-4e09-a527-64fa55bb969f"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ffc6cd32-703b-46db-8f3d-0e64c9e66d4d",
              "leftValue": "={{ $json.hay_urls_duplicadas }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -288,
        352
      ],
      "id": "7c9aa160-e335-4442-bb80-335aa2f09610",
      "name": "Ya se verifico esta url?"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=urls:{{ $('URL datos').first().json.numero_telefono }}",
        "value": "={{ $json.url_activa }}",
        "expire": true,
        "ttl": 1800
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3248,
        576
      ],
      "id": "42e84914-b880-4009-a233-4d46a3d6a9c1",
      "name": "Lista de url Scrapeadas",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtener los datos de entrada desde text\nconst datosTexto = $input.first().json.message.content\n\n// Validar que existe el texto\nif (!datosTexto) {\n  return {\n    json: {\n      error: \"No se encontró texto en la entrada\"\n    }\n  };\n}\n\n// Parsear el JSON desde el texto\nlet datos;\ntry {\n  // Si el texto contiene markdown o texto adicional, extraer solo el JSON\n  const jsonMatch = datosTexto.match(/\\{[\\s\\S]*\\}/);\n  const jsonString = jsonMatch ? jsonMatch[0] : datosTexto;\n  \n  datos = JSON.parse(jsonString);\n} catch (error) {\n  return {\n    json: {\n      error: \"No se pudo parsear el JSON\",\n      textoOriginal: datosTexto,\n      errorDetalle: error.message\n    }\n  };\n}\n\n// Extraer el código\nconst codigo = datos[\"Cod:\"];\n\n// Crear un nuevo objeto sin el campo \"Cod:\"\nconst datosRestantes = { ...datos };\ndelete datosRestantes[\"Cod:\"];\n\n// Retornar el resultado separado\nreturn {\n  json: {\n    codigo: codigo,\n    datos: datosRestantes,\n    procesamientoExitoso: true\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2928,
        32
      ],
      "id": "e02c8700-eafc-4bcb-b511-e55fc08757d5",
      "name": "Code3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a76c80f3-979f-42a1-bfca-024022494163",
              "name": "response",
              "value": "={{ $('Convierto todo el json').item.json.data }}",
              "type": "string"
            },
            {
              "id": "r1s2t3u4-v5w6-x7y8-z9a0",
              "name": "codigo_propiedad",
              "value": "={{ $('If').first().json.CODIGO }}",
              "type": "string"
            },
            {
              "id": "ff2d2c27-5e84-4d02-af54-a18c6ab9b0eb",
              "name": "ID",
              "value": "={{ $('URL datos').item.json.numero_telefono }}",
              "type": "string"
            },
            {
              "id": "d2c849fa-9e24-4539-9749-d967926542bc",
              "name": "bot",
              "value": "={{ $json.bot }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2224,
        576
      ],
      "id": "1335e42b-43b0-4df9-a845-d86594f9718c",
      "name": "Respuesta"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=codigo:{{ $json.codigo_propiedad }}",
        "value": "={{ $json.analisis }}",
        "expire": true,
        "ttl": 1800
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2992,
        576
      ],
      "name": "Guarda Info de propiedad",
      "id": "89f10676-fec5-4082-92d6-20de57afe3d5",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "update",
        "projectId": "pavs050wnuapn49",
        "table": "m097w4nkzri1xs1",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "=Telefono",
              "fieldValue": "={{ $('URL datos').first().json.numero_telefono }}"
            },
            {
              "fieldName": "bot",
              "fieldValue": "on"
            },
            {
              "fieldName": "Id",
              "fieldValue": "={{ $('URL datos').first().json.Id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        1968,
        576
      ],
      "id": "adb6ea6d-c757-4fee-9208-3674057d50cd",
      "name": "Update a row",
      "credentials": {
        "nocoDbApiToken": {
          "id": "KRVylWU1iQ1qxa6v",
          "name": "Qeva BD"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a76c80f3-979f-42a1-bfca-024022494163",
              "name": "response",
              "value": "=true",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3248,
        784
      ],
      "id": "ae3c5264-4eb8-44d8-a21d-521098250110",
      "name": "Respuesta Éxito"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1vxULMw6IdEF03hfs2a-svqJUTEuSWbW5wVUQkk88eU4",
          "mode": "list",
          "cachedResultName": "Cliente:00_urls_francisco",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vxULMw6IdEF03hfs2a-svqJUTEuSWbW5wVUQkk88eU4/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "CRM",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vxULMw6IdEF03hfs2a-svqJUTEuSWbW5wVUQkk88eU4/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "CODIGO",
              "lookupValue": "={{ $json?.codigo || $json.data.Cod  }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3552,
        176
      ],
      "id": "2644dae1-8444-4c94-9bc7-8232dbf71e2a",
      "name": "Get row(s) in sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "uyuvATuLJQlzto7q",
          "name": "google sheet"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a76c80f3-979f-42a1-bfca-024022494163",
              "name": "response",
              "value": "=true",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3488,
        576
      ],
      "id": "4ab6087a-2b5e-461e-9f6f-892d8b0736a0",
      "name": "Respuesta Éxito1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Extrae toda la información de la propiedad contenida en el HTML de la página y devuelve **ÚNICAMENTE** un JSON válido con esta estructura exacta:\n\n```json\n{\n  \"Cod\": \"código_de_la_propiedad\",\n  \"detalle_propiedad\": {\n    \"tipo_propiedad\": \"Departamento/Casa/etc\",\n    \"operacion\": \"Venta/Alquiler\",\n    \"precio_valor\": 0,\n    \"precio_moneda\": \"USD/ARS\",\n    \"condicion de pago\" : \"apto credito o que otra forma de pagos tiene si los tien\",\n    \"expensas\": 0\n  },\n  \"ubicacion\": {\n    \"direccion\": \"dirección_completa\",\n    \"barrio\": \"nombre_del_barrio\",\n    \"ciudad\": \"nombre_de_la_ciudad\",\n    \"provincia\": \"nombre_de_la_provincia\"\n  },\n  \"caracteristicas\": {\n    \"superficie_total\": 0,\n    \"superficie_cubierta\": 0,\n    \"ambientes\": 0,\n    \"dormitorios\": 0,\n    \"banos\": 0,\n    \"cocheras\": 0,\n    \"antiguedad\": \"años_o_descripción\",\n    \"estado\": \"Excelente/Bueno/etc\"\n  },\n  \"descripcion\": \"descripción_completa_de_la_propiedad\",\n  \"amenities\": \"lista_de_amenities_separados_por_comas\",\n  \"fotos\": [\"url1\", \"url2\", \"url3\"]\n}\n\n\n## REGLAS IMPORTANTES\nExtracción del campo \"Cod\" (orden de prioridad):\n1.1 Buscar primero un código en la descripción principal de la propiedad.\n1.2 Si no aparece, buscar “Cód. del anunciante”.\n1.3 Si tampoco, buscar “Cód. Zonaprop”.\n1.4 Si aún no aparece, buscar “Número de matrícula”.\n1.5 Si no se encuentra ningún código, usar \"N/A\".\n\nNúmeros deben ir sin comillas.\n\nStrings deben ir con comillas dobles.\n\nSi un dato no existe: usar null para números o \"N/A\" para strings.\n\nfotos debe ser una lista de URLs absolutas; si no hay imágenes, devolver [].\n\nNo incluyas texto adicional ni comentarios: solo el JSON final.\n\nIgnorar cualquier dato que no corresponda a la estructura solicitada.\n\n",
              "role": "system"
            },
            {
              "content": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2544,
        32
      ],
      "id": "1ff52cfa-8750-4159-a8ef-7eb48f947d9a",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "tpho37KNAAX388pI",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## REGLAS IMPORTANTES\nExtracción del campo \"Cod\" (orden de prioridad):\n1.1 Buscar primero un código en la descripción principal de la propiedad.\n1.2 Si no aparece, buscar “Cód. del anunciante”.\n1.3 Si tampoco, buscar “Cód. Zonaprop”.\n1.4 Si aún no aparece, buscar “Número de matrícula”.\n1.5 Si no se encuentra ningún código, usar \"N/A\".\n\nNúmeros deben ir sin comillas.\n\nStrings deben ir con comillas dobles.\n\nSi un dato no existe: usar null para números o \"N/A\" para strings.\n\nfotos debe ser una lista de URLs absolutas; si no hay imágenes, devolver [].\n\nNo incluyas texto adicional ni comentarios: solo el JSON final.\n\nIgnorar cualquier dato que no corresponda a la estructura solicitada.\n\nLa clave \"Cod\" no debe contener los prefijos “Cód. del anunciante”, “Cód. Zonaprop” ni “Número de matrícula”; solo el valor del código.",
        "height": 320,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2160,
        1664
      ],
      "typeVersion": 1,
      "id": "b8553828-8e59-4463-b2d9-2066f75ecbed",
      "name": "Sticky Note1"
    }
  ],
  "pinData": {
    "URL datos": [
      {
        "json": {
          "session_id": "session_1",
          "consulta_usuario": "https://www.zonaprop.com.ar/propiedades/clasificado/veclapin-departamento-en-la-cuesta-55384978.html",
          "numero_telefono": "5492254423359",
          "url": "https://www.zonaprop.com.ar/propiedades/clasificado/veclapin-departamento-en-la-cuesta-55384978.html",
          "Id": 50
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "EBMwLGTBawYqkZM1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-29T04:07:10.291Z",
  "versionId": "0cd38cba-f138-4ae0-a6a8-fc56f689f27d"
}