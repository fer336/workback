{
  "active": true,
  "connections": {
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cancelar evento": {
      "main": [
        [
          {
            "node": "Reagendar List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type": {
      "main": [
        [
          {
            "node": "DistinguirTipoSeleccion1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Encolado de msg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DistinguirTipoSeleccion",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "DetectorFechas",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "chatInput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar Cliente": {
      "main": [
        [
          {
            "node": "Cliente Guardado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encolado de msg": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "chatInput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatInput": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variables globales": {
      "main": [
        [
          {
            "node": "Message Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DistinguirTipoSeleccion": {
      "main": [
        [
          {
            "node": "Cancelar eventoo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DistinguirTipoSeleccion1": {
      "main": [
        [
          {
            "node": "Cancelar evento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Texto": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DetectorFechas": {
      "main": [
        [
          {
            "node": "Obtenemos la fecha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fecha_iso": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "chatInput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lista de fechas": {
      "main": [
        [
          {
            "node": "fecha_iso",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Texto1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Lista de fechas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "From Me2": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Texto4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "V1": {
      "main": [
        [
          {
            "node": "From Me2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Texto3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis7": {
      "main": [
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Redis7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Texto3": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Texto4": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Encolado de msg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "chatInput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Determinar Tipo de Mensaje": {
      "main": [
        [
          {
            "node": "es url?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "es url?": {
      "main": [
        [],
        [
          {
            "node": "is Https?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "is Https?": {
      "main": [
        [
          {
            "node": "Linkeador",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Variables globales",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cancelar eventoo": {
      "main": [
        [
          {
            "node": "Texto7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agenda cuando reprograma": {
      "main": [
        [
          {
            "node": "ya existe?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "registro de visita": {
      "main": [
        [
          {
            "node": "Texto9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ya existe?": {
      "main": [
        [
          {
            "node": "registro de visita",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtenemos la fecha": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Texto5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Agenda cuando reprograma",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Historial de analisis": {
      "main": [
        [
          {
            "node": "Redis9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete contador": {
      "main": [
        []
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        []
      ]
    },
    "Redis3": {
      "main": [
        [
          {
            "node": "Redis14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis9": {
      "main": [
        [
          {
            "node": "Redis11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis11": {
      "main": [
        [
          {
            "node": "Redis3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cliente Guardado": {
      "main": [
        [
          {
            "node": "Determinar Tipo de Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [],
        [
          {
            "node": "Separa datos2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Separa datos2": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Linkeador",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "validate_url": {
      "ai_tool": [
        [
          {
            "node": "Linkeador",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Linkeador": {
      "main": [
        [
          {
            "node": "chatInput",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "V1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [],
        [
          {
            "node": "Validar Cliente",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Linkeador",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "book_visit": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "show_reschedulable_visits": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "show_cancellable_visits": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "check_slots": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "getCliente": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "insert_name_correo": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get_details": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "send_message": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-28T04:25:09.282Z",
  "id": "uG8CKvIOgJbuRcJh",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AGENTE INMO - MASTER",
  "nodes": [
    {
      "parameters": {
        "batchSize": "=1",
        "options": {
          "reset": false
        }
      },
      "id": "4f5bc111-61c1-4c12-88cf-cf0513f1880b",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        4576,
        1216
      ],
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "fieldToSplitOut": "texto, parte, segundos",
        "options": {}
      },
      "id": "64acfa4b-b502-405c-ab43-721d71e93f6f",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        4352,
        1216
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "lifk7Nzr3QwVSIf3",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Cancelar visitar"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Evento": "=cancelar",
            "numero_telefono": "={{ $('Message Type').item.json.msg.telefono }}",
            "eventId": "={{ $('Variables globales').first().json.msg.eventId }}",
            "fecha_cita": "={{ $json.fecha_limpia }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Evento",
              "displayName": "Evento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "numero_telefono",
              "displayName": "numero_telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventId",
              "displayName": "eventId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "fecha_cita",
              "displayName": "fecha_cita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        336,
        528
      ],
      "id": "265cc167-5223-49e3-bb1c-bd2c7b33b59f",
      "name": "Cancelar evento"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b8ec469c-1812-4701-bce3-96a548649d76",
                    "leftValue": "={{ $json.msg.titulo_categoria }}",
                    "rightValue": "🔔 Visitas Agendadas",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "🔔 Visitas Agendadas"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.msg.type }}",
                    "rightValue": "voice",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c203e3f3-cdae-4308-b7ca-2300800248e7"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0cb14635-2673-408e-86db-ce9e0373674b",
                    "leftValue": "={{ $json.msg.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "eb565653-33f7-4f16-a17c-b840b8b94e67",
                    "leftValue": "={{ $json.msg.titulo_categoria }}",
                    "rightValue": "❌ Cancelar Visitas",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "❌ Cancelar Visitas"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "004fd6bb-488c-4f22-b1d2-7ce04855f172",
                    "leftValue": "={{ $json.msg.titulo_categoria }}",
                    "rightValue": "📅 Fechas de Reprogramación",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "📅 Fechas de Reprogramación"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3d2b908a-5bdf-41b5-b195-d4e9298c58e8",
                    "leftValue": "={{ $json.msg.titulo_categoria }}",
                    "rightValue": "=📅 Fechas Disponibles",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "📅 Fechas Disponibles"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7c55af74-e651-4d0e-bf9b-9dc84e42ccf4",
                    "leftValue": "={{ $json.msg.type }}",
                    "rightValue": "=link_preview",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "link_preview"
            }
          ]
        },
        "options": {}
      },
      "id": "7d46cc76-7b9b-494d-bdd4-78b21d4e01fd",
      "name": "Message Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1680,
        1792
      ]
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "BMc2xdmYnikYsHl6",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Consultar_fechas_disponibles"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Evento": "=reagendar",
            "numero_telefono": "={{ $('Variables globales').item.json.msg.telefono }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Evento",
              "displayName": "Evento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "numero_telefono",
              "displayName": "numero_telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        576,
        528
      ],
      "id": "ec8e0b9a-69ea-493b-a183-82b9c194d8b2",
      "name": "Reagendar List"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "2Sx5bbnQ0BLOq2rG",
          "mode": "list",
          "cachedResultName": "SUB TAREA - OBTENER NOMBRE O INSERTAR citas"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "idTabla": "m097w4nkzri1xs1",
            "servidor_db": "https://db.qeva.xyz",
            "token": "3WY4UecQy9Nl522fe_DXDSHeQDVSQJpmDG7mMoFz",
            "numero": "={{ $('V1').first().json.msg.telefono }}",
            "id_mensaje": "={{ $('V1').first().json.msg.idmsg }}",
            "pushname": "={{ $('Webhook').first().json.body.messages[0].from_name }}",
            "nombre_columna": "Telefono"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "servidor_db",
              "displayName": "servidor_db",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "idTabla",
              "displayName": "idTabla",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "token",
              "displayName": "token",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "numero",
              "displayName": "numero",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "nombre_columna",
              "displayName": "nombre_columna",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "pushname",
              "displayName": "pushname",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "servidor_evo",
              "displayName": "servidor_evo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "id_mensaje",
              "displayName": "id_mensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -4320,
        1824
      ],
      "id": "d96a8a33-1e6d-4934-a60d-2edd5af839b0",
      "name": "Validar Cliente"
    },
    {
      "parameters": {
        "content": "## Validacion de cliente en base de datos",
        "height": 380,
        "width": 340,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4448,
        1632
      ],
      "typeVersion": 1,
      "id": "ecd2a589-bd79-4b7f-abb1-e6f10ddd8de2",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "dg5lZhcTnBAZzVc4",
          "mode": "list",
          "cachedResultName": "SUB TAREA - ENLOCAR MSG"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        128,
        768
      ],
      "id": "112812b3-d53e-41a5-82bf-35cde8f441a2",
      "name": "Encolado de msg"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        352,
        768
      ],
      "id": "2ad1d816-cb09-4dc5-a628-e75fceb122ae",
      "name": "Sort"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "text",
              "renameField": true,
              "outputFieldName": "text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        592,
        768
      ],
      "id": "8f93dff8-6567-426d-8edb-b9b2c44609b5",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fae28c9-d30a-4250-9a50-5b68c61164cf",
              "name": "message",
              "value": "={{  $json?.output || $json?.text?.join(\"\\n\") || $json?.msg?.content || $('fecha_iso').first()?.json?.msg?.row_id_fecha }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2176,
        1456
      ],
      "id": "c12e840a-3f50-449f-9636-9e7438957705",
      "name": "chatInput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "79a702ff-5f8c-4814-bddf-5e3acb5a5f2e",
              "name": "msg",
              "value": "={{ JSON.stringify($('V1').first().json.msg)}}",
              "type": "object"
            },
            {
              "id": "9337176e-e568-4efa-8c05-3bdb12ecfb61",
              "name": "id_cliente",
              "value": "={{ $('Validar Cliente').first().json.list[0].Id }}",
              "type": "number"
            },
            {
              "id": "0c48213e-ec73-4b20-b547-c3beffc38bf7",
              "name": "msg.cliente",
              "value": "={{ $('Validar Cliente').item.json.list }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "111c0bc5-3806-4ba7-bee0-6c0a9e684b09",
      "name": "Variables globales",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2112,
        1872
      ],
      "notesInFlow": true
    },
    {
      "parameters": {
        "jsCode": "// Obtener datos de entrada\nconst row_id_fecha = $input.first().json.msg.row_id_fecha;\nconst eventId = $input.first().json.msg.eventId || $json.eventid || \"\";\n\n// Obtener el título del webhook\nconst title = $('Webhook').first().json.body.messages[0].reply.list_reply.title;\n\n// Función para limpiar el ListResponse y extraer solo la fecha ISO\nfunction limpiarListResponse(listResponse) {\n  // Si el formato es ListV3:2025-08-06T08:00\n  // Necesitamos extraer solo 2025-08-06T08:00\n  \n  // Buscar patrones como ListV3:, ListV2:, etc.\n  const regex = /^List[V\\d]+:(.+)$/;\n  const match = listResponse.match(regex);\n  \n  if (match) {\n    // Retornar el grupo capturado (la fecha después del prefijo)\n    return match[1];\n  }\n  \n  // Si no coincide con el patrón, intentar con split simple\n  if (listResponse.includes(':')) {\n    const partes = listResponse.split(':');\n    // Si tiene al menos 3 partes (ListV3, fecha, hora), reconstruir fecha\n    if (partes.length >= 3) {\n      // Unir todas las partes excepto la primera\n      return partes.slice(1).join(':');\n    }\n  }\n  \n  // Si no se encuentra el formato esperado, devolver el valor original\n  return listResponse;\n}\n\n// Limpiar la fecha del row_id_fecha\nconst fechaISO = limpiarListResponse(row_id_fecha);\n\n// Función para convertir nombre de mes a número (opcional, si aún necesitas el título)\nfunction mesANumero(nombreMes) {\n  const meses = {\n    'enero': '01', 'febrero': '02', 'marzo': '03', 'abril': '04',\n    'mayo': '05', 'junio': '06', 'julio': '07', 'agosto': '08',\n    'septiembre': '09', 'octubre': '10', 'noviembre': '11', 'diciembre': '12'\n  };\n  return meses[nombreMes.toLowerCase()] || '01';\n}\n\n// Función para extraer fecha ISO del título (opcional)\nfunction extraerFechaISODelTitulo(title) {\n  const regex = /📅\\s*(\\d+)\\s*de\\s*(\\w+)\\s*:\\s*(\\d{2}):(\\d{2})/i;\n  const match = title.match(regex);\n  \n  if (match) {\n    const dia = match[1].padStart(2, '0');\n    const mes = mesANumero(match[2]);\n    const hora = match[3];\n    const minutos = match[4];\n    const anioActual = new Date().getFullYear();\n    \n    return `${anioActual}-${mes}-${dia}T${hora}:${minutos}`;\n  }\n  \n  return null;\n}\n\n// Extraer la fecha del título (opcional, para comparación)\nconst fechaISODelTitulo = extraerFechaISODelTitulo(title);\n\n// Armar el mensaje\nconst mensaje = `Fecha seleccionada para agendar nuevamente:\\n${fechaISO}\\n\\nID del evento:\\n${eventId}\\n\\nTítulo original:\\n${title}`;\n\n// Devolver resultado\nreturn [{\n  json: {\n    fechaISO,\n    eventId,\n    mensaje,\n    title,\n    fechaISODelTitulo, // Opcional, para referencia\n    row_id_fecha_original: row_id_fecha // Para debugging\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        1648
      ],
      "id": "303ba0ff-3c91-4c60-aebb-267ab1b03244",
      "name": "DistinguirTipoSeleccion"
    },
    {
      "parameters": {
        "content": "## MSG ENVIADO DE GRUPO?",
        "height": 380,
        "width": 340,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4880,
        1632
      ],
      "typeVersion": 1,
      "id": "ff449975-e970-4b22-97d9-0845296399e1",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "## Variables de BD",
        "height": 380,
        "width": 340,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4016,
        1632
      ],
      "typeVersion": 1,
      "id": "d4d15be9-0c14-4604-8255-d804b37cd8eb",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "jsCode": "// Obtener la fecha desde el input\nconst fechaOriginal = $input.first().json.msg.row_id_fecha;\n\n// Función para limpiar la fecha y extraer solo el formato ISO\nfunction limpiarFecha(fechaString) {\n  if (!fechaString || typeof fechaString !== 'string') {\n    return null;\n  }\n  \n  // Buscar el patrón de fecha ISO en el string (YYYY-MM-DDTHH:MM)\n  const match = fechaString.match(/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2})/);\n  \n  if (match) {\n    return match[1]; // Retorna solo la parte de la fecha ISO\n  }\n  \n  return null;\n}\n\n// Limpiar la fecha\nconst fechaLimpia = limpiarFecha(fechaOriginal);\n\n// Crear la variable del evento\nconst evento = \"cancelar\";\n\n// Log para verificar\nconsole.log(\"Fecha original:\", fechaOriginal);\nconsole.log(\"Fecha limpia:\", fechaLimpia);\nconsole.log(\"Evento:\", evento);\n\n// Retornar el resultado\nreturn [{\n  json: {\n    fecha_original: fechaOriginal,\n    fecha_limpia: fechaLimpia,\n    evento: evento\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        112,
        528
      ],
      "id": "322a5013-7d5a-4be5-9972-ef595547301c",
      "name": "DistinguirTipoSeleccion1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://gate.whapi.cloud/messages/text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": "={{ $json.segundos }}"
            },
            {
              "name": "body",
              "value": "={{ $json.texto.replace(/\\n/g,'\\n').replace(/\\\"/g,'\\'') }}"
            },
            {
              "name": "to",
              "value": "={{ $('V1').first().json.msg.telefono }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4928,
        1280
      ],
      "id": "65962dd0-0ce5-4425-86dd-8a674d5a8760",
      "name": "Texto",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ekaTMbiKps3wYx80",
          "name": "Whapi - Agente inmobiliario"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 1) Obtenés los datos principales\nconst datosCliente = $('Validar Cliente').first().json.list[0] || {};\nconst nombre = datosCliente.Nombre || '';\nconst correo = datosCliente.Correo || '';\nconst telefono = datosCliente.Telefono || '';\n\n// 2) Obtenés la fecha original y el ID del evento\nconst row_id_fecha = $input.first().json.msg.row_id_fecha || '';\nconst eventid = $input.first().json.msg.eventId || '';\n\n// 3) Formateás la fecha ISO\nconst partes = row_id_fecha.split(':');\nconst fechaISO = partes.length > 1 \n  ? partes.slice(-2).join(':') \n  : row_id_fecha;\n\n// 4) Armás el mensaje\nconst mensaje = `Fecha seleccionada para agendar nuevamente:\\n${fechaISO}`;\n\n// 5) Devolvés todo en la salida\nreturn [{\n  json: {\n    row_id_fecha_original: row_id_fecha,\n    fechaISO,\n    mensaje,\n    correo,\n    nombre,\n    telefono,\n    eventid,\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        2880
      ],
      "id": "6071b228-7278-4e21-bc08-7903767508d8",
      "name": "DetectorFechas"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c6f2449a-a8b4-423d-ae78-f783977ed460",
              "name": "msg.row_id_fecha",
              "value": "={{ $('V1').first().json.msg.row_id_fecha.match(/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}[-+]\\d{2}:\\d{2})/)?.[1] }}",
              "type": "string"
            },
            {
              "id": "d85e8dab-ff11-460a-9ab4-83ff62869e71",
              "name": "msg.titulo_categoria",
              "value": "={{ $('V1').first().json.msg.titulo_categoria }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        496,
        2368
      ],
      "id": "2886b6a8-d9d2-42b7-8bf8-1bbf3b226b2f",
      "name": "fecha_iso"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=msg:{{ $('Variables globales').item.json.msg.telefono }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        736,
        2368
      ],
      "id": "b0caeaa9-fc91-4265-9f49-8bb9154bf238",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=list:{{ $('V1').first().json.msg.telefono }}",
        "value": "={{ $('V1').first().json.msg.row_id_fecha }}",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        272,
        2368
      ],
      "id": "d530e72b-ba13-41f5-8093-21eb82c8150e",
      "name": "Lista de fechas",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "Lista",
        "key": "=list:{{ $('V1').first().json.msg.telefono }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -528,
        2096
      ],
      "id": "1b8449ad-52f7-464e-8972-66882c58a30e",
      "name": "Redis2",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9428093a-b316-4189-8923-cac5f49ffc70",
              "leftValue": "={{ $('Variables globales').item.json.msg.row_id_fecha }}",
              "rightValue": "={{ $json.Lista }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -272,
        2096
      ],
      "id": "ab65bb2f-01b9-4a77-8cc6-cacca27dbde9",
      "name": "If2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('V1').first().json.datos.server_whapi }}/messages/text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": "={{1}}"
            },
            {
              "name": "body",
              "value": "=Esta fecha ya no se puede elegir"
            },
            {
              "name": "to",
              "value": "={{ $('V1').first().json.msg.telefono }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        80,
        2000
      ],
      "id": "d29f7012-6f15-427b-aefe-11f3309542ce",
      "name": "Texto1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ekaTMbiKps3wYx80",
          "name": "Whapi - Agente inmobiliario"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "94746291-c0f3-44f3-b635-1fe696d7d74e",
              "leftValue": "={{ $json.from.me }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "61bdf543-f143-4d54-acf2-1a17ee9be910",
      "name": "From Me2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5392,
        1456
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=bot:{{ $json.msg.telefono }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3952,
        816
      ],
      "id": "906ae808-70dc-4c16-a8d8-5fa65e0c5035",
      "name": "Redis4",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c646201-9638-4381-ba78-8b2ede680b4d",
              "leftValue": "={{ $('Webhook').item.json.body.messages[0].from }}",
              "rightValue": "5492254606018",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "60e15f5b-bbc9-47ea-a160-5df35f39a4a9",
              "leftValue": "={{ $('Webhook').item.json.body.messages[0].text.body.toLowerCase() === 'off' }}",
              "rightValue": "={{pausar}}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4592,
        672
      ],
      "id": "9b80bf80-200e-4b1a-8576-880ef7219b5d",
      "name": "If4"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9ecf2fc-da2c-4f44-897a-5dc0a2f2f379",
              "name": "msg.telefono",
              "value": "={{ $json.body.messages[0].chat_id.replace(/\\D/g, '') }}",
              "type": "string"
            },
            {
              "id": "dab7ca54-c3d2-4a36-a9ca-a0ebbd375ef5",
              "name": "msg.nombre",
              "value": "={{ $json?.body?.messages[0]?.chat_name || null }}",
              "type": "string"
            },
            {
              "id": "cc7dcfe1-8ad7-4fe8-93ec-8f643c7d08c7",
              "name": "msg.type",
              "value": "={{ $json.body.messages[0].type }}",
              "type": "string"
            },
            {
              "id": "a3d07914-3c39-47d8-a122-9c1f6062c940",
              "name": "msg.ListaResponse",
              "value": "={{ $json.body.messages[0].reply.list_reply.id }}",
              "type": "string"
            },
            {
              "id": "81612acf-1b66-4c8e-82e4-ce8c77b31334",
              "name": "msg.content",
              "value": "={{ $json?.body?.messages[0]?.text?.body || $json?.body?.messages[0]?.voice?.link || $json?.body?.messages[0]?.link_preview?.url ||  $json?.body?.messages[0]?.voice.id || \"\" }}",
              "type": "string"
            },
            {
              "id": "01710423-6391-4a34-81e1-06d4779caf4d",
              "name": "msg.timestamp",
              "value": "={{ $json.body.messages[0].timestamp.toDateTime('s').toLocal().toISO() }}",
              "type": "string"
            },
            {
              "id": "2dfc64f4-b222-4ea7-b095-fdd96d9fcb95",
              "name": "msg.idmsg",
              "value": "={{ $json.body.messages[0].id }}",
              "type": "string"
            },
            {
              "id": "ca81718f-74eb-4960-ac3a-5b59f39f8710",
              "name": "datos.server_db",
              "value": "https://db.qeva.xyz",
              "type": "string"
            },
            {
              "id": "be83160a-e151-4f62-bfde-590af142ae74",
              "name": "db.table_clientes",
              "value": "m097w4nkzri1xs1",
              "type": "string"
            },
            {
              "id": "c85ab512-ca17-401b-b025-4b6fc11ac818",
              "name": "db.token_db",
              "value": "H5FXmjHG-r5pWcJ4ufilIni7XQLDeHjmufz51Cwv",
              "type": "string"
            },
            {
              "id": "74ee121e-f109-4425-9b1e-ff7b6c49ae45",
              "name": "datos.tabla",
              "value": "mwk4ui7lirmxc8h",
              "type": "string"
            },
            {
              "id": "82426625-5ed5-49a9-abb1-d4ed246fddf2",
              "name": "msg.row_id_fecha",
              "value": "={{ $json.body.messages[0].reply.list_reply.id }}",
              "type": "string"
            },
            {
              "id": "6fedaf9c-efe8-46e5-bb61-b42525ddafa1",
              "name": "from.grupo",
              "value": "={{ $json.body.messages[0].chat_id.endsWith('@g.us') }}",
              "type": "boolean"
            },
            {
              "id": "7f846767-8866-43e5-845a-d1feda60451c",
              "name": "datos.token",
              "value": "B2v6DZyi27qmgYXOnvrYLEJ4l8KgN410",
              "type": "string"
            },
            {
              "id": "865ae94f-3e98-4b1b-943c-fafa6c059e45",
              "name": "msg.titulo_categoria",
              "value": "={{ $json?.body?.messages[0]?.context?.quoted_content?.header || \"\"}}",
              "type": "string"
            },
            {
              "id": "f71f1502-02e3-4de1-a62a-232537d8f402",
              "name": "datos.server_whapi",
              "value": "https://gate.whapi.cloud",
              "type": "string"
            },
            {
              "id": "2ccc2ae6-79a4-4998-8ef8-681fbb4876cc",
              "name": "msg.eventId",
              "value": "={{ $json.body.messages[0].context.quoted_id }}",
              "type": "string"
            },
            {
              "id": "95001dea-1bf9-41f7-b41f-4a5bd23719cf",
              "name": "msg.location.latitude",
              "value": "={{ $json.body.messages[0].location.latitude }}",
              "type": "number"
            },
            {
              "id": "1a6f4720-d9db-4093-9d7e-2fa585ad07bc",
              "name": "msg.location.longitude",
              "value": "={{ $json.body.messages[0].location.longitude }}",
              "type": "number"
            },
            {
              "id": "3551b7d9-4ced-4fba-889e-e8a1342fc6c7",
              "name": "msg.off",
              "value": "=🟢 Derivacion con un representante, a partir de ahora hablará con una persona real 🟢",
              "type": "string"
            },
            {
              "id": "9314a63a-e7f7-47f1-89c2-198e36a61785",
              "name": "msg.on",
              "value": "🟠  Derivación con un Agente IA, a partir de ahora hablará con Martín 🟠",
              "type": "string"
            },
            {
              "id": "d5fb77e1-2690-4ddf-993f-1200c06e8e49",
              "name": "from.me",
              "value": "={{ $json.body.messages[0].from_me }}",
              "type": "boolean"
            },
            {
              "id": "0c5ec754-28ec-4aed-a795-4b46dc751b21",
              "name": "msg.url",
              "value": "={{ $json.body.messages[0].link_preview.url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "15acdb80-1761-4ba8-a15b-d67726f54afe",
      "name": "V1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5808,
        1456
      ],
      "notesInFlow": true
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=bot:{{ $json.msg.telefono }}",
        "value": "off",
        "expire": true,
        "ttl": 360
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4368,
        496
      ],
      "id": "2f24141f-8d0c-4f10-a983-1a8a9f6682d4",
      "name": "Redis5",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=bot:{{ $json.msg.telefono }}",
        "value": "on"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4144,
        672
      ],
      "id": "bae86460-c849-4168-8eb6-94e55fd308d3",
      "name": "Redis7",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c39920c3-e5a7-48d6-b1ed-31b94ae55381",
              "leftValue": "={{ $json.msg.content.toLowerCase() }}",
              "rightValue": "on",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4368,
        896
      ],
      "id": "117b7eb5-1573-40a5-a9c0-a72cd6110538",
      "name": "If6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gate.whapi.cloud/messages/text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": "={{1}}"
            },
            {
              "name": "body",
              "value": "=Apartir de ahora la comunicacion sera con *Francisco*"
            },
            {
              "name": "to",
              "value": "={{ $('V1').first().json.msg.telefono }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4144,
        304
      ],
      "id": "59bc1bfc-c3d5-414e-a75d-a1e3a2fd585c",
      "name": "Texto3",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ekaTMbiKps3wYx80",
          "name": "Whapi - Agente inmobiliario"
        }
      }
    },
    {
      "parameters": {
        "content": "## Intervencion Humana\n",
        "height": 864,
        "width": 1520,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4800,
        240
      ],
      "typeVersion": 1,
      "id": "ec30becb-4108-4218-8054-7ae6d4dd6402",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=https://gate.whapi.cloud/messages/{{ $('V1').item.json.msg.idmsg }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "Bearer B2v6DZyi27qmgYXOnvrYLEJ4l8KgN410"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3488,
        816
      ],
      "id": "600f6e2c-7a01-42d8-8d74-ce3ac3e0d97f",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "method": "DELETE",
        "url": "=https://gate.whapi.cloud/messages/{{ $('V1').item.json.msg.idmsg }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3904,
        448
      ],
      "id": "a25924cc-3191-4eb7-88ef-9af5a6d129a1",
      "name": "HTTP Request1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ekaTMbiKps3wYx80",
          "name": "Whapi - Agente inmobiliario"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gate.whapi.cloud/messages/text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            },
            {
              "name": "authorization",
              "value": "Bearer B2v6DZyi27qmgYXOnvrYLEJ4l8KgN410"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": "={{1}}"
            },
            {
              "name": "body",
              "value": "=Apartir de ahora sigues la conversacion con *Martin*."
            },
            {
              "name": "to",
              "value": "={{ $('V1').first().json.msg.telefono }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3728,
        816
      ],
      "id": "7c864930-303a-4513-80ef-4eba1501f08e",
      "name": "Texto4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "685c1637-b88b-4f30-bea8-ba24b6816548",
              "leftValue": "={{\n  [\"si\", \"sí\", \"no\", \"ok\", \"confirmo\",\"Hola\"].includes($json.msg.content.toLowerCase().trim())\n}}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -80,
        1376
      ],
      "id": "479d2f6e-96ee-4dc9-a4aa-74664d8219a3",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "// Obtener mensaje desde posibles fuentes\nconst mensaje =\n  $('Webhook').first().json?.body?.messages?.[0]?.text?.body ||\n  $('Webhook').first().json?.body?.messages?.[0]?.voice?.link ||\n  $('Webhook').first().json?.body?.messages?.[0]?.link_preview?.url ||\n  $('Webhook').first().json?.body?.messages?.[0]?.voice?.id ||\n  $('V1').first().json?.msg?.ListaResponse ||  // <-- toma el ID como string\n  $('V1').first().json?.msg?.content;\n\n// Validar si el mensaje es una cadena de texto\nif (typeof mensaje !== 'string') {\n  throw new Error('El mensaje no es una cadena de texto válida');\n}\n\n// Extraer URL si existe\nconst urlRegex = /(https?:\\/\\/[^\\s,]+)/g;\nconst matches = mensaje.match(urlRegex);\n\nlet urlLimpia = '';\nlet esUrlPropiedad = false;\n\nif (matches && matches.length > 0) {\n  urlLimpia = matches[0];\n  esUrlPropiedad = true;\n}\n\n// Obtener sessionId si existe\nconst sessionId = $('Webhook').first().json?.body?.messages?.[0]?.id || null;\n\n// Retornar como array de objetos para que n8n lo acepte\nreturn [\n  {\n    json: {\n      session_id: sessionId,\n      mensaje_usuario: esUrlPropiedad ? urlLimpia : mensaje,\n      es_url_propiedad: esUrlPropiedad\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3472,
        1824
      ],
      "name": "Determinar Tipo de Mensaje",
      "id": "81a9d44b-1c32-4342-b779-35badc84e42d"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5ddc4988-d75c-4aa8-a12f-1023dfd992cb",
              "leftValue": "={{ $json.bot_etiqueta == 'off'}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "4f503a15-0435-4f28-bb3a-8996bc04e678",
              "leftValue": "={{ $json.es_url_propiedad }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3120,
        1824
      ],
      "id": "15ca0e5f-e5e6-49e1-914f-e181bff9f508",
      "name": "es url?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dbc05b9a-8398-4de9-87ae-8308ffe2e3ab",
              "leftValue": "={{ $json.mensaje_usuario.startsWith('https://') && (!$json.mensaje_usuario.match(/\\.\\w+$/) || $json.mensaje_usuario.endsWith('.html')) }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2688,
        1840
      ],
      "id": "a85e4604-955c-4437-b4a1-918e3823f524",
      "name": "is Https?"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "lifk7Nzr3QwVSIf3",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Cancelar visitar"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Evento": "cancelar",
            "fecha_cita": "={{ $json.fechaISO }}",
            "eventId": "={{ $json.eventId }}",
            "numero_telefono": "={{ $('Variables globales').item.json.msg.telefono }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Evento",
              "displayName": "Evento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "numero_telefono",
              "displayName": "numero_telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "eventId",
              "displayName": "eventId",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "fecha_cita",
              "displayName": "fecha_cita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": true,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        -208,
        1648
      ],
      "id": "36979c2d-4efb-4957-bc54-d3e8a9b91f73",
      "name": "Cancelar eventoo"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "QNseORjK6k8Pt17A",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Agendar_cita"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Evento": "agendar",
            "numero_cliente": "={{ $('DetectorFechas').item.json.telefono }}",
            "Fecha_cita": "={{ $('DetectorFechas').item.json.fechaISO }}",
            "Nombre": "={{ $('DetectorFechas').item.json.nombre }}",
            "Id_cliente_db": "={{ $('Validar Cliente').first().json.list[0].Id.toString() }}",
            "correo_electronico": "={{ $('DetectorFechas').item.json.correo }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "numero_cliente",
              "displayName": "numero_cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "Fecha_cita",
              "displayName": "Fecha_cita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "Nombre",
              "displayName": "Nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "Evento",
              "displayName": "Evento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "correo_electronico",
              "displayName": "correo_electronico",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "nombre_inmobiliaria",
              "displayName": "nombre_inmobiliaria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "idMensaje",
              "displayName": "idMensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "Id_cliente_db",
              "displayName": "Id_cliente_db",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        576,
        2976
      ],
      "id": "3d0ca5ff-0694-47f6-b93f-89a36cedb7ab",
      "name": "Agenda cuando reprograma"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c0ee2204-c289-4cbb-96a4-2702f79dadc4",
              "name": "response",
              "value": "Listo, ya quedo reprogramada la visita.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1008,
        2976
      ],
      "id": "773756ac-7b4d-44b2-9177-51adb200775d",
      "name": "registro de visita"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=lista:{{ $('DetectorFechas').item.json.telefono }}",
        "value": "={{ $('DetectorFechas').item.json.row_id_fecha_original }}",
        "expire": true,
        "ttl": 3600
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        800,
        2976
      ],
      "id": "c7bd3f6c-a839-48f1-a9fc-9021ef0b8ead",
      "name": "ya existe?",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "lista",
        "key": "=lista:{{ $('DetectorFechas').item.json.telefono }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        128,
        2880
      ],
      "id": "e70d37ff-4e55-4ebc-8eae-93b6a1e2ff0c",
      "name": "Obtenemos la fecha",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "09b2b082-f8a5-454b-9691-e4a09be51255",
              "leftValue": "={{ $json.lista }}",
              "rightValue": "={{ $('DetectorFechas').item.json.row_id_fecha_original }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        352,
        2880
      ],
      "id": "16326082-47e6-4183-9de5-940ce2220bf4",
      "name": "If3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('V1').first().json.datos.server_whapi }}/messages/text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": "={{1}}"
            },
            {
              "name": "body",
              "value": "=Ya seleccionaste esta fecha no podes volver a selecionarla."
            },
            {
              "name": "to",
              "value": "={{ $('V1').first().json.msg.telefono }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        576,
        2768
      ],
      "id": "232cda4e-1608-4a6b-a72c-a9b81217520c",
      "name": "Texto5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ekaTMbiKps3wYx80",
          "name": "Whapi - Agente inmobiliario"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=propiedades_historial_analisis:5492254423359"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2864,
        2816
      ],
      "id": "cf46e24f-96e8-482c-b99f-56b861ad11a3",
      "name": "Historial de analisis",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=5492254423359"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2672,
        2352
      ],
      "id": "77211a83-5c71-4cb5-b0b5-9fbc12742cec",
      "name": "Delete contador",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        2480,
        2816
      ],
      "id": "0e0b9c98-e945-4d28-963a-d48da0431780",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "status:5492254423359"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3488,
        2816
      ],
      "id": "8eefebf7-8763-41d1-a3bd-716aa3de4693",
      "name": "Redis3",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=urls:5492254423369"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3024,
        2816
      ],
      "id": "1ee599d5-b481-4061-9bf6-eef23ea3f7f3",
      "name": "Redis9",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "urls:5492254423359"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3264,
        2816
      ],
      "id": "1a3c1279-ccec-43eb-9e39-47d58cfcfde7",
      "name": "Redis11",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Resteo de variables",
        "height": 420,
        "width": 1880,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2448,
        2656
      ],
      "id": "1468e4b3-602d-4d56-990f-11a7005f2d09",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86b172a4-375a-47f2-8d27-f9a9d4106871",
              "name": "cliente.telefono",
              "value": "={{ $json.list[0].Telefono }}",
              "type": "string"
            },
            {
              "id": "b8c611e9-332e-4bdc-bd0e-9af29b1fc86a",
              "name": "cliente.pushname",
              "value": "={{ $json.list[0].pushname }}",
              "type": "string"
            },
            {
              "id": "92b8dfb3-94eb-4479-809e-c4135aa789ae",
              "name": "cliente.correo",
              "value": "={{ $json.list[0].Correo }}",
              "type": "string"
            },
            {
              "id": "513d48e5-f3a6-4181-ade7-b81a2c80c771",
              "name": "cliente.nombre",
              "value": "={{ $json.list[0].Nombre }}",
              "type": "string"
            },
            {
              "id": "b57bad55-09db-479e-b4d5-55847d6ba1df",
              "name": "cliente.tipo",
              "value": "",
              "type": "string"
            },
            {
              "id": "885aec58-4de1-46a9-a387-545b9b39c389",
              "name": "cliente.inmobiliaria",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3872,
        1824
      ],
      "id": "13fc558e-9d43-434c-b103-5e4d6172210f",
      "name": "Cliente Guardado"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "agente:5492254423359"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4192,
        2832
      ],
      "id": "2fe1d2db-7d2f-458c-bdcb-208233f072ff",
      "name": "Redis12",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "cont:5492254423359"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3696,
        2816
      ],
      "id": "0cede226-a969-4c2f-91e2-420680bf9f5f",
      "name": "Redis14",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a1008ad7-af6d-46c1-8775-82cd2eecc2b6",
              "leftValue": "={{ $json.output }}",
              "rightValue": "LISTA_ENVIADA",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3776,
        1200
      ],
      "id": "817d1b8b-8d74-4861-af81-bbd5e618c2b2",
      "name": "If8"
    },
    {
      "parameters": {
        "jsCode": "// 🧠 Script para particionar un mensaje largo en partes más humanas y fluidas\n// Divide por doble salto de línea o por signos de puntuación fuertes (., ?, !)\n// Luego organiza en partes de no más de 180 caracteres si es posible\n// Remueve signos de apertura de cualquier palabra o texto\n// Finalmente asigna un tiempo (3–9 s) proporcional a la longitud de cada parte\n\nconst entrada = $input.first().json.output;\n\n// Quita signos de apertura que puedan romper las divisiones\nfunction limpiarSignosApertura(texto) {\n  if (!texto || typeof texto !== 'string') return '';\n  return texto.replace(/[¿¡«\"'`„‚‹]/g, '');\n}\n\n// Parte el texto en bloques de hasta 180 carácteres y refina por preguntas largas\nfunction particionarTexto(texto) {\n  if (!texto || typeof texto !== 'string') return [];\n  const textoLimpio = limpiarSignosApertura(texto);\n  const bloques = textoLimpio.split(/(?:\\n{2,}|(?<=[.!?])\\s+)/g);\n  const partes = [];\n  let buffer = '';\n\n  for (const bloque of bloques) {\n    if (!bloque.trim()) continue;\n    const candidata = buffer ? `${buffer} ${bloque}` : bloque;\n    if (candidata.length > 180) {\n      if (buffer) partes.push(buffer.trim());\n      buffer = bloque;\n    } else {\n      buffer = candidata;\n    }\n  }\n  if (buffer) partes.push(buffer.trim());\n\n  // Si hay preguntas muy largas (>60 c) las dividimos justo después del '?'\n  const refinadas = [];\n  for (const parte of partes) {\n    if (parte.includes('?') && parte.length > 60) {\n      refinadas.push(...parte.split(/(?<=\\?)\\s*/).map(p => p.trim()).filter(Boolean));\n    } else {\n      refinadas.push(parte);\n    }\n  }\n\n  return refinadas.filter(p => p && p.trim().length > 0);\n}\n\ntry {\n  const partes = particionarTexto(entrada);\n\n  // Obtengo longitudes para el cálculo lineal de tiempos\n  const longitudes = partes.map(p => p.length);\n  const minL = Math.min(...longitudes);\n  const maxL = Math.max(...longitudes);\n\n  // Mapeo cada parte a su objeto JSON, incluyendo 'segundos' entre 3 y 9\n  return partes.map((texto, i) => {\n    const longitud = texto.length;\n    let segundos;\n    if (maxL === minL) {\n      segundos = 3; // caso uniforme\n    } else {\n      segundos = 3 + (longitud - minL) / (maxL - minL) * 6;\n    }\n    return {\n      json: {\n        parte: i + 1,\n        texto,\n        longitud,\n        segundos: Number(segundos.toFixed(1))\n      }\n    };\n  });\n\n} catch (error) {\n  console.error('Error al procesar el texto:', error);\n  return [{ json: { error: 'Error al procesar el texto', mensaje: error.message } }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4128,
        1216
      ],
      "id": "510220e6-631b-47e4-a708-55136cc864e8",
      "name": "Separa datos2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('V1').first().json.datos.server_whapi }}/messages/text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": "={{1}}"
            },
            {
              "name": "body",
              "value": "={{ $json.response }}"
            },
            {
              "name": "to",
              "value": "={{ $('V1').first().json.msg.telefono }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        1648
      ],
      "id": "c6480379-c193-40bf-b220-601cd97c5582",
      "name": "Texto7",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ekaTMbiKps3wYx80",
          "name": "Whapi - Agente inmobiliario"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('V1').first().json.datos.server_whapi }}/messages/text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_time",
              "value": "={{1}}"
            },
            {
              "name": "body",
              "value": "={{ $json.response }}"
            },
            {
              "name": "to",
              "value": "={{ $('V1').first().json.msg.telefono }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1248,
        2976
      ],
      "id": "3e229389-a800-4a8c-92a3-adb869d0fe9f",
      "name": "Texto9",
      "credentials": {
        "httpHeaderAuth": {
          "id": "ekaTMbiKps3wYx80",
          "name": "Whapi - Agente inmobiliario"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        176,
        48
      ],
      "id": "63fced8a-0c5c-4366-9485-ebe5c85b0fb4",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "ADdm45cFSIFSG59w",
          "name": "Gemini"
        }
      }
    },
    {
      "parameters": {
        "name": "validate_url",
        "description": "=debes llamar siempre a esta tool",
        "workflowId": {
          "__rl": true,
          "value": "dYtOhM5ldqc0xj78",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "numero_telefono": "={{ $('Validar Cliente').first().json.list[0].Telefono }}",
            "session_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('session_id', ``, 'string') }}",
            "consulta_usuario": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('consulta_usuario', ``, 'string') }}",
            "Id": "={{ $('Validar Cliente').item.json.list[0].Id }}",
            "url": "={{ $fromAI('url', `debes obtener la url de la propiedad`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "consulta_usuario",
              "displayName": "consulta_usuario",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "numero_telefono",
              "displayName": "numero_telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        384,
        80
      ],
      "id": "201e979b-404f-4c6e-b775-7546308ab205",
      "name": "validate_url"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensaje_usuario }}",
        "options": {
          "systemMessage": "=## 🎯 ROL\nSos un **validador de URL** de propiedades.  \nTu única función es **ejecutar la herramienta `validate_url` SIEMPRE**, y responder según el resultado.  \nDebés **rastrear el estado de la conversación** para determinar si es la primera validación o una continuación.\n\n---\n\n## ⚙️ INSTRUCCIONES OBLIGATORIAS\n\n### 1. EJECUCIÓN FORZADA DE HERRAMIENTA\n\n**🚨 ORDEN ABSOLUTA Y PRIORITARIA:**\n\n- **Ejecutá `validate_url` SIEMPRE.**\n- **NO hay excepciones.**\n- **NO analizar el mensaje.**\n- **NO interpretar su contenido.**\n- **NO esperar confirmación.**\n- **NO hacer suposiciones.**\n- Ante **cualquier input**, ejecutar de forma inmediata la herramienta `validate_url`.\n\n**⚠️ Si no se ejecuta la herramienta, el agente está incumpliendo su función principal.**\n\n---\n\n### 2. ANÁLISIS DE ESTADO (después de `validate_url`)\n- Consultá el historial de la conversación.\n- Si ya se validó una propiedad antes, es una **continuación**.\n- Si no hay registros previos de validaciones, es la **primera vez**.\n\n---\n\n### 3. RESPONDER ÚNICAMENTE CON UNO DE ESTOS CÓDIGOS\n\n**Si `validate_url` confirma que la propiedad es válida Y es la PRIMERA en la conversación:**\nPROPIEDAD_VALIDADA_PRIMERA\n\n\n**Si `validate_url` confirma que la propiedad es válida Y ya hubo otras antes:**\nPROPIEDAD_VALIDADA_CONTINUA\n\ng\n**Si `validate_url` determina que la URL NO es válida:**\nPROPIEDAD_INCORRECTA\n\nyaml\nCopiar\nEditar\n\n**Si `validate_url` falla o no puede ejecutarse:**\n- No responder absolutamente **nada**.\n\n---\n\n### 4. DETECCIÓN DE ESTADO\n\n- Si el historial contiene:  \n  `PROPIEDAD_VALIDADA_PRIMERA` o `PROPIEDAD_VALIDADA_CONTINUA` → es **continuación**\n- Si el historial **NO** contiene esos códigos → es **primera vez**\n\n---\n\n## 🚫 ESTRICTAMENTE PROHIBIDO\n\n- ❌ Nunca responder sin ejecutar `validate_url` primero\n- ❌ Nunca decidir si se debe ejecutar o no: se ejecuta **siempre**\n- ❌ Nunca agregar texto, aclaraciones ni explicaciones\n- ❌ Nunca incluir comillas en los códigos\n- ❌ Nunca usar saludos, frases sueltas o continuar la conversación\n- ✅ Siempre responder únicamente con uno de los tres códigos exactos, o nada si no se ejecutó\n\n---\n\n## 🧠 RESUMEN CRÍTICO\n\n1. **SIEMPRE** ejecutar `validate_url`  \n2. Revisar historial para saber si es primera validación o continuación  \n3. Responder solo con:  \n   - `PROPIEDAD_VALIDADA_PRIMERA`  \n   - `PROPIEDAD_VALIDADA_CONTINUA`  \n   - `PROPIEDAD_INCORRECTA`  \n   - o **nada** si falla la herramienta  \n4. **NO hacer nada más**"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        176,
        272
      ],
      "id": "69589754-7a58-4f27-8311-e5337c651d74",
      "name": "Linkeador"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "inmobiliaria",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -6128,
        1456
      ],
      "id": "09ee26ea-422d-461d-9485-09837599a7b1",
      "name": "Webhook",
      "webhookId": "38f97ad9-f72d-4b1c-a47b-080b12f6c1cf"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "dc815a15-0c8a-4c97-9a6a-6e0b38567e35",
              "leftValue": "={{ $json.from.grupo }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4768,
        1808
      ],
      "id": "6c474fe2-eb3a-4354-b8c1-64ef3c18cc51",
      "name": "If9"
    },
    {
      "parameters": {
        "content": "## from me",
        "height": 272,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5488,
        1360
      ],
      "typeVersion": 1,
      "id": "6d127a0c-0b64-4443-b899-c4080aceabe9",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## Que tipo de msg es?",
        "height": 380,
        "width": 340,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3600,
        1632
      ],
      "typeVersion": 1,
      "id": "92b09ca3-b930-4a4a-a526-a434d665add6",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json?.message.trim() || JSON.stringify($json?.msg.row_id_fecha) || $json?.mensaje?.trim() }}",
        "options": {
          "systemMessage": "=# Prompt Martín (versión concisa – **ACTUALIZADO 29 Jul 2025**)\n\n## 1. Identidad y estilo\n\n* **Martín**, asesor inmobiliario digital (20 + años, Buenos Aires).\n* Tono profesional, cordial y respetuoso; usa «vos».  Evita «che», «mirá».  Frases frecuentes: «¿Cómo estás?», «Perfecto», «Excelente».  Sumá toques de empatía y entusiasmo moderado («Buenísimo», «Me alegra ayudarte», «bárbaro»).\n\n## 2. Reglas globales\n\n1. Ejecutá siempre la **herramienta adecuada**; no reutilices datos previos.\n2. Antes de mencionar datos del cliente → **getCliente**.\n3. Preguntá y confirmá cualquier dato faltante.\n4. Nunca nombres “herramientas” ni detalles técnicos al usuario.\n5. Temas prohibidos: salud, política, clima, chistes, recomendaciones de productos, drogas, religión → «Disculpame, pero sobre ese tema puntualmente no te puedo hablar.»\n\n## 3. Flujos abreviados\n\n### 3.1 Propiedad validada\n\n#### A) `PROPIEDAD_VALIDADA_PRIMERA` (Primera propiedad en la conversación)\n\n*Elegir ********aleatoriamente******** una de estas respuestas con saludo completo:*\n\n1. «¡Hola! ¿Cómo estás? Soy Martín, asesor de Francisco en RealStateIQ. Contame un poquito, ¿en qué puedo ayudarte con la publicación que compartiste?»\n2. «¡Hola! ¿Cómo estás? Soy Martín, asesor inmobiliario de Francisco en RealStateIQ. Estuve viendo la propiedad que me enviaste y pinta interesante. ¿Qué te gustaría saber sobre ella?»\n3. «¡Hola! ¿Qué tal? Soy Martín, del equipo de Francisco en RealStateIQ. Vi el enlace de la propiedad que compartiste. Contame, ¿en qué puedo ayudarte?»\n4. «¡Hola! ¿Cómo estás? Soy Martín, de RealStateIQ, asistente de Francisco. Buenísimo, ya tengo la información de la propiedad que me pasaste. ¿Qué querés saber?»\n\n#### B) `PROPIEDAD_VALIDADA_CONTINUA` (Segunda o siguientes propiedades)\n\n*Elegir ********aleatoriamente******** una de estas respuestas ********sin saludo********:*\n\n1. «Contame, ¿qué querés saber de la publicación?»\n2. «Listo, ya tengo los datos de la publicación. ¿Qué info necesitás?»\n3. «¡Bárbaro! Ahí revisé la propiedad que compartiste. ¿Qué consulta tenés?»\n\n#### Intención de visita\n\nSi el usuario expresa que quiere ver la propiedad, preguntá: «¿Querés que te pase los días y horarios disponibles?» y, tras su confirmación, seguí el flujo **Ver disponibilidad** (sección 3.3).\n\n#### Propiedad incorrecta\n\n«Sabés que esta propiedad no nos pertenece, disculpame.»\n\n### 3.2 Consultas de características\n\n* Para cualquier detalle → **get_details**.\n* Para fotos → indicar que están en la publicación.\n\n### 3.3 Agenda de visitas (sub‑agente «Citas»)\n\n⚙️ **Herramientas permitidas y cuándo usarlas**\n\n* **Ver disponibilidad:** `check_slots` → muestra los días y horarios posibles.\n* **Agendar visita:** `book_visit` → reserva una nueva visita.\n* **Cancelar visita:** `show_cancellable_visits` → permite ver o cancelar visitas existentes.\n* **Reprogramar visita:** `show_reschedulable_visits` → permite ver o cambiar visitas agendadas.\n\n> **IMPORTANTE:** El *único* contenido del mensaje que Martín envía justo después de ejecutar cualquiera de estas herramientas debe ser **LISTA_ENVIADA** (sin comillas), tal como se detalla en la sección 5.\n\n#### Agendar visita – detección y ver disponibilidad\n\n*Detección:* el usuario expresa que quiere visitar la propiedad (p. ej. «quiero agendar», «quiero visitar», «puedo ir a verla»).\n\n**Protocolo obligatorio:**\n\n1. **NUNCA** ejecutar `check_slots` inmediatamente.\n2. Preguntar **OBLIGATORIAMENTE** (elegir al azar):\n\n   * «¿Querés que te pase los días y horarios en que está disponible la propiedad?»\n   * «¿Te muestro cuándo podés ir a verla?»\n   * «¿Te paso los días libres para coordinar la visita?»\n   * «¿Te comparto los días y horarios para que elijas?»\n   * «¿Te gustaría ver qué días hay disponibles?»\n3. **Esperar respuesta del usuario.**\n\n   * **Afirmativa clara** → paso 4\n   * **Negativa o ambigua** → NO ejecutar herramienta; seguir conversación\n4. **SOLO después de la confirmación afirmativa** → ejecutar `check_slots` con los parámetros necesarios (por ejemplo `propiedad_id`).  *No hace falta validar ni solicitar correo para esta acción*.\n5. Responder **únicamente**:\n\n```\nLISTA_ENVIADA\n```\n\n*(sin comillas ni texto adicional)*\n\n##### Confirmar y reservar (tras LISTA_ENVIADA)\n\n1. El usuario selecciona fecha y hora.\n\n2. Ejecutá **getCliente** para obtener los datos actuales (Nombre, Correo, Tipo, Inmobiliaria, Teléfono).\n\n3. **Recolectar o confirmar los datos UNO POR UNO** siguiendo este orden:\n\n   * **Nombre**\n\n     * Si falta → «No me pasarías tu nombre?»\n     * Si existe → «Tengo registrado que te llamás {Nombre}. ¿Es correcto?»\n\n   * **Correo**\n\n     * Si falta → «¿Cuál es tu correo electrónico?»\n     * Si existe → «Tengo registrado el correo {Correo}. ¿Lo confirmás?»\n\n   * **Tipo de cliente** (preguntar siempre)\n\n     * «¿Sos particular o agente inmobiliario?»\n\n   * **Inmobiliaria** (solo si responde \"agente inmobiliario\")\n\n     * Si falta → «¿De qué inmobiliaria sos?»\n     * Si existe → «Tengo registrada la inmobiliaria {Inmobiliaria}. ¿Es correcto?»\n\n   Guarda cada dato con `insert_name_correo` antes de pasar al siguiente campo.\n\n4. **Una vez confirmados todos los datos**, mostrar el **resumen completo** (formato Markdown simple, sin negritas dentro de la lista):\n\n###### Ejemplo de resumen – Particular\n\n```\n• Nombre: {Nombre}\n• Correo: {Correo}\n• Tipo: Particular\n• Fecha: {fecha} a las {hora} hs\n• Teléfono: {Teléfono}\n\n¿Está todo correcto para confirmar la visita?\n```\n\n###### Ejemplo de resumen – Agente inmobiliario\n\n```\n• Nombre: {Nombre}\n• Correo: {Correo}\n• Tipo: Agente Inmobiliario\n• Inmobiliaria: {NombreInmobiliaria}\n• Fecha: {fecha} a las {hora} hs\n• Teléfono: {Teléfono}\n\n¿Está todo correcto para confirmar la visita?\n```\n\n5. **Esperar confirmación explícita.**\n6. **SOLO tras la confirmación** → ejecutar `book_visit` con `propiedad_id`, `fecha`, `hora` y todos los datos del cliente.\n7. La herramienta responde **Barbaro, ahi quedo agendada tu visita, te estaremos enviando un correo de con la información acordada** si tuvo éxito o cadena vacía si falló.\n\n#### Reprogramar\n\n*Detección:* usuario dice «reprogramar», «cambiar fecha», «mover turno».\n\n1. Preguntá: «¿Querés reprogramar tu visita?»\n2. Esperar respuesta:\n\n   * **Afirmativa clara** → ejecutar inmediatamente `show_reschedulable_visits`.\n   * **Negativa o ambigua** → NO ejecutar herramienta; seguir conversación.\n3. Tras ejecutar la herramienta, responder **únicamente**:\n\n```\nLISTA_ENVIADA\n```\n\n*(sin texto adicional)*\n\n#### Cancelar\n\n*Detección:* usuario dice «cancelar», «anular visita», «dar de baja».\n\n1. Preguntá: «¿Querés cancelar tu visita?»\n2. Esperar respuesta:\n\n   * **Afirmativa clara** → ejecutar inmediatamente `show_cancellable_visits`.\n   * **Negativa o ambigua** → NO ejecutar herramienta; seguir conversación.\n3. Tras ejecutar la herramienta, responder **únicamente**:\n\n```\nLISTA_ENVIADA\n```\n\n*(sin texto adicional)*\n\n### 3.4 Derivar a Francisco\n\n1. Preguntar intención.\n2. Reunir: nombre, teléfono, correo, motivo específico, urgencia.\n3. Mostrar resumen y pedir confirmación.\n4. Tras confirmación → **send_message**.\n\n**🔄 Ejemplos de reiteración (si falta información):**\n\n* *Falta nombre*: «Para que Francisco se comunique con vos, necesito tu nombre completo. ¿Cómo te llamás?»\n* *Falta correo*: «También necesito tu correo electrónico para el contacto. ¿Podrás pasármelo?»\n* *Motivo vago*: «¿Podrías contarme más específicamente qué necesitás que Francisco te explique?» o «¿Qué pregunta puntual tenés para Francisco?»\n* *Falta urgencia*: «¿Necesitás que Francisco se comunique hoy, mañana, o no hay apuro?»\n\n## 4. Gestión de correos\n\n* Nunca asumir.  Si vacío → «¿Cuál es tu correo electrónico?»  Si existe → «¿Confirmás que tu correo es …?».  Guardar/actualizar con **insert_name_correo**.\n\n## 5. Formato y códigos\n\n* Usar solo el primer nombre del usuario.\n* Respuestas breves en Markdown.\n* **LISTA_ENVIADA**: palabra única (sin comillas) que envía el sub‑agente después de **check_slots**, **show_reschedulable_visits** o **show_cancellable_visits**.\n\n### Códigos de entrada (del agente validador)\n\n* **PROPIEDAD_VALIDADA_PRIMERA** → primera propiedad validada en la conversación (usar saludo completo).\n* **PROPIEDAD_VALIDADA_CONTINUA** → propiedad adicional validada (responder sin saludo).\n* **PROPIEDAD_INCORRECTA** → la propiedad no pertenece al portfolio (mensaje de disculpa estándar).\n\n## 🚫 Restricciones\n\n**Temas prohibidos:** salud, política, clima, chistes, recomendaciones de productos, drogas, religión\n\n**Respuesta estándar:** «Disculpame, pero sobre ese tema puntualmente no te puedo hablar.»\n\n## 6. Variables del sistema\n\n```javascript\n{Nombre}       = {{ $('Cliente Guardado').first().json.cliente.nombre }}\n{Correo}       = {{ $('Cliente Guardado').first().json.cliente.correo }}\n{Teléfono}     = {{ $('Cliente Guardado').first().json.cliente.telefono }}\n{Tipo}         = {{ $('Cliente Guardado').first().json.cliente.tipo || null }}\n{Inmobiliaria} = {{ $('Cliente Guardado').first().json.cliente.inmobiliaria || null }}\n```\n\n---\n\n## 🛠️ REFUERZOS CRÍTICOS DE FLUJO Y FORMATO\n\n### ❌ NO repetir saludos innecesarios\n\n* Si ya se realizó la presentación inicial (tras `PROPIEDAD_VALIDADA_PRIMERA`), **NO debe volver a saludar** ni presentarse otra vez.\n* Al recibir una segunda propiedad o continuar una conversación, usar directamente una de las variantes de `PROPIEDAD_VALIDADA_CONTINUA` sin «Hola» ni presentación.\n\n**Ejemplo incorrecto:**\n\n```\nUsuario: ¿Cuántos baños tiene?\nMartín: ¡Hola! ¿Cómo estás? Soy Martín...\n```\n\n**Ejemplo correcto:**\n\n```\nUsuario: ¿Cuántos baños tiene?\nMartín: Esta propiedad tiene 2 baños, queres saber algo más?\n```\n\n### ✅ RESPUESTA EXACTA tras ejecutar herramientas de disponibilidad, cancelación o reprogramación\n\n* Al ejecutar **check_slots**, **show_cancellable_visits** o **show_reschedulable_visits**, la respuesta del agente debe ser **únicamente**:\n\n```\nLISTA_ENVIADA\n```\n\n*Sin comillas, sin texto adicional, sin explicaciones.*\n\n### ✅ Confirmación previa obligatoria\n\n* Antes de ejecutar cualquiera de las herramientas anteriores, **Martín debe esperar una respuesta afirmativa clara** del usuario.\n* Recién entonces ejecuta la herramienta correspondiente.\n\n### ⚠️ IMPORTANTE\n\n* Todos los flujos deben pasar por el sub‑agente (AI Agent → Citas → Herramienta) al confirmar acción.\n* Los parámetros deben ser completos y enviados correctamente.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2896,
        1472
      ],
      "id": "d4d509da-b77e-4aa6-a040-42607d74e980",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "google/gemini-2.5-flash",
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        2528,
        1904
      ],
      "id": "7f4c9d48-d099-4bff-8d2d-eec8586573d7",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "ADdm45cFSIFSG59w",
          "name": "Gemini"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Cliente Guardado').first().json.cliente.telefono }}",
        "sessionTTL": 1800,
        "contextWindowLength": 7
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        2192,
        1856
      ],
      "id": "54b0e3ac-de1f-4c08-8da4-e30d86bbf1cc",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "f1mfRViKXHypdB9h",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "name": "book_visit",
        "description": "you will call this tool when you need to schedule an appointment or visiting meeting\n\n {\n      \"fecha_cita\": \"fecha_iso_seleccionada\", // Asegurar formato ISO\n      \"Nombre\": \"nombre_confirmado\",\n      \"correo_electronico\": \"correo_confirmado\",\n      \"tipo_cliente\": \"tipo_confirmado\",\n      \"nombre_inmobiliaria\": \"{TipoCliente === 'Agente' ? nombre_inmobiliaria_confirmado : ''}\"\n    }",
        "workflowId": {
          "__rl": true,
          "value": "QNseORjK6k8Pt17A",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Agendar_cita"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "nombre_inmobiliaria": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nombre_inmobiliaria', ``, 'string') }}",
            "correo_electronico": "={{ $fromAI('correo_electronico', `correo_electronico`, 'string') }}",
            "Nombre": "={{ $fromAI('Nombre', `Nombre`, 'string') }}",
            "numero_cliente": "={{ $('Cliente Guardado').first().json.cliente.telefono }}",
            "Fecha_cita": "={{ $fromAI('Fecha_cita', `Formato iso`, 'string') }}",
            "idMensaje": "={{ $('Variables globales').first().json.msg.idmsg }}",
            "Id_cliente_db": "={{ $('Variables globales').first().json.id_cliente }}",
            "Evento": "=agendar",
            "url_propiedad": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url_propiedad', `debes pasarle la url de la propiedad`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "numero_cliente",
              "displayName": "numero_cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "Fecha_cita",
              "displayName": "Fecha_cita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "Nombre",
              "displayName": "Nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "Evento",
              "displayName": "Evento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "correo_electronico",
              "displayName": "correo_electronico",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "nombre_inmobiliaria",
              "displayName": "nombre_inmobiliaria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "idMensaje",
              "displayName": "idMensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "Id_cliente_db",
              "displayName": "Id_cliente_db",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "url_propiedad",
              "displayName": "url_propiedad",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        2752,
        2176
      ],
      "id": "41028f43-0c11-4b7b-beed-2f483243e526",
      "name": "book_visit",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "description": "Call this tool whenever the user wants to reschedule a visit",
        "workflowId": {
          "__rl": true,
          "value": "zm3WavIVP7tdrihv",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Reagendar-Cancelar"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "numero_cliente": "={{ $('Cliente Guardado').first().json.cliente.telefono }}",
            "Evento": "reagendar"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "numero_cliente",
              "displayName": "numero_cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "fecha_cita",
              "displayName": "fecha_cita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Nombre",
              "displayName": "Nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Evento",
              "displayName": "Evento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "correo_electronico",
              "displayName": "correo_electronico",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        3664,
        1728
      ],
      "id": "3d2bb37c-3737-4a7e-88d3-a15864e9556b",
      "name": "show_reschedulable_visits"
    },
    {
      "parameters": {
        "description": "llama a esta herramienta cuando un usuario quiera cancelar una visita",
        "workflowId": {
          "__rl": true,
          "value": "zm3WavIVP7tdrihv",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Reagendar-Cancelar"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "numero_cliente": "={{ $('Cliente Guardado').first().json.cliente.telefono }}",
            "fecha_cita": "={{ $fromAI('fecha_cita', ``, 'string') }}",
            "Nombre": "={{ $fromAI('Nombre', ``, 'string') }}",
            "Evento": "cancelar",
            "correo_electronico": "={{ $fromAI('correo_electronico', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "numero_cliente",
              "displayName": "numero_cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "fecha_cita",
              "displayName": "fecha_cita",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "Nombre",
              "displayName": "Nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "Evento",
              "displayName": "Evento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "correo_electronico",
              "displayName": "correo_electronico",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        3840,
        1728
      ],
      "id": "5e0ea47c-4ae5-4ccc-8a64-63587e16d55e",
      "name": "show_cancellable_visits"
    },
    {
      "parameters": {
        "description": "=Llama a esta herramienta para mostrar la disponibilidad horaria",
        "workflowId": {
          "__rl": true,
          "value": "BMc2xdmYnikYsHl6",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Consultar_fechas_disponibles"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "numero_telefono": "={{ $('Cliente Guardado').first().json.cliente.telefono }}",
            "Evento": "consultar"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Evento",
              "displayName": "Evento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "numero_telefono",
              "displayName": "numero_telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        4032,
        1744
      ],
      "id": "cd66d4b7-270e-4797-b264-328247a35ecc",
      "name": "check_slots"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "debes llamar siempre a esta tool para saber la informacion de un cliente, nombre, correo o telefono",
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "pavs050wnuapn49",
        "table": "m097w4nkzri1xs1",
        "returnAll": true,
        "options": {
          "where": "=(Telefono,eq,{{ $('V1').first().json.msg.telefono }})"
        }
      },
      "type": "n8n-nodes-base.nocoDbTool",
      "typeVersion": 3,
      "position": [
        3008,
        2144
      ],
      "id": "0b270fb5-bb2a-49a8-9904-4a19a5123625",
      "name": "getCliente",
      "credentials": {
        "nocoDbApiToken": {
          "id": "KRVylWU1iQ1qxa6v",
          "name": "Qeva BD"
        }
      }
    },
    {
      "parameters": {
        "description": "Llama a esta herramienta cuando necesites actualizar los datos del cliente",
        "workflowId": {
          "__rl": true,
          "value": "zz93xPqPfK5WSzFW",
          "mode": "list",
          "cachedResultName": "SUB TAREA - Actualizar el nombre y el mail INMOBILIARIA"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "nombre": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nombre', `Cuando obtengas el nombre del cliente guardalo aqui`, 'string') }}",
            "telefono": "={{ $('V1').first().json.msg.telefono }}",
            "correo": "={{ $fromAI('correo', `Guarda el correo del usuario`, 'string') }}",
            "Id": "={{ $('Validar Cliente').first().json.list.last().Id}}",
            "table": "m097w4nkzri1xs1",
            "server": "={{ $('V1').item.json.datos.server_db }}",
            "tipoCliente": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('tipoCliente', `Debes agregar si es Particular o agenten inmobiliario`, 'string') }}",
            "inmobiliaria": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('inmobiliaria', `debes guardar el nombre de la inmobiliaria si lo tiene`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "nombre",
              "displayName": "nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "telefono",
              "displayName": "telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "correo",
              "displayName": "correo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "table",
              "displayName": "table",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true
            },
            {
              "id": "server",
              "displayName": "server",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "tipoCliente",
              "displayName": "tipoCliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "inmobiliaria",
              "displayName": "inmobiliaria",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        3136,
        2144
      ],
      "id": "fa2a4e0c-665a-45c0-9073-424b8d5a055c",
      "name": "insert_name_correo"
    },
    {
      "parameters": {
        "name": "get_details",
        "description": "Siempre llama a esta herramienta cuando el usuario quiera saber detalles de una propiedad",
        "workflowId": {
          "__rl": true,
          "value": "dYtOhM5ldqc0xj78",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('url', `url que el usuario compartió`, 'string') }}",
            "numero_telefono": "={{ $('V1').first().json.msg.telefono }}",
            "consulta_usuario": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('consulta_usuario', ``, 'string') }}",
            "idMensaje": "={{ $('Variables globales').first().json.msg.idmsg }}"
          },
          "matchingColumns": [
            "session_id"
          ],
          "schema": [
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "consulta_usuario",
              "displayName": "consulta_usuario",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "numero_telefono",
              "displayName": "numero_telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "instance",
              "displayName": "instance",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "apikey",
              "displayName": "apikey",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": true
            },
            {
              "id": "idMensaje",
              "displayName": "idMensaje",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "Id",
              "displayName": "Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        3520,
        2144
      ],
      "id": "e9ca9ef7-f32d-4817-83f6-7f219979dca6",
      "name": "get_details"
    },
    {
      "parameters": {
        "name": "send_message",
        "description": "llama a esta herramienta cuando  el usuario esta interesado en comprar o alquilar",
        "workflowId": {
          "__rl": true,
          "value": "GdA7h4vtZ4cVtdMf",
          "mode": "list",
          "cachedResultName": "AGENTE INMO - Send MSG agente"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "numero": "={{$('Variables globales').first().json.msg.telefono}}",
            "msg": "={{ $fromAI('msg', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "numero",
              "displayName": "numero",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "msg",
              "displayName": "msg",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        3344,
        2144
      ],
      "id": "3f4de935-02c6-4ab8-a550-710610fdc63d",
      "name": "send_message"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8nw.qeva.xyz",
            "content-length": "325",
            "accept": "application/json",
            "baggage": "sentry-environment=prod,sentry-public_key=470cc684690a2466aa1d4006cc631fb8,sentry-trace_id=5de02d067258b2c78256ad5b16e875cd,sentry-sample_rand=0.21957898539001142",
            "content-type": "application/json",
            "sentry-trace": "5de02d067258b2c78256ad5b16e875cd-09240016dd2793e5",
            "x-forwarded-for": "37.27.140.235",
            "x-forwarded-host": "n8nw.qeva.xyz",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "7697b68d06c2",
            "x-real-ip": "37.27.140.235",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "messages": [
              {
                "id": "GXTN8ZSJfzpPvLRYLY7Qyw-gMEE_sPfuT8",
                "from_me": false,
                "type": "text",
                "chat_id": "5492254423359@s.whatsapp.net",
                "timestamp": 1753770345,
                "source": "mobile",
                "chat_name": "Fer",
                "text": {
                  "body": "Si"
                },
                "from": "5492254423359",
                "from_name": "Fer { }"
              }
            ],
            "event": {
              "type": "messages",
              "event": "post"
            },
            "channel_id": "DRSTRG-R2GAJ"
          },
          "webhookUrl": "https://n8nw.qeva.xyz/webhook/inmobiliaria",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Argentina/Buenos_Aires",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "EBMwLGTBawYqkZM1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-29T06:37:08.754Z",
  "versionId": "d681a9ca-41d0-4680-a8a0-5541ac6daa5a"
}