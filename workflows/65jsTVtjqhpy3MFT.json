{
  "active": true,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Configuración",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configuración": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Citas Para Recordatorios": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Obtener Citas Para Recordatorios",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "MESSAGE10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Citas Para Recordatorios1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [],
        [
          {
            "node": "24h",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MESSAGE7": {
      "main": [
        []
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Obtener Citas Para Recordatorios1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MESSAGE2": {
      "main": [
        []
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Configuración1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configuración1": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Citas Para Recordatorios2": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Obtener Citas Para Recordatorios2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Citas Para Recordatorios3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "MESSAGE9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "1hs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MESSAGE3": {
      "main": [
        [
          {
            "node": "Obtener Citas Para Recordatorios3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "MESSAGE3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "24h": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MESSAGE8": {
      "main": [
        []
      ]
    },
    "MESSAGE9": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MESSAGE10": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1hs": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        []
      ]
    },
    "Preparar Consultas": {
      "main": [
        [
          {
            "node": "Obtener Citas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtener Citas": {
      "main": [
        [
          {
            "node": "¿Hay citas?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "¿Hay citas?": {
      "main": [
        [],
        [
          {
            "node": "Procesar Citas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Procesar Citas": {
      "main": [
        [
          {
            "node": "Generar Mensaje",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generar Mensaje": {
      "main": [
        [
          {
            "node": "Wait4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar WhatsApp": {
      "main": [
        [
          {
            "node": "Wait 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2": {
      "main": [
        [
          {
            "node": "Actualizar Estado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actualizar Estado": {
      "main": [
        [
          {
            "node": "Procesar Citas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger2": {
      "main": [
        [
          {
            "node": "Configuración2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configuración2": {
      "main": [
        [
          {
            "node": "Preparar Consultas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait4": {
      "main": [
        [
          {
            "node": "Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-04-29T17:18:10.783Z",
  "id": "65jsTVtjqhpy3MFT",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AGENTE INMO - CRON",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": "={{ 1 }}"
            }
          ]
        }
      },
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2000,
        -160
      ],
      "id": "ac52463a-e1ef-4b2a-94e3-b639023c6e01",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "72e698bf-381c-484e-99b6-81cdf2403225",
              "name": "server",
              "value": "https://db.innovasoftpro.dev",
              "type": "string"
            },
            {
              "id": "4ea2aac5-0b31-476a-b653-ba00ddf92f76",
              "name": "server_evolution",
              "value": "https://evo.innovasoftpro.dev",
              "type": "string"
            },
            {
              "id": "a7218a96-d39f-4435-b052-37719ddb5f2e",
              "name": "apikey",
              "value": "89EBC4C29BD1-4035-982B-DDF76B7D0A5F",
              "type": "string"
            },
            {
              "id": "a94bf000-0bbb-4ee0-a8c5-5132cc7d7a61",
              "name": "token",
              "value": "VQxKsHdwHJUyOV4dL6blf-Gvr2Dt2FqFv9nR6GCA",
              "type": "string"
            },
            {
              "id": "7c7e09da-80d8-4960-b2d3-287033e4bc93",
              "name": "table",
              "value": "mdyqlno73gz7aly",
              "type": "string"
            },
            {
              "id": "e5bcc5a9-1932-4b5c-9583-b6338dedfa67",
              "name": "timestamp",
              "value": "={{ DateTime.fromISO($json.timestamp).toFormat(\"yyyy-MM-dd'T'HH:mm\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1780,
        -160
      ],
      "id": "e1ee3469-b7f7-41d5-addb-0f89e16e8884",
      "name": "Configuración"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "p311nqyjsnx0fqq",
        "table": "={{ $node[\"Configuración\"].json.table }}",
        "returnAll": true,
        "options": {
          "fields": [],
          "where": "=(recordatorio_24h_enviado,eq,{{ $json.timestamp }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -1340,
        -160
      ],
      "id": "3b7e1b3e-cb14-48ff-bd51-8aa8888a0bc7",
      "name": "Obtener Citas Para Recordatorios",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": "={{ $('Loop Over Items1').context.done}}"
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -400,
        -180
      ],
      "id": "641de2fa-82cd-45b0-88d8-493359d3913f",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "jsCode": "// Obtener el timestamp actual como string (formato: \"2025-04-30T15:11\")\nconst timestampStr = $input.first().json.timestamp;\n\n// Separar la fecha y la hora\nconst [fecha, hora] = timestampStr.split('T');\nconst [horas, minutos] = hora.split(':').map(num => parseInt(num, 10));\n\n// Calcular horas y minutos para +5 minutos\nlet horasPlus = horas;\nlet minutosPlus = minutos + 5;\nif (minutosPlus >= 60) {\n  minutosPlus = minutosPlus - 60;\n  horasPlus = (horasPlus + 1) % 24;\n}\n\n// Calcular horas y minutos para -5 minutos\nlet horasMinus = horas;\nlet minutosMinus = minutos - 5;\nif (minutosMinus < 0) {\n  minutosMinus = minutosMinus + 60;\n  horasMinus = (horasMinus - 1 + 24) % 24;\n}\n\n// Formatear de vuelta a strings\nconst horasPlus_str = String(horasPlus).padStart(2, '0');\nconst minutosPlus_str = String(minutosPlus).padStart(2, '0');\nconst timestamp_plus5 = `${fecha}T${horasPlus_str}:${minutosPlus_str}`;\n\nconst horasMinus_str = String(horasMinus).padStart(2, '0');\nconst minutosMinus_str = String(minutosMinus).padStart(2, '0');\nconst timestamp_minus5 = `${fecha}T${horasMinus_str}:${minutosMinus_str}`;\n\n// Devolver los resultados\nreturn {\n  json: {\n    ...($input.first().json),\n    timestamp_original: timestampStr,\n    timestamp_minus5: timestamp_minus5,\n    timestamp_plus5: timestamp_plus5\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1560,
        -160
      ],
      "id": "5c69d077-7917-48d2-99de-8f5e590836bc",
      "name": "Code1"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "update",
        "projectId": "p311nqyjsnx0fqq",
        "table": "={{ $node[\"Configuración\"].json.table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Id",
              "fieldValue": "={{ $('Obtener Citas Para Recordatorios').item.json.Id }}"
            },
            {
              "fieldName": "=recordatorio_24h",
              "fieldValue": "enviado"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        480,
        -180
      ],
      "id": "a6b3f2f7-fe7c-40aa-bc3f-8c10e5c83ce7",
      "name": "Obtener Citas Para Recordatorios1",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -160,
        -240
      ],
      "id": "61237a40-0472-425a-8c9c-67740dcbc398",
      "name": "Wait",
      "webhookId": "597bb0a1-341b-41fa-bf9d-17fd75a03ee6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "09891ed6-0d0b-41c5-b3b2-187d854f3dde",
              "leftValue": "={{ $json.recordatorio_24h }}",
              "rightValue": "enviado",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -860,
        -240
      ],
      "id": "21ba7011-01f6-4314-acc4-35564a4a8b36",
      "name": "If1"
    },
    {
      "parameters": {
        "batchSize": "=1",
        "options": {}
      },
      "id": "0feacae3-f2e9-427a-aeb9-074e207057cc",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1060,
        -160
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Code1').first().json.server_evolution }}/message/sendText/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Configuración').first().json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"delay\": 1600,\n  \"number\": \"{{ $('Obtener Citas Para Recordatorios').item.json.Telefono }}\",\n  \"text\": \"{{ $json.text.replace(/\\n/g,'\\\\n').replace(/\\\"/g,'\\'') }}\",\n  \"quoted\": {\n    \"key\": {\n      \"id\": \"{{ $json.id_mensaje }}\",\n      \"remoteJid\": \"{{ $('Obtener Citas Para Recordatorios').item.json.Telefono }}\",\n      \"fromMe\": false\n    }\n  }\n}\n",
        "options": {}
      },
      "id": "a7dcd307-f798-42a6-9ffb-86a5446e69fb",
      "name": "MESSAGE7",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1220,
        -400
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Code1').first().json.server_evolution }}/message/sendReaction/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Configuración').first().json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={   \n    \"key\": {\n        \"remoteJid\": \"{{ $json.key.remoteJid }}\",\n        \"fromMe\":{{ $json.key.fromMe }} ,\n        \"id\": \"{{ $json.key.id }}\"\n    },\n    \"reaction\": \"🕦\"\n} ",
        "options": {}
      },
      "id": "29d36a45-05f3-4ae3-a326-a0b124cc91ca",
      "name": "MESSAGE2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1020,
        -580
      ],
      "disabled": true
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        240,
        -240
      ],
      "id": "4e439151-aaa3-4998-bc74-f998bfd10534",
      "name": "Wait1",
      "webhookId": "597bb0a1-341b-41fa-bf9d-17fd75a03ee6"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "name": "Schedule Trigger1",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1980,
        215
      ],
      "id": "07faef13-6d40-4f3c-8e33-270e3464936a",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "72e698bf-381c-484e-99b6-81cdf2403225",
              "name": "server",
              "value": "https://db.innovasoftpro.dev",
              "type": "string"
            },
            {
              "id": "4ea2aac5-0b31-476a-b653-ba00ddf92f76",
              "name": "server_evolution",
              "value": "https://evo.innovasoftpro.dev",
              "type": "string"
            },
            {
              "id": "a7218a96-d39f-4435-b052-37719ddb5f2e",
              "name": "apikey",
              "value": "89EBC4C29BD1-4035-982B-DDF76B7D0A5F",
              "type": "string"
            },
            {
              "id": "a94bf000-0bbb-4ee0-a8c5-5132cc7d7a61",
              "name": "token",
              "value": "VQxKsHdwHJUyOV4dL6blf-Gvr2Dt2FqFv9nR6GCA",
              "type": "string"
            },
            {
              "id": "7c7e09da-80d8-4960-b2d3-287033e4bc93",
              "name": "table",
              "value": "mdyqlno73gz7aly",
              "type": "string"
            },
            {
              "id": "e5bcc5a9-1932-4b5c-9583-b6338dedfa67",
              "name": "timestamp",
              "value": "={{ DateTime.fromISO($json.timestamp).toFormat(\"yyyy-MM-dd'T'HH:mm\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1760,
        215
      ],
      "id": "1abd4d38-54c8-48b4-9f1d-e03e4e8ec0b0",
      "name": "Configuración1"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "p311nqyjsnx0fqq",
        "table": "mdyqlno73gz7aly",
        "returnAll": true,
        "options": {
          "fields": [],
          "where": "=(recordatorio_1h_enviado,eq,{{ $json.timestamp }})"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -1320,
        220
      ],
      "id": "ede38e41-d217-4f79-86e4-f0fb68d34779",
      "name": "Obtener Citas Para Recordatorios2",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": "={{ $('Loop Over Items').context.done}}"
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -440,
        215
      ],
      "id": "19126f21-695b-43d8-897f-ce18570bfafe",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "// Obtener el timestamp actual como string (formato: \"2025-04-30T15:11\")\nconst timestampStr = $input.first().json.timestamp;\n\n// Separar la fecha y la hora\nconst [fecha, hora] = timestampStr.split('T');\nconst [horas, minutos] = hora.split(':').map(num => parseInt(num, 10));\n\n// Calcular horas y minutos para +5 minutos\nlet horasPlus = horas;\nlet minutosPlus = minutos + 5;\nif (minutosPlus >= 60) {\n  minutosPlus = minutosPlus - 60;\n  horasPlus = (horasPlus + 1) % 24;\n}\n\n// Calcular horas y minutos para -5 minutos\nlet horasMinus = horas;\nlet minutosMinus = minutos - 5;\nif (minutosMinus < 0) {\n  minutosMinus = minutosMinus + 60;\n  horasMinus = (horasMinus - 1 + 24) % 24;\n}\n\n// Formatear de vuelta a strings\nconst horasPlus_str = String(horasPlus).padStart(2, '0');\nconst minutosPlus_str = String(minutosPlus).padStart(2, '0');\nconst timestamp_plus5 = `${fecha}T${horasPlus_str}:${minutosPlus_str}`;\n\nconst horasMinus_str = String(horasMinus).padStart(2, '0');\nconst minutosMinus_str = String(minutosMinus).padStart(2, '0');\nconst timestamp_minus5 = `${fecha}T${horasMinus_str}:${minutosMinus_str}`;\n\n// Devolver los resultados\nreturn {\n  json: {\n    ...($input.first().json),\n    timestamp_original: timestampStr,\n    timestamp_minus5: timestamp_minus5,\n    timestamp_plus5: timestamp_plus5\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1540,
        215
      ],
      "id": "95f1a5ee-ef72-4d6f-a51f-7df71f4a49b3",
      "name": "Code3"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "update",
        "projectId": "p311nqyjsnx0fqq",
        "table": "={{ $node[\"Configuración1\"].json.table }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Id",
              "fieldValue": "={{ $('Obtener Citas Para Recordatorios2').item.json.Id }}"
            },
            {
              "fieldName": "=recordatorio_1h",
              "fieldValue": "enviado"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        620,
        200
      ],
      "id": "9e29f6f7-8ecf-4156-8fd1-7e1eb7607d5f",
      "name": "Obtener Citas Para Recordatorios3",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -220,
        140
      ],
      "id": "212156e7-943b-4433-99a8-4a50b1f4511d",
      "name": "Wait2",
      "webhookId": "597bb0a1-341b-41fa-bf9d-17fd75a03ee6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "09891ed6-0d0b-41c5-b3b2-187d854f3dde",
              "leftValue": "={{ $json.recordatorio_1h }}",
              "rightValue": "enviado",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -880,
        140
      ],
      "id": "748e488e-c145-4cfe-8173-84832c5f8cda",
      "name": "If"
    },
    {
      "parameters": {
        "batchSize": "=1",
        "options": {}
      },
      "id": "ba851c6d-2696-4141-87db-a8529adf5cbb",
      "name": "Loop Over Items4",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1100,
        215
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Code3').first().json.server_evolution }}/message/sendReaction/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Configuración1').first().json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={   \n    \"key\": {\n        \"remoteJid\": \"{{ $json.key.remoteJid }}\",\n        \"fromMe\":{{ $json.key.fromMe }} ,\n        \"id\": \"{{ $json.key.id }}\"\n    },\n    \"reaction\": \"🕦\"\n} ",
        "options": {}
      },
      "id": "7cc86e94-253b-4a59-83e5-4eb91a43f253",
      "name": "MESSAGE3",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        420,
        140
      ]
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        200,
        140
      ],
      "id": "54bdf4a7-2599-4a5e-9710-5ee42d4a0ba4",
      "name": "Wait3",
      "webhookId": "597bb0a1-341b-41fa-bf9d-17fd75a03ee6"
    },
    {
      "parameters": {
        "jsCode": "// Obtener datos de la cita\nconst datos = $input.first().json;\n\n// Extraer información necesaria\nconst nombre = datos.Nombre || \"Cliente\";\nconst propiedad = datos.Propiedad || \"la propiedad (dirección no especificada)\";\nconst fechaCita = datos.Fecha_cita || \"\";\nconst telefono = datos.Telefono || \"\";\nconst id_mensaje = datos.id_mensaje || \"\"; // Agregamos el id_mensaje que viene de nocodb\nconst tipoRecordatorio = datos.tipoRecordatorio || \"24h\"; // Tipo de recordatorio (1h o 24h)\n\n// Formatear fecha para mostrar de manera amigable\nfunction formatearFecha(fechaStr) {\n  try {\n    if (!fechaStr) return \"fecha no especificada\";\n    \n    const [fecha, hora] = fechaStr.split('T');\n    const [anio, mes, dia] = fecha.split('-');\n    return {\n      fechaCompleta: `${dia}/${mes}/${anio} a las ${hora}`,\n      diaMes: `${dia}/${mes}`,\n      hora: hora\n    };\n  } catch (e) {\n    return {\n      fechaCompleta: fechaStr,\n      diaMes: fechaStr,\n      hora: \"\"\n    };\n  }\n}\n\nconst infoFecha = formatearFecha(fechaCita);\n\n// Generar mensaje según el tipo de recordatorio\nlet mensaje = \"\";\n\nif (tipoRecordatorio === \"24h\") {\n  // Mensaje para recordatorio de 24 horas\n mensaje = `Hola ${nombre} te escribo para confirmarte la visita de mañana en ${propiedad} a las ${infoFecha.hora}hs. Te esperamos.\\n\\n*Este es un mensaje automatizado, no hace falta que responda.*`;\n \n  \n} \n\n// Devolver objeto con la información para enviar el mensaje\nreturn {\n  json: {\n    ...datos,\n    tipoRecordatorio: tipoRecordatorio,\n    mensaje: mensaje,\n    telefono_formateado: telefono.replace(/\\D/g, ''), // Eliminar caracteres no numéricos\n    text: mensaje, // Para compatibilidad con diferentes nodos de WhatsApp\n    id_mensaje: id_mensaje // Incluimos el id_mensaje en el objeto de retorno\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -640,
        -220
      ],
      "id": "a4fffc54-21bf-49b6-bd8e-3a0762be45ec",
      "name": "24h",
      "retryOnFail": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Code1').first().json.server_evolution }}/message/sendText/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Configuración').first().json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"delay\": 1600,\n  \"number\": \"{{ $('Obtener Citas Para Recordatorios').item.json.Telefono }}\",\n  \"text\": \"{{ $json.text.replace(/\\n/g,'\\\\n').replace(/\\\"/g,'\\'') }}\"  \n}\n",
        "options": {}
      },
      "id": "ee23e0a0-a531-4ba1-aee8-ba16beeccf04",
      "name": "MESSAGE8",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        -960
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Code3').first().json.server_evolution }}/message/sendText/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Configuración1').first().json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"delay\": 1600,\n  \"number\": \"{{ $('Obtener Citas Para Recordatorios2').item.json.Telefono }}\",\n  \"text\": \"{{ $json.text.replace(/\\n/g,'\\\\n').replace(/\\\"/g,'\\'') }}\"  \n}\n",
        "options": {}
      },
      "id": "0b53033f-e432-41dd-9b4f-3df8267349b6",
      "name": "MESSAGE9",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        0,
        140
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Code1').first().json.server_evolution }}/message/sendText/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('Configuración').first().json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n   \"delay\": 1600,\n  \"number\": \"{{ $('Obtener Citas Para Recordatorios').item.json.Telefono }}\",\n  \"text\": \"{{ $('24h').item.json.mensaje.replace(/\\n/g,'\\\\n').replace(/\\\"/g,'\\'') }}\"  \n}\n",
        "options": {}
      },
      "id": "1d8e8a86-7e0c-4f06-8945-f84ee6d62d0b",
      "name": "MESSAGE10",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        40,
        -240
      ]
    },
    {
      "parameters": {
        "jsCode": "// Obtener datos de la cita\nconst datos = $input.first().json;\n\n// Extraer información necesaria\nconst nombre = datos.Nombre || \"Cliente\";\nconst propiedad = datos.Propiedad || \"la propiedad (dirección no especificada)\";\nconst fechaCita = datos.Fecha_cita || \"\";\nconst telefono = datos.Telefono || \"\";\nconst id_mensaje = datos.id_mensaje || \"\"; // Agregamos el id_mensaje que viene de nocodb\nconst tipoRecordatorio = datos.tipoRecordatorio || \"24h\"; // Tipo de recordatorio (1h o 24h)\n\n// Formatear fecha para mostrar de manera amigable\nfunction formatearFecha(fechaStr) {\n  try {\n    if (!fechaStr) return \"fecha no especificada\";\n    \n    const [fecha, hora] = fechaStr.split('T');\n    const [anio, mes, dia] = fecha.split('-');\n    return {\n      fechaCompleta: `${dia}/${mes}/${anio} a las ${hora}`,\n      diaMes: `${dia}/${mes}`,\n      hora: hora\n    };\n  } catch (e) {\n    return {\n      fechaCompleta: fechaStr,\n      diaMes: fechaStr,\n      hora: \"\"\n    };\n  }\n}\n\nconst infoFecha = formatearFecha(fechaCita);\n\n// Generar mensaje según el tipo de recordatorio\nlet mensaje = \"\";\n\nif (tipoRecordatorio === \"24h\") {\n  // Mensaje para recordatorio de 24 horas\n  mensaje = `Hola ${nombre} te escribo para recordarle que en una hora lo espero en ${propiedad} a las ${infoFecha.hora}hs. ` \n  \n} \n\n// Devolver objeto con la información para enviar el mensaje\nreturn {\n  json: {\n    ...datos,\n    tipoRecordatorio: tipoRecordatorio,\n    mensaje: mensaje,\n    telefono_formateado: telefono.replace(/\\D/g, ''), // Eliminar caracteres no numéricos\n    text: mensaje, // Para compatibilidad con diferentes nodos de WhatsApp\n    id_mensaje: id_mensaje // Incluimos el id_mensaje en el objeto de retorno\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -660,
        220
      ],
      "id": "39a441d1-8194-49a0-8f41-7dfd9eab6de1",
      "name": "1hs",
      "retryOnFail": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "respondWith": "redirect",
        "redirectURL": "https://n8n.innovasoftpro.dev/webhook/tester-nuevo",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1520,
        -80
      ],
      "id": "b5349e2f-7c09-441c-824a-7b21fdee097b",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "jsCode": "// Obtener timestamp actual\nconst timestamp = $input.first().json.timestamp;\n\n// Crear consultas para ambos tipos de recordatorio\nconst queries = [\n  {\n    tipo: '24h',\n    campo: 'recordatorio_24h_enviado',\n    where: `(recordatorio_24h_enviado,eq,${timestamp})`,\n    updateField: 'recordatorio_24h'\n  },\n  {\n    tipo: '1h', \n    campo: 'recordatorio_1h_enviado',\n    where: `(recordatorio_1h_enviado,eq,${timestamp})`,\n    updateField: 'recordatorio_1h'\n  }\n];\n\nreturn queries.map(query => ({\n  json: {\n    ...($input.first().json),\n    tipoRecordatorio: query.tipo,\n    whereCondition: query.where,\n    updateField: query.updateField\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1720,
        -800
      ],
      "id": "667d32da-8f08-4372-8f25-1b14c3544b6d",
      "name": "Preparar Consultas"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "getAll",
        "projectId": "p4sjkkdf4pdtyvh",
        "table": "=mqjswve4r6jiqxv",
        "returnAll": true,
        "options": {
          "where": "={{ $json.whereCondition }}"
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -1520,
        -800
      ],
      "id": "aa0ed82f-896d-4d7d-8026-4111cd00235c",
      "name": "Obtener Citas",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.length }}",
              "rightValue": "0",
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1320,
        -800
      ],
      "id": "8f199574-0cc8-48e8-8c18-e0167349dbbd",
      "name": "¿Hay citas?"
    },
    {
      "parameters": {
        "batchSize": "1",
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1100,
        -820
      ],
      "id": "9f9c88c1-c39a-46ca-8976-12426ce84eea",
      "name": "Procesar Citas"
    },
    {
      "parameters": {
        "jsCode": "// Obtener datos de la cita y configuración\nconst cita = $input.item(0).json;\nconst config = $input.item(1).json;\nconst tipoRecordatorio = config.tipoRecordatorio;\n\n// Extraer información de la cita\nconst nombre = cita.Nombre || \"Cliente\";\nconst propiedad = cita.Propiedad || \"la propiedad\";\nconst fechaCita = cita.Fecha_cita || \"\";\nconst telefono = cita.Telefono || \"\";\n\n// Formatear fecha\nfunction formatearFecha(fechaStr) {\n  try {\n    if (!fechaStr) return { hora: \"\" };\n    const [fecha, hora] = fechaStr.split('T');\n    return { hora: hora };\n  } catch (e) {\n    return { hora: \"\" };\n  }\n}\n\nconst infoFecha = formatearFecha(fechaCita);\n\n// Generar mensaje según tipo de recordatorio\nlet mensaje = \"\";\n\nif (tipoRecordatorio === \"24h\") {\n  mensaje = `Hola ${nombre} te escribo para confirmarte la visita de mañana en ${propiedad} a las ${infoFecha.hora}hs. Te esperamos.\\n\\n*Este es un mensaje automatizado, no hace falta que responda.*`;\n} else if (tipoRecordatorio === \"1h\") {\n  mensaje = `Hola ${nombre} te escribo para recordarle que en una hora lo espero en ${propiedad} a las ${infoFecha.hora}hs.`;\n}\n\nreturn {\n  json: {\n    ...cita,\n    ...config,\n    mensaje: mensaje,\n    telefono_limpio: telefono.replace(/\\D/g, '')\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -920,
        -840
      ],
      "id": "a49706c6-9944-4af9-8537-072c155d1feb",
      "name": "Generar Mensaje"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.server_evolution }}/message/sendText/tester",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $json.apikey }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"delay\": 1600,\n  \"number\": \"{{ $json.Telefono }}\",\n  \"text\": \"{{ $json.mensaje.replace(/\\n/g,'\\\\n').replace(/\\\"/g,'\\'') }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -520,
        -840
      ],
      "id": "8aa59d53-edd6-4638-bcab-ac6edfdaa26c",
      "name": "Enviar WhatsApp"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -320,
        -840
      ],
      "id": "a636bfad-2126-4f25-b7d2-c82780df4dd9",
      "name": "Wait 2",
      "webhookId": "9289d75e-bc9e-4cbd-acec-94e4f7553265"
    },
    {
      "parameters": {
        "authentication": "nocoDbApiToken",
        "operation": "update",
        "projectId": "p4sjkkdf4pdtyvh",
        "table": "=mqjswve4r6jiqxv",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldName": "Id",
              "fieldValue": "={{ $json.Id }}"
            },
            {
              "fieldName": "={{ $json.updateField }}",
              "fieldValue": "enviado"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.nocoDb",
      "typeVersion": 3,
      "position": [
        -120,
        -840
      ],
      "id": "3954b273-9f90-49ce-8795-4196a3fb7c6c",
      "name": "Actualizar Estado",
      "credentials": {
        "nocoDbApiToken": {
          "id": "CawnXo6TfhLoivTw",
          "name": "NocoDB Token account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": "1"
            }
          ]
        }
      },
      "name": "Schedule Trigger2",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -2120,
        -800
      ],
      "id": "fed4689b-abc3-44da-9f9c-45bc84ce159e"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "server",
              "name": "server",
              "value": "https://db.innovasoftpro.dev",
              "type": "string"
            },
            {
              "id": "server_evolution",
              "name": "server_evolution",
              "value": "https://evo.innovasoftpro.dev",
              "type": "string"
            },
            {
              "id": "apikey",
              "name": "apikey",
              "value": "89EBC4C29BD1-4035-982B-DDF76B7D0A5F",
              "type": "string"
            },
            {
              "id": "table",
              "name": "table",
              "value": "mdyqlno73gz7aly",
              "type": "string"
            },
            {
              "id": "timestamp",
              "name": "timestamp",
              "value": "={{ DateTime.fromISO($json.timestamp).toFormat(\"yyyy-MM-dd'T'HH:mm\") }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1920,
        -800
      ],
      "id": "bd53c880-e199-4944-a1be-8bb648c46711",
      "name": "Configuración2"
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -720,
        -840
      ],
      "id": "96f96ffd-9f23-4e97-8d4e-89407a849aec",
      "name": "Wait4",
      "webhookId": "3bae24be-defe-4dd7-9771-56a360825198"
    }
  ],
  "pinData": {
    "Schedule Trigger1": [
      {
        "json": {
          "timestamp": "2025-05-09T18:19:24.005-03:00",
          "Readable date": "May 9th 2025, 6:19:24 pm",
          "Readable time": "6:19:24 pm",
          "Day of week": "Friday",
          "Year": "2025",
          "Month": "May",
          "Day of month": "09",
          "Hour": "18",
          "Minute": "19",
          "Second": "24",
          "Timezone": "America/Argentina/Buenos_Aires (UTC-03:00)"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Argentina/Buenos_Aires",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "2kOn0Oz7c2uvczPK"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger2": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-05-30T06:18:33.658Z",
  "versionId": "707b3ab5-aa0c-463b-9702-7b3d81d8971c"
}